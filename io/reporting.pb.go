// Code generated by protoc-gen-go. DO NOT EDIT.
// source: io/common/reporting.proto

package io

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Period int32

const (
	// Show individual data by day.
	Period_DAY Period = 0
	// Default response will be in months.
	Period_MONTH Period = 1
	// Show individual data by year.
	Period_YEAR Period = 2
)

var Period_name = map[int32]string{
	0: "DAY",
	1: "MONTH",
	2: "YEAR",
}

var Period_value = map[string]int32{
	"DAY":   0,
	"MONTH": 1,
	"YEAR":  2,
}

func (x Period) String() string {
	return proto.EnumName(Period_name, int32(x))
}

func (Period) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d8beb6db730b9245, []int{0}
}

type AnalyticsResponse struct {
	// The Period that the response data is grouped by by: per DAY, MONTH or YEAR.
	Period Period `protobuf:"varint,1,opt,name=period,proto3,enum=io.Period" json:"period,omitempty"`
	// Total number of passes created during the requested period.
	Created uint32 `protobuf:"varint,2,opt,name=created,proto3" json:"created,omitempty"`
	// Total number of passes installed during the requested period.
	Installed uint32 `protobuf:"varint,3,opt,name=installed,proto3" json:"installed,omitempty"`
	// Total number of passes deleted during the requested period.
	Deleted uint32 `protobuf:"varint,4,opt,name=deleted,proto3" json:"deleted,omitempty"`
	// Total number of passes invalidated during the requested period.
	Invalidated uint32 `protobuf:"varint,5,opt,name=invalidated,proto3" json:"invalidated,omitempty"`
	// Total number of passes installed for each device type.
	DeviceBreakdown *DeviceBreakdown `protobuf:"bytes,6,opt,name=deviceBreakdown,proto3" json:"deviceBreakdown,omitempty"`
	// Total number of passes installed for each distribution source.
	SourceBreakdown map[string]uint32 `protobuf:"bytes,7,rep,name=sourceBreakdown,proto3" json:"sourceBreakdown,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// Breakdown of data by day, month or year.
	Data                 []*ChartDataPoints `protobuf:"bytes,8,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *AnalyticsResponse) Reset()         { *m = AnalyticsResponse{} }
func (m *AnalyticsResponse) String() string { return proto.CompactTextString(m) }
func (*AnalyticsResponse) ProtoMessage()    {}
func (*AnalyticsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8beb6db730b9245, []int{0}
}

func (m *AnalyticsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnalyticsResponse.Unmarshal(m, b)
}
func (m *AnalyticsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnalyticsResponse.Marshal(b, m, deterministic)
}
func (m *AnalyticsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnalyticsResponse.Merge(m, src)
}
func (m *AnalyticsResponse) XXX_Size() int {
	return xxx_messageInfo_AnalyticsResponse.Size(m)
}
func (m *AnalyticsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AnalyticsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AnalyticsResponse proto.InternalMessageInfo

func (m *AnalyticsResponse) GetPeriod() Period {
	if m != nil {
		return m.Period
	}
	return Period_DAY
}

func (m *AnalyticsResponse) GetCreated() uint32 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *AnalyticsResponse) GetInstalled() uint32 {
	if m != nil {
		return m.Installed
	}
	return 0
}

func (m *AnalyticsResponse) GetDeleted() uint32 {
	if m != nil {
		return m.Deleted
	}
	return 0
}

func (m *AnalyticsResponse) GetInvalidated() uint32 {
	if m != nil {
		return m.Invalidated
	}
	return 0
}

func (m *AnalyticsResponse) GetDeviceBreakdown() *DeviceBreakdown {
	if m != nil {
		return m.DeviceBreakdown
	}
	return nil
}

func (m *AnalyticsResponse) GetSourceBreakdown() map[string]uint32 {
	if m != nil {
		return m.SourceBreakdown
	}
	return nil
}

func (m *AnalyticsResponse) GetData() []*ChartDataPoints {
	if m != nil {
		return m.Data
	}
	return nil
}

type DeviceBreakdown struct {
	// Total number of passes installed in Apple Wallet.
	AppleWallet uint32 `protobuf:"varint,1,opt,name=appleWallet,proto3" json:"appleWallet,omitempty"`
	// Total number of passes installed in Google Pay.
	GooglePay uint32 `protobuf:"varint,2,opt,name=googlePay,proto3" json:"googlePay,omitempty"`
	// Total number of passes installed in Other Wallet.
	OtherWallet          uint32   `protobuf:"varint,3,opt,name=otherWallet,proto3" json:"otherWallet,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceBreakdown) Reset()         { *m = DeviceBreakdown{} }
func (m *DeviceBreakdown) String() string { return proto.CompactTextString(m) }
func (*DeviceBreakdown) ProtoMessage()    {}
func (*DeviceBreakdown) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8beb6db730b9245, []int{1}
}

func (m *DeviceBreakdown) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceBreakdown.Unmarshal(m, b)
}
func (m *DeviceBreakdown) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceBreakdown.Marshal(b, m, deterministic)
}
func (m *DeviceBreakdown) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceBreakdown.Merge(m, src)
}
func (m *DeviceBreakdown) XXX_Size() int {
	return xxx_messageInfo_DeviceBreakdown.Size(m)
}
func (m *DeviceBreakdown) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceBreakdown.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceBreakdown proto.InternalMessageInfo

func (m *DeviceBreakdown) GetAppleWallet() uint32 {
	if m != nil {
		return m.AppleWallet
	}
	return 0
}

func (m *DeviceBreakdown) GetGooglePay() uint32 {
	if m != nil {
		return m.GooglePay
	}
	return 0
}

func (m *DeviceBreakdown) GetOtherWallet() uint32 {
	if m != nil {
		return m.OtherWallet
	}
	return 0
}

type ChartDataPoints struct {
	// ie. January, Monday
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Daily, monthly or yearly total of pass created.
	Created uint32 `protobuf:"varint,2,opt,name=created,proto3" json:"created,omitempty"`
	// Daily, monthly or yearly total of pass installed.
	Installed uint32 `protobuf:"varint,3,opt,name=installed,proto3" json:"installed,omitempty"`
	// Daily, monthly or yearly total of pass updated.
	Updated uint32 `protobuf:"varint,4,opt,name=updated,proto3" json:"updated,omitempty"`
	// Daily, monthly or yearly total of pass deleted.
	Deleted uint32 `protobuf:"varint,5,opt,name=deleted,proto3" json:"deleted,omitempty"`
	// Daily, monthly or yearly total of pass invalidated.
	Invalidated uint32 `protobuf:"varint,6,opt,name=invalidated,proto3" json:"invalidated,omitempty"`
	// Daily, monthly or yearly total of custom data (in case this field used by a protocol; it can put whatever is preferred in here).
	Custom               uint32   `protobuf:"varint,7,opt,name=custom,proto3" json:"custom,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChartDataPoints) Reset()         { *m = ChartDataPoints{} }
func (m *ChartDataPoints) String() string { return proto.CompactTextString(m) }
func (*ChartDataPoints) ProtoMessage()    {}
func (*ChartDataPoints) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8beb6db730b9245, []int{2}
}

func (m *ChartDataPoints) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartDataPoints.Unmarshal(m, b)
}
func (m *ChartDataPoints) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartDataPoints.Marshal(b, m, deterministic)
}
func (m *ChartDataPoints) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartDataPoints.Merge(m, src)
}
func (m *ChartDataPoints) XXX_Size() int {
	return xxx_messageInfo_ChartDataPoints.Size(m)
}
func (m *ChartDataPoints) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartDataPoints.DiscardUnknown(m)
}

var xxx_messageInfo_ChartDataPoints proto.InternalMessageInfo

func (m *ChartDataPoints) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ChartDataPoints) GetCreated() uint32 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *ChartDataPoints) GetInstalled() uint32 {
	if m != nil {
		return m.Installed
	}
	return 0
}

func (m *ChartDataPoints) GetUpdated() uint32 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *ChartDataPoints) GetDeleted() uint32 {
	if m != nil {
		return m.Deleted
	}
	return 0
}

func (m *ChartDataPoints) GetInvalidated() uint32 {
	if m != nil {
		return m.Invalidated
	}
	return 0
}

func (m *ChartDataPoints) GetCustom() uint32 {
	if m != nil {
		return m.Custom
	}
	return 0
}

type AnalyticsRequest struct {
	// The protocol that you are requesting analytics for, i.e. MEMBERSHIP, SINGLE_USE_COUPON, EVENT_TICKETS, FLIGHTS, etc.
	Protocol PassProtocol `protobuf:"varint,1,opt,name=protocol,proto3,enum=io.PassProtocol" json:"protocol,omitempty"`
	// The ID of the highest level element in the protocol. For Membership this is the Program ID, for coupons this is the Campaign ID, For Event Tickets this is Production.
	ClassId string `protobuf:"bytes,2,opt,name=classId,proto3" json:"classId,omitempty"`
	// The Period to group the response data by: per DAY, MONTH or YEAR.
	Period Period `protobuf:"varint,3,opt,name=period,proto3,enum=io.Period" json:"period,omitempty"`
	// Start date sets the oldest date of the data to be shown.
	StartDate string `protobuf:"bytes,4,opt,name=startDate,proto3" json:"startDate,omitempty"`
	// End date sets the latest date of the data to be shown.
	EndDate string `protobuf:"bytes,5,opt,name=endDate,proto3" json:"endDate,omitempty"`
	// Timezone in IANA format; defaults to UTC if not provided.
	Timezone             string   `protobuf:"bytes,6,opt,name=timezone,proto3" json:"timezone,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AnalyticsRequest) Reset()         { *m = AnalyticsRequest{} }
func (m *AnalyticsRequest) String() string { return proto.CompactTextString(m) }
func (*AnalyticsRequest) ProtoMessage()    {}
func (*AnalyticsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8beb6db730b9245, []int{3}
}

func (m *AnalyticsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnalyticsRequest.Unmarshal(m, b)
}
func (m *AnalyticsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnalyticsRequest.Marshal(b, m, deterministic)
}
func (m *AnalyticsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnalyticsRequest.Merge(m, src)
}
func (m *AnalyticsRequest) XXX_Size() int {
	return xxx_messageInfo_AnalyticsRequest.Size(m)
}
func (m *AnalyticsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AnalyticsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AnalyticsRequest proto.InternalMessageInfo

func (m *AnalyticsRequest) GetProtocol() PassProtocol {
	if m != nil {
		return m.Protocol
	}
	return PassProtocol_PASS_PROTOCOL_DO_NOT_USE
}

func (m *AnalyticsRequest) GetClassId() string {
	if m != nil {
		return m.ClassId
	}
	return ""
}

func (m *AnalyticsRequest) GetPeriod() Period {
	if m != nil {
		return m.Period
	}
	return Period_DAY
}

func (m *AnalyticsRequest) GetStartDate() string {
	if m != nil {
		return m.StartDate
	}
	return ""
}

func (m *AnalyticsRequest) GetEndDate() string {
	if m != nil {
		return m.EndDate
	}
	return ""
}

func (m *AnalyticsRequest) GetTimezone() string {
	if m != nil {
		return m.Timezone
	}
	return ""
}

func init() {
	proto.RegisterEnum("io.Period", Period_name, Period_value)
	proto.RegisterType((*AnalyticsResponse)(nil), "io.AnalyticsResponse")
	proto.RegisterMapType((map[string]uint32)(nil), "io.AnalyticsResponse.SourceBreakdownEntry")
	proto.RegisterType((*DeviceBreakdown)(nil), "io.DeviceBreakdown")
	proto.RegisterType((*ChartDataPoints)(nil), "io.ChartDataPoints")
	proto.RegisterType((*AnalyticsRequest)(nil), "io.AnalyticsRequest")
}

func init() {
	proto.RegisterFile("io/common/reporting.proto", fileDescriptor_d8beb6db730b9245)
}

var fileDescriptor_d8beb6db730b9245 = []byte{
	// 564 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x53, 0x5d, 0x6b, 0xd4, 0x40,
	0x14, 0x35, 0xfb, 0x9d, 0x5b, 0xea, 0xc6, 0xb1, 0x48, 0x2c, 0x7d, 0x58, 0x16, 0xd1, 0xa5, 0x48,
	0x02, 0xf5, 0x45, 0x04, 0x85, 0xd6, 0x16, 0x2c, 0x45, 0x0d, 0x63, 0x41, 0xea, 0xdb, 0x98, 0x5c,
	0xb6, 0xc3, 0x26, 0x73, 0x63, 0x66, 0xb6, 0xb2, 0xfe, 0x24, 0xc1, 0x5f, 0xe2, 0x9b, 0xbf, 0x48,
	0x32, 0x99, 0xb6, 0xe9, 0x56, 0x7d, 0xf1, 0x2d, 0xe7, 0x9c, 0xb9, 0x27, 0x73, 0xef, 0x3d, 0x03,
	0x0f, 0x25, 0xc5, 0x29, 0x15, 0x05, 0xa9, 0xb8, 0xc2, 0x92, 0x2a, 0x23, 0xd5, 0x3c, 0x2a, 0x2b,
	0x32, 0xc4, 0x3a, 0x92, 0xb6, 0x5b, 0xb2, 0x25, 0x53, 0xca, 0x75, 0x23, 0x4f, 0x7f, 0x74, 0xe1,
	0xde, 0xbe, 0x12, 0xf9, 0xca, 0xc8, 0x54, 0x73, 0xd4, 0x25, 0x29, 0x8d, 0x6c, 0x0a, 0x83, 0x12,
	0x2b, 0x49, 0x59, 0xe8, 0x4d, 0xbc, 0xd9, 0xdd, 0x3d, 0x88, 0x24, 0x45, 0x89, 0x65, 0xb8, 0x53,
	0x58, 0x08, 0xc3, 0xb4, 0x42, 0x61, 0x30, 0x0b, 0x3b, 0x13, 0x6f, 0xb6, 0xc9, 0x2f, 0x21, 0xdb,
	0x01, 0x5f, 0x2a, 0x6d, 0x44, 0x9e, 0x63, 0x16, 0x76, 0xad, 0x76, 0x4d, 0xd4, 0x75, 0x19, 0xe6,
	0x58, 0xd7, 0xf5, 0x9a, 0x3a, 0x07, 0xd9, 0x04, 0x36, 0xa4, 0xba, 0x10, 0xb9, 0xcc, 0xac, 0x6b,
	0xdf, 0xaa, 0x6d, 0x8a, 0xbd, 0x84, 0x71, 0x86, 0x17, 0x32, 0xc5, 0x83, 0x0a, 0xc5, 0x22, 0xa3,
	0xaf, 0x2a, 0x1c, 0x4c, 0xbc, 0xd9, 0xc6, 0xde, 0xfd, 0xfa, 0x82, 0x87, 0x37, 0x25, 0xbe, 0x7e,
	0x96, 0x9d, 0xc2, 0x58, 0xd3, 0xb2, 0x6a, 0x97, 0x0f, 0x27, 0xdd, 0xd9, 0xc6, 0xde, 0x6e, 0x5d,
	0x7e, 0x6b, 0x0c, 0xd1, 0x87, 0x9b, 0x87, 0x8f, 0x94, 0xa9, 0x56, 0x7c, 0xdd, 0x82, 0x3d, 0x81,
	0x5e, 0x26, 0x8c, 0x08, 0x47, 0xd6, 0xca, 0xde, 0xe4, 0xf5, 0xb9, 0xa8, 0xcc, 0xa1, 0x30, 0x22,
	0x21, 0xa9, 0x8c, 0xe6, 0xf6, 0xc0, 0xf6, 0x01, 0x6c, 0xfd, 0xc9, 0x91, 0x05, 0xd0, 0x5d, 0xe0,
	0xca, 0x8e, 0xda, 0xe7, 0xf5, 0x27, 0xdb, 0x82, 0xfe, 0x85, 0xc8, 0x97, 0xe8, 0x26, 0xdb, 0x80,
	0x17, 0x9d, 0xe7, 0xde, 0x54, 0xc3, 0x78, 0xad, 0xcd, 0x7a, 0x6c, 0xa2, 0x2c, 0x73, 0xfc, 0x58,
	0xcf, 0xd7, 0x58, 0x9b, 0x4d, 0xde, 0xa6, 0xea, 0x85, 0xcc, 0x89, 0xe6, 0x39, 0x26, 0x62, 0xe5,
	0x2c, 0xaf, 0x89, 0xba, 0x9e, 0xcc, 0x39, 0x56, 0xae, 0xbe, 0x59, 0x58, 0x9b, 0x9a, 0xfe, 0xf4,
	0x60, 0xbc, 0xd6, 0x12, 0x63, 0xd0, 0x53, 0xa2, 0x40, 0x77, 0x6b, 0xfb, 0xfd, 0x3f, 0x91, 0x58,
	0x96, 0xcd, 0xd2, 0x5d, 0x24, 0x1c, 0x6c, 0x87, 0xa5, 0xff, 0xcf, 0xb0, 0x0c, 0x6e, 0x87, 0xe5,
	0x01, 0x0c, 0xd2, 0xa5, 0x36, 0x54, 0x84, 0x43, 0x2b, 0x3a, 0x34, 0xfd, 0xe5, 0x41, 0xd0, 0xda,
	0xf5, 0x97, 0x25, 0x6a, 0xc3, 0x9e, 0xc2, 0xe8, 0xf2, 0x69, 0xb8, 0xcc, 0x07, 0x36, 0xf3, 0x42,
	0xeb, 0xc4, 0xf1, 0xfc, 0xea, 0x84, 0x6d, 0x34, 0x17, 0x5a, 0x1f, 0x37, 0x8d, 0xfa, 0xfc, 0x12,
	0xb6, 0x5e, 0x4e, 0xf7, 0xaf, 0x2f, 0x67, 0x07, 0x7c, 0x6d, 0x9a, 0x69, 0xa2, 0x6d, 0xd8, 0xe7,
	0xd7, 0x44, 0xed, 0x8d, 0x2a, 0xb3, 0x5a, 0xbf, 0xf1, 0x76, 0x90, 0x6d, 0xc3, 0xc8, 0xc8, 0x02,
	0xbf, 0x91, 0x42, 0xdb, 0xaf, 0xcf, 0xaf, 0xf0, 0xee, 0x63, 0x18, 0x34, 0x7f, 0x61, 0x43, 0xe8,
	0x1e, 0xee, 0x9f, 0x05, 0x77, 0x98, 0x0f, 0xfd, 0xb7, 0xef, 0xdf, 0x9d, 0xbe, 0x09, 0x3c, 0x36,
	0x82, 0xde, 0xd9, 0xd1, 0x3e, 0x0f, 0x3a, 0x07, 0xaf, 0x60, 0x2c, 0x29, 0x2a, 0x85, 0xd6, 0x0b,
	0x69, 0xa2, 0xe4, 0x44, 0xd2, 0xa7, 0x47, 0xda, 0x08, 0x7d, 0x7e, 0xc5, 0xa5, 0x54, 0xc4, 0x92,
	0xe2, 0x82, 0x32, 0xcc, 0x63, 0x9d, 0x2d, 0xe2, 0x39, 0xc5, 0x92, 0xbe, 0x77, 0x7a, 0xc9, 0xc9,
	0x31, 0x7d, 0x1e, 0xd8, 0x19, 0x3c, 0xfb, 0x1d, 0x00, 0x00, 0xff, 0xff, 0xe5, 0xd1, 0x5a, 0x2e,
	0x72, 0x04, 0x00, 0x00,
}
