// Code generated by protoc-gen-go. DO NOT EDIT.
// source: io/certificate/certificate.proto

package io

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CertificateData struct {
	PassTypeId           string               `protobuf:"bytes,1,opt,name=passTypeId,proto3" json:"passTypeId,omitempty"`
	TeamId               string               `protobuf:"bytes,2,opt,name=teamId,proto3" json:"teamId,omitempty"`
	TeamName             string               `protobuf:"bytes,3,opt,name=teamName,proto3" json:"teamName,omitempty"`
	SerialNumber         string               `protobuf:"bytes,4,opt,name=serialNumber,proto3" json:"serialNumber,omitempty"`
	ValidFrom            *timestamp.Timestamp `protobuf:"bytes,5,opt,name=validFrom,proto3" json:"validFrom,omitempty"`
	ValidTo              *timestamp.Timestamp `protobuf:"bytes,6,opt,name=validTo,proto3" json:"validTo,omitempty"`
	Modulus              string               `protobuf:"bytes,7,opt,name=modulus,proto3" json:"modulus,omitempty"`
	NfcCapable           bool                 `protobuf:"varint,8,opt,name=nfcCapable,proto3" json:"nfcCapable,omitempty"`
	OwnerUsername        string               `protobuf:"bytes,9,opt,name=ownerUsername,proto3" json:"ownerUsername,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CertificateData) Reset()         { *m = CertificateData{} }
func (m *CertificateData) String() string { return proto.CompactTextString(m) }
func (*CertificateData) ProtoMessage()    {}
func (*CertificateData) Descriptor() ([]byte, []int) {
	return fileDescriptor_6b5f73f7c0350d6e, []int{0}
}

func (m *CertificateData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CertificateData.Unmarshal(m, b)
}
func (m *CertificateData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CertificateData.Marshal(b, m, deterministic)
}
func (m *CertificateData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CertificateData.Merge(m, src)
}
func (m *CertificateData) XXX_Size() int {
	return xxx_messageInfo_CertificateData.Size(m)
}
func (m *CertificateData) XXX_DiscardUnknown() {
	xxx_messageInfo_CertificateData.DiscardUnknown(m)
}

var xxx_messageInfo_CertificateData proto.InternalMessageInfo

func (m *CertificateData) GetPassTypeId() string {
	if m != nil {
		return m.PassTypeId
	}
	return ""
}

func (m *CertificateData) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *CertificateData) GetTeamName() string {
	if m != nil {
		return m.TeamName
	}
	return ""
}

func (m *CertificateData) GetSerialNumber() string {
	if m != nil {
		return m.SerialNumber
	}
	return ""
}

func (m *CertificateData) GetValidFrom() *timestamp.Timestamp {
	if m != nil {
		return m.ValidFrom
	}
	return nil
}

func (m *CertificateData) GetValidTo() *timestamp.Timestamp {
	if m != nil {
		return m.ValidTo
	}
	return nil
}

func (m *CertificateData) GetModulus() string {
	if m != nil {
		return m.Modulus
	}
	return ""
}

func (m *CertificateData) GetNfcCapable() bool {
	if m != nil {
		return m.NfcCapable
	}
	return false
}

func (m *CertificateData) GetOwnerUsername() string {
	if m != nil {
		return m.OwnerUsername
	}
	return ""
}

type PrivateKeyRequest struct {
	Name                 string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description          string               `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Expiry               *timestamp.Timestamp `protobuf:"bytes,3,opt,name=expiry,proto3" json:"expiry,omitempty"`
	PrivateKey           []byte               `protobuf:"bytes,4,opt,name=privateKey,proto3" json:"privateKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *PrivateKeyRequest) Reset()         { *m = PrivateKeyRequest{} }
func (m *PrivateKeyRequest) String() string { return proto.CompactTextString(m) }
func (*PrivateKeyRequest) ProtoMessage()    {}
func (*PrivateKeyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6b5f73f7c0350d6e, []int{1}
}

func (m *PrivateKeyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrivateKeyRequest.Unmarshal(m, b)
}
func (m *PrivateKeyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrivateKeyRequest.Marshal(b, m, deterministic)
}
func (m *PrivateKeyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrivateKeyRequest.Merge(m, src)
}
func (m *PrivateKeyRequest) XXX_Size() int {
	return xxx_messageInfo_PrivateKeyRequest.Size(m)
}
func (m *PrivateKeyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PrivateKeyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PrivateKeyRequest proto.InternalMessageInfo

func (m *PrivateKeyRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PrivateKeyRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *PrivateKeyRequest) GetExpiry() *timestamp.Timestamp {
	if m != nil {
		return m.Expiry
	}
	return nil
}

func (m *PrivateKeyRequest) GetPrivateKey() []byte {
	if m != nil {
		return m.PrivateKey
	}
	return nil
}

type TLSCertificateRequest struct {
	Certificate          []byte   `protobuf:"bytes,1,opt,name=certificate,proto3" json:"certificate,omitempty"`
	CaChain              []byte   `protobuf:"bytes,2,opt,name=caChain,proto3" json:"caChain,omitempty"`
	PrivateKey           []byte   `protobuf:"bytes,3,opt,name=privateKey,proto3" json:"privateKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLSCertificateRequest) Reset()         { *m = TLSCertificateRequest{} }
func (m *TLSCertificateRequest) String() string { return proto.CompactTextString(m) }
func (*TLSCertificateRequest) ProtoMessage()    {}
func (*TLSCertificateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6b5f73f7c0350d6e, []int{2}
}

func (m *TLSCertificateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TLSCertificateRequest.Unmarshal(m, b)
}
func (m *TLSCertificateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TLSCertificateRequest.Marshal(b, m, deterministic)
}
func (m *TLSCertificateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLSCertificateRequest.Merge(m, src)
}
func (m *TLSCertificateRequest) XXX_Size() int {
	return xxx_messageInfo_TLSCertificateRequest.Size(m)
}
func (m *TLSCertificateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TLSCertificateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TLSCertificateRequest proto.InternalMessageInfo

func (m *TLSCertificateRequest) GetCertificate() []byte {
	if m != nil {
		return m.Certificate
	}
	return nil
}

func (m *TLSCertificateRequest) GetCaChain() []byte {
	if m != nil {
		return m.CaChain
	}
	return nil
}

func (m *TLSCertificateRequest) GetPrivateKey() []byte {
	if m != nil {
		return m.PrivateKey
	}
	return nil
}

type TLSCertificateData struct {
	Id                      string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CommonName              string               `protobuf:"bytes,2,opt,name=commonName,proto3" json:"commonName,omitempty"`
	SerialNumber            string               `protobuf:"bytes,3,opt,name=serialNumber,proto3" json:"serialNumber,omitempty"`
	ValidFrom               *timestamp.Timestamp `protobuf:"bytes,4,opt,name=validFrom,proto3" json:"validFrom,omitempty"`
	ValidTo                 *timestamp.Timestamp `protobuf:"bytes,5,opt,name=validTo,proto3" json:"validTo,omitempty"`
	Modulus                 string               `protobuf:"bytes,6,opt,name=modulus,proto3" json:"modulus,omitempty"`
	SubjectAlternativeNames []string             `protobuf:"bytes,7,rep,name=subjectAlternativeNames,proto3" json:"subjectAlternativeNames,omitempty"`
	OwnerUsername           string               `protobuf:"bytes,8,opt,name=ownerUsername,proto3" json:"ownerUsername,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}             `json:"-"`
	XXX_unrecognized        []byte               `json:"-"`
	XXX_sizecache           int32                `json:"-"`
}

func (m *TLSCertificateData) Reset()         { *m = TLSCertificateData{} }
func (m *TLSCertificateData) String() string { return proto.CompactTextString(m) }
func (*TLSCertificateData) ProtoMessage()    {}
func (*TLSCertificateData) Descriptor() ([]byte, []int) {
	return fileDescriptor_6b5f73f7c0350d6e, []int{3}
}

func (m *TLSCertificateData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TLSCertificateData.Unmarshal(m, b)
}
func (m *TLSCertificateData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TLSCertificateData.Marshal(b, m, deterministic)
}
func (m *TLSCertificateData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLSCertificateData.Merge(m, src)
}
func (m *TLSCertificateData) XXX_Size() int {
	return xxx_messageInfo_TLSCertificateData.Size(m)
}
func (m *TLSCertificateData) XXX_DiscardUnknown() {
	xxx_messageInfo_TLSCertificateData.DiscardUnknown(m)
}

var xxx_messageInfo_TLSCertificateData proto.InternalMessageInfo

func (m *TLSCertificateData) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TLSCertificateData) GetCommonName() string {
	if m != nil {
		return m.CommonName
	}
	return ""
}

func (m *TLSCertificateData) GetSerialNumber() string {
	if m != nil {
		return m.SerialNumber
	}
	return ""
}

func (m *TLSCertificateData) GetValidFrom() *timestamp.Timestamp {
	if m != nil {
		return m.ValidFrom
	}
	return nil
}

func (m *TLSCertificateData) GetValidTo() *timestamp.Timestamp {
	if m != nil {
		return m.ValidTo
	}
	return nil
}

func (m *TLSCertificateData) GetModulus() string {
	if m != nil {
		return m.Modulus
	}
	return ""
}

func (m *TLSCertificateData) GetSubjectAlternativeNames() []string {
	if m != nil {
		return m.SubjectAlternativeNames
	}
	return nil
}

func (m *TLSCertificateData) GetOwnerUsername() string {
	if m != nil {
		return m.OwnerUsername
	}
	return ""
}

type PrivateKeyData struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          string               `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Expiry               *timestamp.Timestamp `protobuf:"bytes,4,opt,name=expiry,proto3" json:"expiry,omitempty"`
	OwnerUsername        string               `protobuf:"bytes,5,opt,name=ownerUsername,proto3" json:"ownerUsername,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *PrivateKeyData) Reset()         { *m = PrivateKeyData{} }
func (m *PrivateKeyData) String() string { return proto.CompactTextString(m) }
func (*PrivateKeyData) ProtoMessage()    {}
func (*PrivateKeyData) Descriptor() ([]byte, []int) {
	return fileDescriptor_6b5f73f7c0350d6e, []int{4}
}

func (m *PrivateKeyData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrivateKeyData.Unmarshal(m, b)
}
func (m *PrivateKeyData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrivateKeyData.Marshal(b, m, deterministic)
}
func (m *PrivateKeyData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrivateKeyData.Merge(m, src)
}
func (m *PrivateKeyData) XXX_Size() int {
	return xxx_messageInfo_PrivateKeyData.Size(m)
}
func (m *PrivateKeyData) XXX_DiscardUnknown() {
	xxx_messageInfo_PrivateKeyData.DiscardUnknown(m)
}

var xxx_messageInfo_PrivateKeyData proto.InternalMessageInfo

func (m *PrivateKeyData) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PrivateKeyData) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PrivateKeyData) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *PrivateKeyData) GetExpiry() *timestamp.Timestamp {
	if m != nil {
		return m.Expiry
	}
	return nil
}

func (m *PrivateKeyData) GetOwnerUsername() string {
	if m != nil {
		return m.OwnerUsername
	}
	return ""
}

type PassTypeIdentifier struct {
	PassTypeId           string   `protobuf:"bytes,1,opt,name=passTypeId,proto3" json:"passTypeId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PassTypeIdentifier) Reset()         { *m = PassTypeIdentifier{} }
func (m *PassTypeIdentifier) String() string { return proto.CompactTextString(m) }
func (*PassTypeIdentifier) ProtoMessage()    {}
func (*PassTypeIdentifier) Descriptor() ([]byte, []int) {
	return fileDescriptor_6b5f73f7c0350d6e, []int{5}
}

func (m *PassTypeIdentifier) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PassTypeIdentifier.Unmarshal(m, b)
}
func (m *PassTypeIdentifier) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PassTypeIdentifier.Marshal(b, m, deterministic)
}
func (m *PassTypeIdentifier) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PassTypeIdentifier.Merge(m, src)
}
func (m *PassTypeIdentifier) XXX_Size() int {
	return xxx_messageInfo_PassTypeIdentifier.Size(m)
}
func (m *PassTypeIdentifier) XXX_DiscardUnknown() {
	xxx_messageInfo_PassTypeIdentifier.DiscardUnknown(m)
}

var xxx_messageInfo_PassTypeIdentifier proto.InternalMessageInfo

func (m *PassTypeIdentifier) GetPassTypeId() string {
	if m != nil {
		return m.PassTypeId
	}
	return ""
}

type CertificateSigningRequest struct {
	Csr                  string   `protobuf:"bytes,1,opt,name=csr,proto3" json:"csr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CertificateSigningRequest) Reset()         { *m = CertificateSigningRequest{} }
func (m *CertificateSigningRequest) String() string { return proto.CompactTextString(m) }
func (*CertificateSigningRequest) ProtoMessage()    {}
func (*CertificateSigningRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6b5f73f7c0350d6e, []int{6}
}

func (m *CertificateSigningRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CertificateSigningRequest.Unmarshal(m, b)
}
func (m *CertificateSigningRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CertificateSigningRequest.Marshal(b, m, deterministic)
}
func (m *CertificateSigningRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CertificateSigningRequest.Merge(m, src)
}
func (m *CertificateSigningRequest) XXX_Size() int {
	return xxx_messageInfo_CertificateSigningRequest.Size(m)
}
func (m *CertificateSigningRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CertificateSigningRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CertificateSigningRequest proto.InternalMessageInfo

func (m *CertificateSigningRequest) GetCsr() string {
	if m != nil {
		return m.Csr
	}
	return ""
}

func init() {
	proto.RegisterType((*CertificateData)(nil), "io.CertificateData")
	proto.RegisterType((*PrivateKeyRequest)(nil), "io.PrivateKeyRequest")
	proto.RegisterType((*TLSCertificateRequest)(nil), "io.TLSCertificateRequest")
	proto.RegisterType((*TLSCertificateData)(nil), "io.TLSCertificateData")
	proto.RegisterType((*PrivateKeyData)(nil), "io.PrivateKeyData")
	proto.RegisterType((*PassTypeIdentifier)(nil), "io.PassTypeIdentifier")
	proto.RegisterType((*CertificateSigningRequest)(nil), "io.CertificateSigningRequest")
}

func init() { proto.RegisterFile("io/certificate/certificate.proto", fileDescriptor_6b5f73f7c0350d6e) }

var fileDescriptor_6b5f73f7c0350d6e = []byte{
	// 565 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x94, 0xc1, 0x6e, 0xd3, 0x4c,
	0x10, 0xc7, 0x65, 0x3b, 0x4d, 0x93, 0x49, 0xbe, 0xf6, 0x63, 0x25, 0xc0, 0xe4, 0x00, 0x56, 0xd4,
	0x43, 0x2e, 0xd8, 0x52, 0xe9, 0xa1, 0x27, 0x24, 0x08, 0x42, 0x8a, 0x82, 0xaa, 0xc8, 0x0d, 0x17,
	0x6e, 0x1b, 0x7b, 0x92, 0x2e, 0xb5, 0xbd, 0x66, 0x77, 0x1d, 0xc8, 0xc3, 0xf0, 0x02, 0x9c, 0x78,
	0x16, 0x6e, 0xbc, 0x0d, 0xda, 0x4d, 0x9c, 0x38, 0x24, 0x6d, 0x50, 0x6f, 0x3b, 0xff, 0x9d, 0xf1,
	0xcc, 0xfc, 0xfd, 0xd3, 0x82, 0xc7, 0x78, 0x10, 0xa1, 0x50, 0x6c, 0xca, 0x22, 0xaa, 0xb0, 0x7a,
	0xf6, 0x73, 0xc1, 0x15, 0x27, 0x36, 0xe3, 0x9d, 0x17, 0x33, 0xce, 0x67, 0x09, 0x06, 0x46, 0x99,
	0x14, 0xd3, 0x40, 0xb1, 0x14, 0xa5, 0xa2, 0x69, 0xbe, 0x4c, 0xea, 0xfe, 0xb6, 0xe1, 0xb4, 0xbf,
	0x29, 0x7d, 0x47, 0x15, 0x25, 0xcf, 0x01, 0x72, 0x2a, 0xe5, 0x78, 0x91, 0xe3, 0x20, 0x76, 0x2d,
	0xcf, 0xea, 0x35, 0xc3, 0x8a, 0x42, 0x9e, 0x40, 0x5d, 0x21, 0x4d, 0x07, 0xb1, 0x6b, 0x9b, 0xbb,
	0x55, 0x44, 0x3a, 0xd0, 0xd0, 0xa7, 0x2b, 0x9a, 0xa2, 0xeb, 0x98, 0x9b, 0x75, 0x4c, 0xba, 0xd0,
	0x96, 0x28, 0x18, 0x4d, 0xae, 0x8a, 0x74, 0x82, 0xc2, 0xad, 0x99, 0xfb, 0x2d, 0x8d, 0x5c, 0x42,
	0x73, 0x4e, 0x13, 0x16, 0xbf, 0x17, 0x3c, 0x75, 0x8f, 0x3c, 0xab, 0xd7, 0x3a, 0xef, 0xf8, 0xcb,
	0x05, 0xfc, 0x72, 0x01, 0x7f, 0x5c, 0x2e, 0x10, 0x6e, 0x92, 0xc9, 0x05, 0x1c, 0x9b, 0x60, 0xcc,
	0xdd, 0xfa, 0xc1, 0xba, 0x32, 0x95, 0xb8, 0x70, 0x9c, 0xf2, 0xb8, 0x48, 0x0a, 0xe9, 0x1e, 0x9b,
	0x71, 0xca, 0x50, 0x3b, 0x90, 0x4d, 0xa3, 0x3e, 0xcd, 0xe9, 0x24, 0x41, 0xb7, 0xe1, 0x59, 0xbd,
	0x46, 0x58, 0x51, 0xc8, 0x19, 0xfc, 0xc7, 0xbf, 0x66, 0x28, 0x3e, 0x4a, 0x14, 0x99, 0x5e, 0xb7,
	0x69, 0xea, 0xb7, 0xc5, 0xee, 0x77, 0x0b, 0x1e, 0x8d, 0x04, 0x9b, 0x53, 0x85, 0x43, 0x5c, 0x84,
	0xf8, 0xa5, 0x40, 0xa9, 0x08, 0x81, 0x9a, 0x29, 0x59, 0xfa, 0x6a, 0xce, 0xc4, 0x83, 0x56, 0x8c,
	0x32, 0x12, 0x2c, 0x57, 0x8c, 0x67, 0x2b, 0x5b, 0xab, 0x12, 0x39, 0x87, 0x3a, 0x7e, 0xcb, 0x99,
	0x58, 0x18, 0x67, 0xef, 0x5f, 0x70, 0x95, 0x69, 0xfe, 0xe3, 0xba, 0xbd, 0x71, 0xbc, 0x1d, 0x56,
	0x94, 0xae, 0x84, 0xc7, 0xe3, 0x0f, 0xd7, 0x95, 0xbf, 0x5f, 0x8e, 0xe8, 0x41, 0xab, 0x82, 0x93,
	0x99, 0xb4, 0x1d, 0x56, 0x25, 0x6d, 0x5d, 0x44, 0xfb, 0x37, 0x94, 0x2d, 0x87, 0x6d, 0x87, 0x65,
	0xf8, 0x57, 0x53, 0x67, 0xa7, 0xe9, 0x2f, 0x1b, 0xc8, 0x76, 0x57, 0xc3, 0xdc, 0x09, 0xd8, 0xac,
	0x64, 0xcd, 0x66, 0xb1, 0xfe, 0x4c, 0xc4, 0xd3, 0x94, 0x67, 0x86, 0xa6, 0xa5, 0x21, 0x15, 0x65,
	0x87, 0x27, 0xe7, 0x10, 0x4f, 0xb5, 0x07, 0xf2, 0x74, 0xf4, 0x20, 0x9e, 0xea, 0xdb, 0x3c, 0x5d,
	0xc2, 0x53, 0x59, 0x4c, 0x3e, 0x63, 0xa4, 0xde, 0x24, 0x4a, 0xd3, 0xa1, 0xd8, 0x1c, 0xf5, 0x1e,
	0x9a, 0x3c, 0xa7, 0xd7, 0x0c, 0xef, 0xba, 0xde, 0x25, 0xad, 0xb1, 0x8f, 0xb4, 0x9f, 0x16, 0x9c,
	0x6c, 0x48, 0xdb, 0x6b, 0x68, 0x89, 0x9d, 0x7d, 0x37, 0x76, 0xce, 0x7d, 0xd8, 0xd5, 0xfe, 0x19,
	0xbb, 0x9d, 0x91, 0x8f, 0xf6, 0x8d, 0x7c, 0x01, 0x64, 0xb4, 0x7e, 0x52, 0x30, 0xd3, 0x30, 0xa0,
	0x38, 0xf4, 0xf4, 0x74, 0x5f, 0xc2, 0xb3, 0x0a, 0x39, 0xd7, 0x6c, 0x96, 0xb1, 0x6c, 0x56, 0x62,
	0xfb, 0x3f, 0x38, 0x91, 0x14, 0xab, 0x2a, 0x7d, 0x7c, 0xfb, 0x1a, 0x4e, 0x19, 0xf7, 0x75, 0xfd,
	0x2d, 0x53, 0xfe, 0x68, 0xc8, 0xf8, 0xa7, 0x33, 0xa9, 0xa8, 0xbc, 0x59, 0x6b, 0x11, 0x4f, 0x03,
	0xc6, 0x83, 0x94, 0xc7, 0x98, 0x04, 0x32, 0xbe, 0x0d, 0x66, 0x3c, 0x60, 0xfc, 0x87, 0x5d, 0x1b,
	0x0d, 0x07, 0x7c, 0x52, 0x37, 0x6b, 0xbe, 0xfa, 0x13, 0x00, 0x00, 0xff, 0xff, 0x7d, 0x74, 0xfe,
	0x71, 0x6d, 0x05, 0x00, 0x00,
}
