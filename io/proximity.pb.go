// Code generated by protoc-gen-go. DO NOT EDIT.
// source: io/common/proximity.proto

package io

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Beacons allow you to display subtle messages to your users when they are in close proximity.
type Beacon struct {
	// System generated uique identifier for your beacon
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// A valid UUID that is being broadcast from your beacon.
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// A friendly name used to display the beacon in the admin portal
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// Major indicator.
	Major uint32 `protobuf:"varint,4,opt,name=major,proto3" json:"major,omitempty"`
	// Minor indicator.
	Minor uint32 `protobuf:"varint,5,opt,name=minor,proto3" json:"minor,omitempty"`
	// Message to be displayed on lock screen when user is in proximity of the beacon (iOS only).
	LockScreenMessage string `protobuf:"bytes,6,opt,name=lockScreenMessage,proto3" json:"lockScreenMessage,omitempty"`
	// Localized lock screen message.
	LocalizedLockScreenMessage *LocalizedString `protobuf:"bytes,7,opt,name=localizedLockScreenMessage,proto3" json:"localizedLockScreenMessage,omitempty"`
	// Beacon should be appended to, prepended to, or replace existing beacons in the record.
	Position             ListPosition `protobuf:"varint,8,opt,name=position,proto3,enum=io.ListPosition" json:"position,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Beacon) Reset()         { *m = Beacon{} }
func (m *Beacon) String() string { return proto.CompactTextString(m) }
func (*Beacon) ProtoMessage()    {}
func (*Beacon) Descriptor() ([]byte, []int) {
	return fileDescriptor_921329c637da443f, []int{0}
}

func (m *Beacon) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Beacon.Unmarshal(m, b)
}
func (m *Beacon) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Beacon.Marshal(b, m, deterministic)
}
func (m *Beacon) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Beacon.Merge(m, src)
}
func (m *Beacon) XXX_Size() int {
	return xxx_messageInfo_Beacon.Size(m)
}
func (m *Beacon) XXX_DiscardUnknown() {
	xxx_messageInfo_Beacon.DiscardUnknown(m)
}

var xxx_messageInfo_Beacon proto.InternalMessageInfo

func (m *Beacon) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Beacon) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Beacon) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Beacon) GetMajor() uint32 {
	if m != nil {
		return m.Major
	}
	return 0
}

func (m *Beacon) GetMinor() uint32 {
	if m != nil {
		return m.Minor
	}
	return 0
}

func (m *Beacon) GetLockScreenMessage() string {
	if m != nil {
		return m.LockScreenMessage
	}
	return ""
}

func (m *Beacon) GetLocalizedLockScreenMessage() *LocalizedString {
	if m != nil {
		return m.LocalizedLockScreenMessage
	}
	return nil
}

func (m *Beacon) GetPosition() ListPosition {
	if m != nil {
		return m.Position
	}
	return ListPosition_APPEND
}

// Locations provide a broader range using GPS to trigger a lockscreen message.
type GPSLocation struct {
	// System generated uique identifier for your GPS Location
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// a friendly name for the location used to display the location in the admin portal
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Latitude.
	Lat float64 `protobuf:"fixed64,3,opt,name=lat,proto3" json:"lat,omitempty"`
	// Longitude.
	Lon float64 `protobuf:"fixed64,4,opt,name=lon,proto3" json:"lon,omitempty"`
	// Altitude in metres.
	Alt int32 `protobuf:"varint,5,opt,name=alt,proto3" json:"alt,omitempty"`
	// Message to be displayed on lock screen when user is in the location (iOS only).
	LockScreenMessage string `protobuf:"bytes,6,opt,name=lockScreenMessage,proto3" json:"lockScreenMessage,omitempty"`
	// Localized lock screen message.
	LocalizedLockScreenMessage *LocalizedString `protobuf:"bytes,7,opt,name=localizedLockScreenMessage,proto3" json:"localizedLockScreenMessage,omitempty"`
	// Location should be appended to, prepended to, or replace existing locations in the record.
	Position             ListPosition `protobuf:"varint,8,opt,name=position,proto3,enum=io.ListPosition" json:"position,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GPSLocation) Reset()         { *m = GPSLocation{} }
func (m *GPSLocation) String() string { return proto.CompactTextString(m) }
func (*GPSLocation) ProtoMessage()    {}
func (*GPSLocation) Descriptor() ([]byte, []int) {
	return fileDescriptor_921329c637da443f, []int{1}
}

func (m *GPSLocation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GPSLocation.Unmarshal(m, b)
}
func (m *GPSLocation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GPSLocation.Marshal(b, m, deterministic)
}
func (m *GPSLocation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GPSLocation.Merge(m, src)
}
func (m *GPSLocation) XXX_Size() int {
	return xxx_messageInfo_GPSLocation.Size(m)
}
func (m *GPSLocation) XXX_DiscardUnknown() {
	xxx_messageInfo_GPSLocation.DiscardUnknown(m)
}

var xxx_messageInfo_GPSLocation proto.InternalMessageInfo

func (m *GPSLocation) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GPSLocation) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GPSLocation) GetLat() float64 {
	if m != nil {
		return m.Lat
	}
	return 0
}

func (m *GPSLocation) GetLon() float64 {
	if m != nil {
		return m.Lon
	}
	return 0
}

func (m *GPSLocation) GetAlt() int32 {
	if m != nil {
		return m.Alt
	}
	return 0
}

func (m *GPSLocation) GetLockScreenMessage() string {
	if m != nil {
		return m.LockScreenMessage
	}
	return ""
}

func (m *GPSLocation) GetLocalizedLockScreenMessage() *LocalizedString {
	if m != nil {
		return m.LocalizedLockScreenMessage
	}
	return nil
}

func (m *GPSLocation) GetPosition() ListPosition {
	if m != nil {
		return m.Position
	}
	return ListPosition_APPEND
}

// Relevant Date in ISO8601 datetime.
type RelevantDate struct {
	// Unix timestamp. ISO8601 datetime.
	Timestamp            uint32   `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RelevantDate) Reset()         { *m = RelevantDate{} }
func (m *RelevantDate) String() string { return proto.CompactTextString(m) }
func (*RelevantDate) ProtoMessage()    {}
func (*RelevantDate) Descriptor() ([]byte, []int) {
	return fileDescriptor_921329c637da443f, []int{2}
}

func (m *RelevantDate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RelevantDate.Unmarshal(m, b)
}
func (m *RelevantDate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RelevantDate.Marshal(b, m, deterministic)
}
func (m *RelevantDate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelevantDate.Merge(m, src)
}
func (m *RelevantDate) XXX_Size() int {
	return xxx_messageInfo_RelevantDate.Size(m)
}
func (m *RelevantDate) XXX_DiscardUnknown() {
	xxx_messageInfo_RelevantDate.DiscardUnknown(m)
}

var xxx_messageInfo_RelevantDate proto.InternalMessageInfo

func (m *RelevantDate) GetTimestamp() uint32 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func init() {
	proto.RegisterType((*Beacon)(nil), "io.Beacon")
	proto.RegisterType((*GPSLocation)(nil), "io.GPSLocation")
	proto.RegisterType((*RelevantDate)(nil), "io.RelevantDate")
}

func init() { proto.RegisterFile("io/common/proximity.proto", fileDescriptor_921329c637da443f) }

var fileDescriptor_921329c637da443f = []byte{
	// 645 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x54, 0xcd, 0x6a, 0x14, 0x41,
	0x10, 0xde, 0xde, 0x6c, 0x62, 0xd2, 0xf9, 0x31, 0x8e, 0x97, 0x35, 0xe6, 0x50, 0xe4, 0xb4, 0x84,
	0xdd, 0x19, 0x58, 0x6f, 0x9e, 0xdc, 0x45, 0x0c, 0x92, 0x88, 0xcb, 0xec, 0x49, 0x2f, 0xd2, 0x3b,
	0xd3, 0xcc, 0x56, 0x32, 0xd3, 0x35, 0x74, 0xf7, 0x18, 0xd7, 0xa7, 0x90, 0x3c, 0x83, 0x20, 0xf8,
	0x2e, 0x82, 0x2c, 0x22, 0x78, 0x10, 0x7c, 0x03, 0xaf, 0xde, 0x94, 0xee, 0x9d, 0x24, 0x42, 0x42,
	0xf0, 0xea, 0x69, 0x6a, 0xbe, 0xfa, 0xaa, 0xab, 0xab, 0xbe, 0x8f, 0xe6, 0xf7, 0x90, 0xa2, 0x84,
	0x8a, 0x82, 0x54, 0x54, 0x6a, 0x7a, 0x83, 0x05, 0xda, 0x59, 0x58, 0x6a, 0xb2, 0x14, 0x34, 0x91,
	0x76, 0x76, 0x2f, 0xd3, 0x39, 0x25, 0x22, 0xc7, 0xb7, 0xc2, 0x22, 0xa9, 0x05, 0x63, 0xe7, 0x3e,
	0x52, 0x24, 0x4a, 0xac, 0x19, 0xaf, 0x68, 0x72, 0x2c, 0x13, 0x6b, 0xea, 0x64, 0xd7, 0x7f, 0x92,
	0x5e, 0x26, 0x55, 0xcf, 0x9c, 0x8a, 0x2c, 0x93, 0x3a, 0xa2, 0xd2, 0x55, 0x9b, 0x48, 0x28, 0x45,
	0xd6, 0x9f, 0x54, 0xb3, 0xf7, 0xde, 0xb5, 0xf8, 0xca, 0x50, 0x8a, 0x84, 0x54, 0xb0, 0xc5, 0x9b,
	0x98, 0xb6, 0x19, 0xb0, 0xce, 0x5a, 0xdc, 0xc4, 0x34, 0x08, 0x78, 0xab, 0xaa, 0x30, 0x6d, 0x37,
	0x3d, 0xe2, 0x63, 0x87, 0x29, 0x51, 0xc8, 0xf6, 0xd2, 0x02, 0x73, 0x71, 0xb0, 0xc7, 0x97, 0x0b,
	0x71, 0x4c, 0xba, 0xdd, 0x02, 0xd6, 0xd9, 0x1c, 0x6e, 0x9c, 0x0d, 0xd6, 0x5e, 0x34, 0x1a, 0x8d,
	0xc6, 0x8f, 0xdf, 0x3f, 0x1f, 0xc5, 0x8b, 0x94, 0xe7, 0xa0, 0x22, 0xdd, 0x5e, 0xbe, 0x96, 0xe3,
	0x52, 0x41, 0x97, 0xdf, 0xc9, 0x29, 0x39, 0x19, 0x27, 0x5a, 0x4a, 0xf5, 0x4c, 0x1a, 0x23, 0x32,
	0xd9, 0x5e, 0xf1, 0x8d, 0xae, 0x26, 0x82, 0x31, 0xdf, 0xa9, 0x37, 0x23, 0xd3, 0xa3, 0x2b, 0x65,
	0xb7, 0x80, 0x75, 0xd6, 0xfb, 0x77, 0x43, 0xa4, 0xf0, 0xe8, 0x9c, 0x35, 0xb6, 0x1a, 0x55, 0x16,
	0xdf, 0x50, 0x16, 0x74, 0xf9, 0x6a, 0x49, 0x06, 0xdd, 0x82, 0xda, 0xab, 0xc0, 0x3a, 0x5b, 0xfd,
	0x6d, 0x7f, 0x04, 0x1a, 0x3b, 0xaa, 0xf1, 0xf8, 0x82, 0xf1, 0xf0, 0x0b, 0x3b, 0x1b, 0x7c, 0x66,
	0xfc, 0x13, 0xdb, 0xaf, 0x57, 0xd8, 0xff, 0xc0, 0x06, 0x30, 0xf1, 0x21, 0x68, 0x99, 0x90, 0x4e,
	0x41, 0x2a, 0x31, 0xc9, 0xa5, 0x01, 0x3b, 0x95, 0x50, 0x0a, 0x63, 0xc0, 0x12, 0x94, 0x95, 0x99,
	0x82, 0x80, 0x62, 0xd1, 0xd4, 0x21, 0x2e, 0xeb, 0x46, 0x04, 0xe3, 0xaf, 0x03, 0xa7, 0x53, 0xa9,
	0x3c, 0x58, 0x19, 0xa9, 0x01, 0x0d, 0xa0, 0x82, 0x24, 0x27, 0x23, 0xe1, 0xc2, 0x2c, 0x70, 0x8a,
	0x76, 0xea, 0x39, 0x8b, 0x86, 0x21, 0x2c, 0xee, 0x60, 0x40, 0x68, 0x09, 0x49, 0xa5, 0xb5, 0x54,
	0x36, 0x9f, 0x01, 0xa9, 0x7c, 0x06, 0xa6, 0x2a, 0x4b, 0xd2, 0x56, 0xa6, 0x30, 0x99, 0x01, 0x3e,
	0x1f, 0x87, 0x73, 0xe6, 0xf5, 0x9c, 0xb3, 0xab, 0x9b, 0xdd, 0xfb, 0xb5, 0xc4, 0xd7, 0x0f, 0x46,
	0x63, 0xb7, 0x37, 0x37, 0xe6, 0x75, 0xbe, 0xf0, 0x1e, 0x68, 0xfe, 0xe5, 0x81, 0x6d, 0xbe, 0x94,
	0x0b, 0xeb, 0x6d, 0xc1, 0x62, 0x17, 0x7a, 0x84, 0x94, 0xf7, 0x84, 0x43, 0x48, 0x39, 0x44, 0xe4,
	0xd6, 0x3b, 0x60, 0x39, 0x76, 0xe1, 0xff, 0xa7, 0xf8, 0x77, 0x76, 0x36, 0xf8, 0xc6, 0xf8, 0x57,
	0xb6, 0xbf, 0x71, 0x30, 0x1a, 0xc3, 0xf9, 0x8a, 0xfa, 0xef, 0xd9, 0xc0, 0xe9, 0xe7, 0x7f, 0x6e,
	0x52, 0x7e, 0x22, 0xbd, 0xf8, 0x32, 0xfd, 0x57, 0xd1, 0x95, 0x14, 0xfa, 0x9c, 0xb8, 0x78, 0x01,
	0xe0, 0x09, 0x69, 0x27, 0xa1, 0x67, 0x99, 0x2e, 0x08, 0x48, 0x2a, 0x63, 0xa9, 0x70, 0xe3, 0x5d,
	0x58, 0x2a, 0x11, 0x0a, 0x44, 0x6e, 0x7c, 0xc3, 0x14, 0x4d, 0x99, 0x8b, 0x99, 0x4c, 0xc3, 0x39,
	0x73, 0xca, 0xcc, 0x59, 0x2b, 0x27, 0x95, 0x5d, 0x2b, 0x7d, 0x97, 0x6f, 0xc4, 0x32, 0x97, 0xaf,
	0x85, 0xb2, 0x8f, 0x85, 0x95, 0xc1, 0x2e, 0x5f, 0xb3, 0x58, 0x48, 0x63, 0x45, 0x51, 0x7a, 0x07,
	0x6c, 0xc6, 0x97, 0xc0, 0x70, 0xc8, 0x6f, 0x23, 0x85, 0x6e, 0xb6, 0x13, 0xb4, 0xe1, 0xe8, 0x10,
	0xe9, 0x65, 0x27, 0x43, 0x3b, 0xad, 0x26, 0x61, 0x42, 0x45, 0x34, 0x12, 0xc6, 0x1c, 0xa2, 0x8d,
	0x6a, 0x42, 0x2f, 0xa3, 0x5c, 0xa8, 0xac, 0x67, 0xd2, 0x93, 0x08, 0xe9, 0x63, 0xb3, 0x35, 0x3a,
	0x7c, 0x4a, 0x93, 0x15, 0xff, 0x0c, 0x3d, 0xf8, 0x13, 0x00, 0x00, 0xff, 0xff, 0x53, 0x1e, 0x91,
	0xbd, 0x10, 0x05, 0x00, 0x00,
}
