// Code generated by protoc-gen-go. DO NOT EDIT.
// source: io/member/member.proto

package members

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	math "math"
	io "github.com/PassKit/passkit-golang-sdk/io"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MemberEvents int32

const (
	MemberEvents_EVENT_MEMBER_DO_NOT_USE MemberEvents = 0
	// Member approved
	MemberEvents_EVENT_MEMBER_APPROVED MemberEvents = 101
	// Member declined
	MemberEvents_EVENT_MEMBER_DECLINED MemberEvents = 102
	// Membership activated
	MemberEvents_EVENT_MEMBER_ACTIVATED MemberEvents = 103
	// Membership disabled
	MemberEvents_EVENT_MEMBER_DISABLED MemberEvents = 104
	// Membership renewed
	MemberEvents_EVENT_MEMBER_RENEWED MemberEvents = 105
	// Membership cancelled
	MemberEvents_EVENT_MEMBER_CANCELLED MemberEvents = 106
)

var MemberEvents_name = map[int32]string{
	0:   "EVENT_MEMBER_DO_NOT_USE",
	101: "EVENT_MEMBER_APPROVED",
	102: "EVENT_MEMBER_DECLINED",
	103: "EVENT_MEMBER_ACTIVATED",
	104: "EVENT_MEMBER_DISABLED",
	105: "EVENT_MEMBER_RENEWED",
	106: "EVENT_MEMBER_CANCELLED",
}

var MemberEvents_value = map[string]int32{
	"EVENT_MEMBER_DO_NOT_USE": 0,
	"EVENT_MEMBER_APPROVED":   101,
	"EVENT_MEMBER_DECLINED":   102,
	"EVENT_MEMBER_ACTIVATED":  103,
	"EVENT_MEMBER_DISABLED":   104,
	"EVENT_MEMBER_RENEWED":    105,
	"EVENT_MEMBER_CANCELLED":  106,
}

func (x MemberEvents) String() string {
	return proto.EnumName(MemberEvents_name, int32(x))
}

func (MemberEvents) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_fba4bff4643c063a, []int{0}
}

// List of allowed member statuses
type MemberStatus int32

const (
	// Member has successfully enrolled in the program
	MemberStatus_ENROLLED MemberStatus = 0
	// Member status changes to active when approved (if program requires approval, otherwise the member becomes active directly after enrolling). When approved a member also received the welcome email.
	MemberStatus_ACTIVE MemberStatus = 1
	// Status to temporarily suspend a member
	MemberStatus_SUSPENDED MemberStatus = 2
	// For expired members
	MemberStatus_EXPIRED MemberStatus = 3
	// Set if a member cancelled their membership
	MemberStatus_CANCELLED MemberStatus = 4
	// For members who's records have been deleted
	MemberStatus_DELETED MemberStatus = 5
)

var MemberStatus_name = map[int32]string{
	0: "ENROLLED",
	1: "ACTIVE",
	2: "SUSPENDED",
	3: "EXPIRED",
	4: "CANCELLED",
	5: "DELETED",
}

var MemberStatus_value = map[string]int32{
	"ENROLLED":  0,
	"ACTIVE":    1,
	"SUSPENDED": 2,
	"EXPIRED":   3,
	"CANCELLED": 4,
	"DELETED":   5,
}

func (x MemberStatus) String() string {
	return proto.EnumName(MemberStatus_name, int32(x))
}

func (MemberStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_fba4bff4643c063a, []int{1}
}

// The member record
type Member struct {
	// Id assigned by PassKit to represent the member record. It will be used as the serial number in Apple Wallet and as the Object identifier for Google Wallet. This field is not writable.
	// @tag: validateGeneric:"required" validateCreate:"-" validateUpdate:"required"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" validateGeneric:"required" validateCreate:"-" validateUpdate:"required"`
	// This can be used to set the 'external' ID of the member (i.e. the member ID as it's being used in your system). If provided then this can be used to query & update members. This field will be treated as unique within the program, and cannot be updated at a later stage.
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	ExternalId string `protobuf:"bytes,2,opt,name=externalId,proto3" json:"externalId,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	// Grouping Identifier can be used to group members under the same membership (i.e. couple).
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	GroupingIdentifier string `protobuf:"bytes,3,opt,name=groupingIdentifier,proto3" json:"groupingIdentifier,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	// Indicates the ID of the tier this member is in.
	// @tag: validateGeneric:"omitempty" validateCreate:"required" validateUpdate:"omitempty"
	TierId string `protobuf:"bytes,4,opt,name=tierId,proto3" json:"tierId,omitempty" validateGeneric:"omitempty" validateCreate:"required" validateUpdate:"omitempty"`
	// Indicates the ID of the program this member is in.
	// @tag: validateGeneric:"omitempty" validateCreate:"required" validateUpdate:"omitempty"
	ProgramId string `protobuf:"bytes,5,opt,name=programId,proto3" json:"programId,omitempty" validateGeneric:"omitempty" validateCreate:"required" validateUpdate:"omitempty"`
	// Personal details of the member.
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	MemberDetails *io.Person `protobuf:"bytes,6,opt,name=memberDetails,proto3" json:"memberDetails,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	// Any other meta fields for the member that are not covered in the protocol (i.e. you might want to captures sign-up location, and favorite coffee, for segmenting later on).
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	MemberMetaData map[string]string `protobuf:"bytes,7,rep,name=memberMetaData,proto3" json:"memberMetaData,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	// Indicates if the member opted in to receive marketing promotions (defaults to false).
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	OptIn bool `protobuf:"varint,13,opt,name=optIn,proto3" json:"optIn,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	// Points is formatted differently based on what is set on a program level. Program points.balance field can be set to: `int`, `double` or `money`.
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	Points float32 `protobuf:"fixed32,14,opt,name=points,proto3" json:"points,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	// Secondary Points is formatted differently based on what is set on a program level. Program secondaryPoints.balance field can be set to: `int`, `double` or `money`. Field can be utilised if your program tracks two points, i.e. loyalty point balance, and pre-paid cash balance.
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	SecondaryPoints float32 `protobuf:"fixed32,15,opt,name=secondaryPoints,proto3" json:"secondaryPoints,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	// Tier points can be set for programs that award tiers based on dedicated tier points. Tier points indicates the current amount of tier points someone has, and can be used by a member to check how many more tier points are required to switch to the next tier.
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	TierPoints uint32 `protobuf:"varint,16,opt,name=tierPoints,proto3" json:"tierPoints,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	// Indicates when the membership card expires. When the expiry date hits, it will automatically gray out the barcode.
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	ExpiryDate *timestamp.Timestamp `protobuf:"bytes,18,opt,name=expiryDate,proto3" json:"expiryDate,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	// Member status.
	Status MemberStatus `protobuf:"varint,19,opt,name=status,proto3,enum=members.MemberStatus" json:"status,omitempty"`
	// Pass level overrides for proximity & images.
	PassOverrides *io.PassOverrides `protobuf:"bytes,20,opt,name=passOverrides,proto3" json:"passOverrides,omitempty"`
	// Pass Metadata.
	PassMetaData *io.Metadata `protobuf:"bytes,21,opt,name=passMetaData,proto3" json:"passMetaData,omitempty"`
	// Indicates a personalized message is currently active for this pass.
	ActiveMessages []*io.Message `protobuf:"bytes,22,rep,name=activeMessages,proto3" json:"activeMessages,omitempty"`
	// placeholder for notes.
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	Notes []*io.Note `protobuf:"bytes,26,rep,name=notes,proto3" json:"notes,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	// The date the current tier was awarded
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	CurrentTierAwarded *timestamp.Timestamp `protobuf:"bytes,27,opt,name=currentTierAwarded,proto3" json:"currentTierAwarded,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	// The date the current tier expires
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	CurrentTierExpires *timestamp.Timestamp `protobuf:"bytes,28,opt,name=currentTierExpires,proto3" json:"currentTierExpires,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	// The date the member was created in the PassKit system.
	// @tag: validateGeneric:"-" validateCreate:"-" validateUpdate:"-"
	Created *timestamp.Timestamp `protobuf:"bytes,29,opt,name=created,proto3" json:"created,omitempty" validateGeneric:"-" validateCreate:"-" validateUpdate:"-"`
	// The date the member was last updated in the PassKit system.
	// @tag: validateGeneric:"-" validateCreate:"-" validateUpdate:"-"
	Updated              *timestamp.Timestamp `protobuf:"bytes,30,opt,name=updated,proto3" json:"updated,omitempty" validateGeneric:"-" validateCreate:"-" validateUpdate:"-"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Member) Reset()         { *m = Member{} }
func (m *Member) String() string { return proto.CompactTextString(m) }
func (*Member) ProtoMessage()    {}
func (*Member) Descriptor() ([]byte, []int) {
	return fileDescriptor_fba4bff4643c063a, []int{0}
}

func (m *Member) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Member.Unmarshal(m, b)
}
func (m *Member) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Member.Marshal(b, m, deterministic)
}
func (m *Member) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Member.Merge(m, src)
}
func (m *Member) XXX_Size() int {
	return xxx_messageInfo_Member.Size(m)
}
func (m *Member) XXX_DiscardUnknown() {
	xxx_messageInfo_Member.DiscardUnknown(m)
}

var xxx_messageInfo_Member proto.InternalMessageInfo

func (m *Member) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Member) GetExternalId() string {
	if m != nil {
		return m.ExternalId
	}
	return ""
}

func (m *Member) GetGroupingIdentifier() string {
	if m != nil {
		return m.GroupingIdentifier
	}
	return ""
}

func (m *Member) GetTierId() string {
	if m != nil {
		return m.TierId
	}
	return ""
}

func (m *Member) GetProgramId() string {
	if m != nil {
		return m.ProgramId
	}
	return ""
}

func (m *Member) GetMemberDetails() *io.Person {
	if m != nil {
		return m.MemberDetails
	}
	return nil
}

func (m *Member) GetMemberMetaData() map[string]string {
	if m != nil {
		return m.MemberMetaData
	}
	return nil
}

func (m *Member) GetOptIn() bool {
	if m != nil {
		return m.OptIn
	}
	return false
}

func (m *Member) GetPoints() float32 {
	if m != nil {
		return m.Points
	}
	return 0
}

func (m *Member) GetSecondaryPoints() float32 {
	if m != nil {
		return m.SecondaryPoints
	}
	return 0
}

func (m *Member) GetTierPoints() uint32 {
	if m != nil {
		return m.TierPoints
	}
	return 0
}

func (m *Member) GetExpiryDate() *timestamp.Timestamp {
	if m != nil {
		return m.ExpiryDate
	}
	return nil
}

func (m *Member) GetStatus() MemberStatus {
	if m != nil {
		return m.Status
	}
	return MemberStatus_ENROLLED
}

func (m *Member) GetPassOverrides() *io.PassOverrides {
	if m != nil {
		return m.PassOverrides
	}
	return nil
}

func (m *Member) GetPassMetaData() *io.Metadata {
	if m != nil {
		return m.PassMetaData
	}
	return nil
}

func (m *Member) GetActiveMessages() []*io.Message {
	if m != nil {
		return m.ActiveMessages
	}
	return nil
}

func (m *Member) GetNotes() []*io.Note {
	if m != nil {
		return m.Notes
	}
	return nil
}

func (m *Member) GetCurrentTierAwarded() *timestamp.Timestamp {
	if m != nil {
		return m.CurrentTierAwarded
	}
	return nil
}

func (m *Member) GetCurrentTierExpires() *timestamp.Timestamp {
	if m != nil {
		return m.CurrentTierExpires
	}
	return nil
}

func (m *Member) GetCreated() *timestamp.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *Member) GetUpdated() *timestamp.Timestamp {
	if m != nil {
		return m.Updated
	}
	return nil
}

// Used to request a digital membership pass by PassKit ID
type MemberRecordByExternalIdRequest struct {
	// Program ID
	// @tag: validateGeneric:"required"
	ProgramId string `protobuf:"bytes,1,opt,name=programId,proto3" json:"programId,omitempty" validateGeneric:"required"`
	// External ID
	// @tag: validateGeneric:"required"
	ExternalId           string   `protobuf:"bytes,2,opt,name=externalId,proto3" json:"externalId,omitempty" validateGeneric:"required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MemberRecordByExternalIdRequest) Reset()         { *m = MemberRecordByExternalIdRequest{} }
func (m *MemberRecordByExternalIdRequest) String() string { return proto.CompactTextString(m) }
func (*MemberRecordByExternalIdRequest) ProtoMessage()    {}
func (*MemberRecordByExternalIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fba4bff4643c063a, []int{1}
}

func (m *MemberRecordByExternalIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MemberRecordByExternalIdRequest.Unmarshal(m, b)
}
func (m *MemberRecordByExternalIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MemberRecordByExternalIdRequest.Marshal(b, m, deterministic)
}
func (m *MemberRecordByExternalIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MemberRecordByExternalIdRequest.Merge(m, src)
}
func (m *MemberRecordByExternalIdRequest) XXX_Size() int {
	return xxx_messageInfo_MemberRecordByExternalIdRequest.Size(m)
}
func (m *MemberRecordByExternalIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MemberRecordByExternalIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MemberRecordByExternalIdRequest proto.InternalMessageInfo

func (m *MemberRecordByExternalIdRequest) GetProgramId() string {
	if m != nil {
		return m.ProgramId
	}
	return ""
}

func (m *MemberRecordByExternalIdRequest) GetExternalId() string {
	if m != nil {
		return m.ExternalId
	}
	return ""
}

// Member segment allows us to segment members for listing or updating
type MemberSegmentRequest struct {
	// Optional filter object; defines the segment
	Filter *io.Filter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	// Contains fields to update (optional: if used in update context)
	NewValues            *Member  `protobuf:"bytes,2,opt,name=newValues,proto3" json:"newValues,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MemberSegmentRequest) Reset()         { *m = MemberSegmentRequest{} }
func (m *MemberSegmentRequest) String() string { return proto.CompactTextString(m) }
func (*MemberSegmentRequest) ProtoMessage()    {}
func (*MemberSegmentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fba4bff4643c063a, []int{2}
}

func (m *MemberSegmentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MemberSegmentRequest.Unmarshal(m, b)
}
func (m *MemberSegmentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MemberSegmentRequest.Marshal(b, m, deterministic)
}
func (m *MemberSegmentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MemberSegmentRequest.Merge(m, src)
}
func (m *MemberSegmentRequest) XXX_Size() int {
	return xxx_messageInfo_MemberSegmentRequest.Size(m)
}
func (m *MemberSegmentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MemberSegmentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MemberSegmentRequest proto.InternalMessageInfo

func (m *MemberSegmentRequest) GetFilter() *io.Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *MemberSegmentRequest) GetNewValues() *Member {
	if m != nil {
		return m.NewValues
	}
	return nil
}

type MemberPointsRequest struct {
	// Internal PassKit ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// External member ID
	ExternalId string `protobuf:"bytes,2,opt,name=externalId,proto3" json:"externalId,omitempty"`
	// Required if externalId is set
	ProgramId string `protobuf:"bytes,3,opt,name=programId,proto3" json:"programId,omitempty"`
	// Primary points
	Points float32 `protobuf:"fixed32,4,opt,name=points,proto3" json:"points,omitempty"`
	// Secondary points
	SecondaryPoints float32 `protobuf:"fixed32,5,opt,name=secondaryPoints,proto3" json:"secondaryPoints,omitempty"`
	// Tier points
	TierPoints           int32    `protobuf:"varint,6,opt,name=tierPoints,proto3" json:"tierPoints,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MemberPointsRequest) Reset()         { *m = MemberPointsRequest{} }
func (m *MemberPointsRequest) String() string { return proto.CompactTextString(m) }
func (*MemberPointsRequest) ProtoMessage()    {}
func (*MemberPointsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fba4bff4643c063a, []int{3}
}

func (m *MemberPointsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MemberPointsRequest.Unmarshal(m, b)
}
func (m *MemberPointsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MemberPointsRequest.Marshal(b, m, deterministic)
}
func (m *MemberPointsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MemberPointsRequest.Merge(m, src)
}
func (m *MemberPointsRequest) XXX_Size() int {
	return xxx_messageInfo_MemberPointsRequest.Size(m)
}
func (m *MemberPointsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MemberPointsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MemberPointsRequest proto.InternalMessageInfo

func (m *MemberPointsRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MemberPointsRequest) GetExternalId() string {
	if m != nil {
		return m.ExternalId
	}
	return ""
}

func (m *MemberPointsRequest) GetProgramId() string {
	if m != nil {
		return m.ProgramId
	}
	return ""
}

func (m *MemberPointsRequest) GetPoints() float32 {
	if m != nil {
		return m.Points
	}
	return 0
}

func (m *MemberPointsRequest) GetSecondaryPoints() float32 {
	if m != nil {
		return m.SecondaryPoints
	}
	return 0
}

func (m *MemberPointsRequest) GetTierPoints() int32 {
	if m != nil {
		return m.TierPoints
	}
	return 0
}

type MemberCheckInOutRequest struct {
	// Internal PassKit ID
	// @tag: validateCreate:"required" validateUpdate:"omitempty"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" validateCreate:"required" validateUpdate:"omitempty"`
	// External member ID
	// @tag: validateCreate:"omitempty" validateUpdate:"omitempty"
	ExternalId string `protobuf:"bytes,2,opt,name=externalId,proto3" json:"externalId,omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	// GPS details of check in
	// @tag: validateCreate:"omitempty" validateUpdate:"omitempty"
	Location *io.GPSLocation `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	// Optional timestamp
	// @tag: validateCreate:"omitempty" validateUpdate:"omitempty"
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *MemberCheckInOutRequest) Reset()         { *m = MemberCheckInOutRequest{} }
func (m *MemberCheckInOutRequest) String() string { return proto.CompactTextString(m) }
func (*MemberCheckInOutRequest) ProtoMessage()    {}
func (*MemberCheckInOutRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fba4bff4643c063a, []int{4}
}

func (m *MemberCheckInOutRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MemberCheckInOutRequest.Unmarshal(m, b)
}
func (m *MemberCheckInOutRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MemberCheckInOutRequest.Marshal(b, m, deterministic)
}
func (m *MemberCheckInOutRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MemberCheckInOutRequest.Merge(m, src)
}
func (m *MemberCheckInOutRequest) XXX_Size() int {
	return xxx_messageInfo_MemberCheckInOutRequest.Size(m)
}
func (m *MemberCheckInOutRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MemberCheckInOutRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MemberCheckInOutRequest proto.InternalMessageInfo

func (m *MemberCheckInOutRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MemberCheckInOutRequest) GetExternalId() string {
	if m != nil {
		return m.ExternalId
	}
	return ""
}

func (m *MemberCheckInOutRequest) GetLocation() *io.GPSLocation {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *MemberCheckInOutRequest) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

type ListRequest struct {
	// @tag: validateGeneric:"required" validateCreate:"required" validateUpdate:"required"
	ProgramId string `protobuf:"bytes,1,opt,name=programId,proto3" json:"programId,omitempty" validateGeneric:"required" validateCreate:"required" validateUpdate:"required"`
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	Pagination           *io.Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ListRequest) Reset()         { *m = ListRequest{} }
func (m *ListRequest) String() string { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()    {}
func (*ListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fba4bff4643c063a, []int{5}
}

func (m *ListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRequest.Unmarshal(m, b)
}
func (m *ListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRequest.Marshal(b, m, deterministic)
}
func (m *ListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRequest.Merge(m, src)
}
func (m *ListRequest) XXX_Size() int {
	return xxx_messageInfo_ListRequest.Size(m)
}
func (m *ListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRequest proto.InternalMessageInfo

func (m *ListRequest) GetProgramId() string {
	if m != nil {
		return m.ProgramId
	}
	return ""
}

func (m *ListRequest) GetPagination() *io.Pagination {
	if m != nil {
		return m.Pagination
	}
	return nil
}

func init() {
	proto.RegisterEnum("members.MemberEvents", MemberEvents_name, MemberEvents_value)
	proto.RegisterEnum("members.MemberStatus", MemberStatus_name, MemberStatus_value)
	proto.RegisterType((*Member)(nil), "members.Member")
	proto.RegisterMapType((map[string]string)(nil), "members.Member.MemberMetaDataEntry")
	proto.RegisterType((*MemberRecordByExternalIdRequest)(nil), "members.MemberRecordByExternalIdRequest")
	proto.RegisterType((*MemberSegmentRequest)(nil), "members.MemberSegmentRequest")
	proto.RegisterType((*MemberPointsRequest)(nil), "members.MemberPointsRequest")
	proto.RegisterType((*MemberCheckInOutRequest)(nil), "members.MemberCheckInOutRequest")
	proto.RegisterType((*ListRequest)(nil), "members.ListRequest")
}

func init() { proto.RegisterFile("io/member/member.proto", fileDescriptor_fba4bff4643c063a) }

var fileDescriptor_fba4bff4643c063a = []byte{
	// 1215 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0xcd, 0x72, 0xdb, 0x36,
	0x17, 0x0d, 0x65, 0x59, 0x96, 0x20, 0xdb, 0xe1, 0x87, 0xf8, 0x87, 0x56, 0xf2, 0x25, 0x1c, 0x75,
	0xa3, 0x49, 0x63, 0x2a, 0xe3, 0x74, 0xa6, 0x99, 0xec, 0x64, 0x93, 0xed, 0x48, 0xb1, 0x65, 0x0d,
	0xe5, 0xb8, 0x9d, 0x76, 0xe1, 0xc2, 0xe4, 0xb5, 0x8c, 0x58, 0x02, 0x58, 0x00, 0x72, 0xe2, 0x7d,
	0x9f, 0xa0, 0xcf, 0xd0, 0x99, 0xce, 0xb4, 0x9b, 0xbe, 0x44, 0xb7, 0x5d, 0xe4, 0x1d, 0xfa, 0x1e,
	0x1d, 0x80, 0xa4, 0xf5, 0x63, 0x4f, 0x9d, 0x74, 0x45, 0xe1, 0x9c, 0x73, 0x2f, 0x74, 0x2f, 0x2e,
	0x0e, 0x89, 0x36, 0x28, 0x6f, 0x8e, 0x60, 0x74, 0x0a, 0x22, 0x7b, 0x78, 0x89, 0xe0, 0x8a, 0xe3,
	0xa5, 0x74, 0x25, 0x6b, 0x4f, 0x06, 0x9c, 0x0f, 0x86, 0xd0, 0x34, 0xf0, 0xe9, 0xf8, 0xac, 0xa9,
	0xe8, 0x08, 0xa4, 0x22, 0xa3, 0x24, 0x55, 0xd6, 0x1e, 0x52, 0xde, 0x24, 0x09, 0x6d, 0x46, 0x7c,
	0x34, 0xe2, 0xec, 0x84, 0x9f, 0xbe, 0x85, 0x48, 0xc9, 0x8c, 0x5c, 0xa7, 0x3c, 0x23, 0x9a, 0x43,
	0xca, 0x2e, 0x72, 0x78, 0x6b, 0x02, 0x27, 0x82, 0xbf, 0xa7, 0x23, 0xaa, 0xae, 0x32, 0x6a, 0x73,
	0x42, 0x8d, 0x40, 0x4a, 0x32, 0x80, 0xdb, 0x08, 0x25, 0x68, 0x94, 0x27, 0x5b, 0x9b, 0x10, 0x8c,
	0xab, 0x5c, 0x5e, 0x9b, 0xda, 0x82, 0x0c, 0x28, 0x23, 0x8a, 0x72, 0x76, 0x33, 0x22, 0x21, 0x32,
	0xcf, 0xe3, 0x4c, 0xa1, 0x20, 0x24, 0x67, 0x64, 0x38, 0x55, 0x62, 0xc6, 0x28, 0x41, 0x98, 0x24,
	0xd1, 0x54, 0xb2, 0x67, 0xe6, 0x11, 0x6d, 0x0f, 0x80, 0x6d, 0xcb, 0x77, 0x64, 0x30, 0x00, 0xd1,
	0xe4, 0x89, 0x16, 0xc8, 0x26, 0x61, 0x8c, 0x2b, 0xb3, 0x73, 0xb6, 0x49, 0xfd, 0xef, 0x0a, 0x2a,
	0x1d, 0x98, 0xd6, 0xe2, 0x55, 0x54, 0xa0, 0xb1, 0x63, 0xb9, 0x56, 0xa3, 0x12, 0x16, 0x68, 0x8c,
	0x1f, 0x23, 0x04, 0xef, 0x15, 0x08, 0x46, 0x86, 0xed, 0xd8, 0x29, 0x18, 0x7c, 0x0a, 0xc1, 0x1e,
	0xc2, 0x03, 0xc1, 0xc7, 0x09, 0x65, 0x83, 0x76, 0x0c, 0x4c, 0xd1, 0x33, 0x0a, 0xc2, 0x59, 0x30,
	0xba, 0x5b, 0x18, 0xbc, 0x81, 0x4a, 0x8a, 0x82, 0x68, 0xc7, 0x4e, 0xd1, 0x68, 0xb2, 0x15, 0x7e,
	0x84, 0x2a, 0x89, 0xe0, 0x03, 0x41, 0x46, 0xed, 0xd8, 0x59, 0x34, 0xd4, 0x04, 0xc0, 0xcf, 0xd1,
	0x4a, 0x7a, 0xf4, 0x3e, 0x28, 0x42, 0x87, 0xd2, 0x29, 0xb9, 0x56, 0xa3, 0xba, 0x83, 0x3c, 0xca,
	0xbd, 0x9e, 0x69, 0x4b, 0x38, 0x2b, 0xc0, 0xaf, 0xd1, 0x6a, 0x0a, 0x1c, 0x80, 0x22, 0x3e, 0x51,
	0xc4, 0x59, 0x72, 0x17, 0x1a, 0xd5, 0x9d, 0xcf, 0xbc, 0x6c, 0x86, 0xbc, 0xb4, 0xe0, 0xec, 0x91,
	0xab, 0x02, 0xa6, 0xc4, 0x55, 0x38, 0x17, 0x8a, 0xd7, 0xd0, 0x22, 0x4f, 0x54, 0x9b, 0x39, 0x2b,
	0xae, 0xd5, 0x28, 0x87, 0xe9, 0x42, 0x97, 0x92, 0x70, 0xca, 0x94, 0x74, 0x56, 0x5d, 0xab, 0x51,
	0x08, 0xb3, 0x15, 0x6e, 0xa0, 0xfb, 0x12, 0x22, 0xce, 0x62, 0x22, 0xae, 0x7a, 0xa9, 0xe0, 0xbe,
	0x11, 0xcc, 0xc3, 0xba, 0xb9, 0xba, 0xfc, 0x4c, 0x64, 0xbb, 0x56, 0x63, 0x25, 0x9c, 0x42, 0xf0,
	0x2b, 0xdd, 0xfc, 0x84, 0x8a, 0x2b, 0x9f, 0x28, 0x70, 0xb0, 0xa9, 0xb9, 0xe6, 0xa5, 0xb3, 0xef,
	0xe5, 0xb3, 0xef, 0x1d, 0xe5, 0xb3, 0x1f, 0x4e, 0xa9, 0xf1, 0x36, 0x2a, 0x49, 0x45, 0xd4, 0x58,
	0x3a, 0x0f, 0x5c, 0xab, 0xb1, 0xba, 0xb3, 0x3e, 0x57, 0x78, 0xdf, 0x90, 0x61, 0x26, 0xc2, 0x5f,
	0xa2, 0x15, 0x3d, 0x75, 0x87, 0x97, 0x20, 0x04, 0x8d, 0x41, 0x3a, 0x6b, 0x66, 0xb7, 0xff, 0x99,
	0x0e, 0x4f, 0x13, 0xe1, 0xac, 0x0e, 0x3f, 0x47, 0xcb, 0x1a, 0xb8, 0x6e, 0xf3, 0xba, 0x89, 0x5b,
	0xd6, 0x71, 0x1a, 0x8b, 0x89, 0x22, 0xe1, 0x8c, 0x02, 0xbf, 0x40, 0xab, 0x7a, 0x56, 0x2f, 0xe1,
	0x20, 0xbd, 0x4a, 0xd2, 0xd9, 0x30, 0x47, 0x53, 0x4d, 0x63, 0x0c, 0x16, 0xce, 0x49, 0xf0, 0x63,
	0xb4, 0xa8, 0xef, 0x91, 0x74, 0x6a, 0x46, 0x5b, 0xd6, 0xda, 0x2e, 0x57, 0x10, 0xa6, 0x30, 0xee,
	0x20, 0x1c, 0x8d, 0x85, 0x00, 0xa6, 0x8e, 0x28, 0x88, 0xd6, 0x3b, 0x22, 0x62, 0x88, 0x9d, 0x87,
	0x77, 0xb6, 0xec, 0x96, 0xa8, 0xb9, 0x5c, 0x81, 0xee, 0x29, 0x48, 0xe7, 0xd1, 0x27, 0xe5, 0xca,
	0xa2, 0xf0, 0x17, 0x68, 0x29, 0x12, 0x40, 0x14, 0xc4, 0xce, 0xff, 0xef, 0x4c, 0x90, 0x4b, 0x75,
	0xd4, 0x38, 0x89, 0x4d, 0xd4, 0xe3, 0xbb, 0xa3, 0x32, 0x69, 0xad, 0x85, 0x1e, 0xdc, 0x32, 0xcd,
	0xd8, 0x46, 0x0b, 0x17, 0x70, 0x95, 0xdd, 0x69, 0xfd, 0x53, 0xcf, 0xf3, 0x25, 0x19, 0x8e, 0x21,
	0xbb, 0xcf, 0xe9, 0xe2, 0x55, 0xe1, 0xa5, 0xf5, 0xea, 0x77, 0xeb, 0xe7, 0xd6, 0xaf, 0x16, 0xfa,
	0xc5, 0x7a, 0x9a, 0x19, 0xc2, 0xce, 0x4f, 0xd6, 0x2e, 0x91, 0x34, 0x72, 0xd3, 0xe9, 0x71, 0x29,
	0x3b, 0xe3, 0x62, 0x64, 0xdc, 0xc3, 0x65, 0x00, 0xb1, 0x74, 0x15, 0x77, 0x4f, 0xc1, 0x4d, 0x04,
	0xbf, 0xa4, 0x31, 0xc4, 0x9e, 0x7b, 0x70, 0x53, 0x48, 0xa5, 0x1b, 0xc3, 0x10, 0x14, 0xc4, 0x2e,
	0x17, 0xae, 0x00, 0x16, 0x83, 0x80, 0xd8, 0x1d, 0xb3, 0xb1, 0x24, 0xa7, 0x43, 0x70, 0x39, 0x8b,
	0xc0, 0x55, 0xe7, 0x90, 0x6f, 0x22, 0x20, 0xe2, 0x22, 0x9e, 0x0a, 0xf3, 0x3e, 0x58, 0x99, 0x51,
	0x7c, 0xb0, 0x26, 0xb6, 0xd0, 0x29, 0x96, 0xcb, 0x76, 0xa5, 0x53, 0x2c, 0x57, 0x6c, 0xd4, 0x29,
	0x96, 0x91, 0x5d, 0xed, 0x14, 0xcb, 0x55, 0x7b, 0xb9, 0x53, 0x2c, 0x2f, 0xdb, 0x2b, 0x9d, 0x62,
	0x79, 0xd3, 0x76, 0x3a, 0xc5, 0xb2, 0x63, 0x6f, 0x75, 0x8a, 0xe5, 0x2d, 0xbb, 0x56, 0x3f, 0x41,
	0x4f, 0xd2, 0x7f, 0x17, 0x9a, 0x0d, 0x76, 0xaf, 0x82, 0x6b, 0x23, 0x0b, 0xe1, 0xc7, 0x31, 0x48,
	0x35, 0xeb, 0x43, 0xd6, 0xbc, 0x0f, 0xdd, 0xe1, 0x86, 0x75, 0x8a, 0xd6, 0xb2, 0xdb, 0x05, 0x83,
	0x11, 0x30, 0x95, 0x67, 0xad, 0xa3, 0xd2, 0x19, 0x1d, 0x2a, 0x10, 0x26, 0x65, 0x66, 0x5c, 0x5f,
	0x19, 0x24, 0xcc, 0x18, 0xbc, 0x8d, 0x2a, 0x0c, 0xde, 0x1d, 0xeb, 0xa3, 0x90, 0x26, 0x75, 0x75,
	0xe7, 0xfe, 0xdc, 0x9d, 0x0d, 0x27, 0x8a, 0xfa, 0x9f, 0x56, 0x7e, 0xda, 0xa9, 0x59, 0xe4, 0x5b,
	0x7d, 0xaa, 0x81, 0xcf, 0x14, 0xbc, 0x30, 0x5f, 0xf0, 0xc4, 0xe3, 0x8a, 0x77, 0x79, 0xdc, 0xe2,
	0xc7, 0x78, 0x9c, 0xf6, 0xed, 0xc5, 0x69, 0x8f, 0xab, 0xff, 0x61, 0xa1, 0xcd, 0xb4, 0x8e, 0xbd,
	0x73, 0x88, 0x2e, 0xda, 0xec, 0x70, 0xac, 0xfe, 0x6b, 0x2d, 0x9f, 0xa3, 0xf2, 0x90, 0x47, 0x66,
	0xe6, 0x4c, 0x29, 0xba, 0x83, 0x94, 0x7b, 0x5f, 0xf7, 0xfa, 0xfb, 0x19, 0x1c, 0x5e, 0x0b, 0xf0,
	0x4b, 0x54, 0xb9, 0xfe, 0x6a, 0x30, 0xd5, 0xfd, 0xfb, 0x2d, 0x9b, 0x88, 0xeb, 0xdf, 0xa3, 0xea,
	0x3e, 0x95, 0xea, 0xe3, 0x46, 0xc6, 0x43, 0x68, 0xf2, 0xaa, 0xcf, 0xce, 0x75, 0x35, 0x75, 0xd5,
	0x1c, 0x0d, 0xa7, 0x14, 0x4f, 0xff, 0xb2, 0xd0, 0x72, 0xda, 0x8f, 0xe0, 0x12, 0x74, 0x03, 0x1f,
	0xa2, 0xcd, 0xe0, 0x38, 0xe8, 0x1e, 0x9d, 0x1c, 0x04, 0x07, 0xbb, 0x41, 0x78, 0xe2, 0x1f, 0x9e,
	0x74, 0x0f, 0x8f, 0x4e, 0xde, 0xf4, 0x03, 0xfb, 0x1e, 0xde, 0x42, 0xeb, 0x33, 0x64, 0xab, 0xd7,
	0x0b, 0x0f, 0x8f, 0x03, 0xdf, 0x86, 0x1b, 0x94, 0x1f, 0xec, 0xed, 0xb7, 0xbb, 0x81, 0x6f, 0x9f,
	0xe1, 0x1a, 0xda, 0x98, 0x8d, 0xda, 0x3b, 0x6a, 0x1f, 0xb7, 0x8e, 0x02, 0xdf, 0x1e, 0xdc, 0x0c,
	0x6b, 0xf7, 0x5b, 0xbb, 0xfb, 0x81, 0x6f, 0x9f, 0x63, 0x07, 0xad, 0xcd, 0x50, 0x61, 0xd0, 0x0d,
	0xbe, 0x09, 0x7c, 0x9b, 0xde, 0x48, 0xb8, 0xd7, 0xea, 0xee, 0x05, 0xfb, 0x3a, 0xea, 0xed, 0xd3,
	0x1f, 0xf2, 0x7a, 0xd2, 0x37, 0x0e, 0x5e, 0x46, 0xe5, 0xa0, 0x1b, 0x1e, 0x1a, 0xf6, 0x1e, 0x46,
	0xa8, 0x64, 0x76, 0x0f, 0x6c, 0x0b, 0xaf, 0xa0, 0x4a, 0xff, 0x4d, 0xbf, 0x17, 0x74, 0xfd, 0xc0,
	0xb7, 0x0b, 0xb8, 0x8a, 0x96, 0x82, 0x6f, 0x7b, 0xed, 0x30, 0xf0, 0xed, 0x05, 0xcd, 0x4d, 0x92,
	0x16, 0x35, 0xe7, 0x07, 0xfb, 0x81, 0xfe, 0xcb, 0x8b, 0xbb, 0x7d, 0xb4, 0x49, 0xb9, 0xa7, 0xdf,
	0x31, 0x17, 0x54, 0x79, 0xbd, 0xd7, 0xe6, 0x35, 0x62, 0xee, 0xcd, 0x77, 0xcf, 0xa4, 0x22, 0xf2,
	0xfc, 0x9a, 0x8b, 0xf8, 0xa8, 0xa9, 0xbf, 0x2d, 0x79, 0x0c, 0xc3, 0xa6, 0x8c, 0x2f, 0x9a, 0x03,
	0xde, 0xbc, 0xfe, 0xd6, 0x94, 0xbf, 0x15, 0x2a, 0xbd, 0xd7, 0x59, 0xe4, 0x69, 0xc9, 0xcc, 0xc0,
	0x8b, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0xa2, 0xa2, 0x0a, 0xab, 0x8c, 0x0a, 0x00, 0x00,
}
