// Code generated by protoc-gen-go. DO NOT EDIT.
// source: io/single_use_coupons/a_rpc.proto

package single_use_coupons

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
	io "github.com/PassKit/passkit-golang-grpc-sdk/io"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

func init() {
	proto.RegisterFile("io/single_use_coupons/a_rpc.proto", fileDescriptor_87806e5f353292c9)
}

var fileDescriptor_87806e5f353292c9 = []byte{
	// 2382 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x59, 0x5f, 0x6c, 0x1c, 0x47,
	0x19, 0x67, 0x2f, 0x28, 0x85, 0x69, 0x52, 0x9c, 0x4d, 0x9a, 0x90, 0x4d, 0xdc, 0x4c, 0x8e, 0x84,
	0x38, 0x6e, 0xb2, 0x77, 0x71, 0x1c, 0x5a, 0xdc, 0x08, 0xba, 0xb1, 0xdd, 0x60, 0x12, 0x88, 0x75,
	0x76, 0x5a, 0x91, 0x2a, 0x8a, 0xe6, 0x76, 0xbf, 0xbb, 0x9b, 0x7a, 0x6f, 0x67, 0x33, 0x33, 0x6b,
	0xe7, 0x08, 0x79, 0x00, 0xf1, 0xc0, 0x1f, 0xb5, 0x88, 0xa3, 0xa1, 0x12, 0x42, 0x48, 0x05, 0x21,
	0x21, 0x9e, 0x51, 0x01, 0x81, 0x00, 0x55, 0xe2, 0x11, 0x5e, 0x8a, 0x10, 0xa8, 0xaf, 0xf0, 0x84,
	0x78, 0x01, 0x9e, 0x78, 0x01, 0xcd, 0xcc, 0xee, 0xdd, 0xde, 0xdd, 0xde, 0xd9, 0x4e, 0x41, 0x8a,
	0x74, 0xd9, 0xf9, 0x66, 0xbe, 0xfd, 0xfd, 0x7e, 0xf3, 0xcd, 0xf7, 0x7d, 0xb3, 0x46, 0x27, 0x29,
	0xab, 0x08, 0x1a, 0x35, 0x43, 0xb8, 0x93, 0x08, 0xb8, 0xe3, 0xb3, 0x24, 0x66, 0x91, 0xa8, 0x90,
	0x3b, 0x3c, 0xf6, 0xdd, 0x98, 0x33, 0xc9, 0x6c, 0x7b, 0xd4, 0xee, 0x1c, 0x6b, 0x32, 0xd6, 0x0c,
	0xa1, 0xa2, 0x67, 0xd4, 0x93, 0x46, 0x05, 0xda, 0xb1, 0xec, 0x98, 0x05, 0xce, 0xf1, 0xd4, 0x48,
	0x62, 0x5a, 0x21, 0x51, 0xc4, 0x24, 0x91, 0x94, 0x45, 0x22, 0xb5, 0x3e, 0x45, 0x59, 0xc5, 0x67,
	0xed, 0x36, 0x8b, 0xd2, 0x9f, 0x3b, 0xac, 0xfe, 0x0a, 0xf8, 0x32, 0xb3, 0x3b, 0x7d, 0x7b, 0x4c,
	0x9a, 0x34, 0xd2, 0x8b, 0x53, 0xdb, 0xe1, 0xbe, 0xad, 0x41, 0x43, 0x09, 0x3c, 0x1d, 0x3f, 0xda,
	0x1f, 0xe7, 0x10, 0x33, 0x2e, 0x69, 0xd4, 0x4c, 0x4d, 0xa7, 0x8a, 0x09, 0xfa, 0xa4, 0x1d, 0x13,
	0xda, 0xcc, 0x1c, 0x8f, 0x91, 0x81, 0x35, 0x1a, 0xbd, 0x77, 0x94, 0xc7, 0x38, 0xd2, 0xbf, 0xe9,
	0x9c, 0x73, 0xfa, 0xc7, 0x3f, 0xdf, 0x84, 0xe8, 0xbc, 0xd8, 0x22, 0xcd, 0x26, 0xf0, 0x0a, 0x8b,
	0x35, 0xfb, 0x51, 0x25, 0xe6, 0x7e, 0x51, 0x45, 0x53, 0x6b, 0xda, 0xe3, 0x4d, 0x01, 0x8b, 0xc6,
	0x9f, 0xfd, 0x1b, 0x0b, 0x1d, 0xf2, 0x39, 0x10, 0x99, 0x8e, 0x2c, 0xa6, 0x40, 0xed, 0xb2, 0x3b,
	0xfa, 0x76, 0x77, 0x70, 0x8e, 0xb3, 0xd7, 0xa5, 0xcc, 0x5d, 0x09, 0xca, 0x5f, 0xe8, 0x7a, 0xeb,
	0x68, 0xca, 0x18, 0x71, 0x66, 0x15, 0xf6, 0xe1, 0x45, 0xed, 0x18, 0x0f, 0x19, 0x9c, 0x19, 0x33,
	0x2e, 0x30, 0xc1, 0x11, 0x6c, 0x61, 0x83, 0x09, 0xdf, 0x14, 0x23, 0x33, 0xbf, 0xf4, 0xce, 0x5f,
	0xbe, 0x55, 0x3a, 0x51, 0x76, 0x52, 0xd6, 0xa9, 0x1e, 0x37, 0x05, 0xf4, 0xf4, 0x5c, 0xb0, 0x66,
	0xed, 0x3f, 0x58, 0xe8, 0x50, 0x12, 0x07, 0x8f, 0x46, 0x61, 0x07, 0x73, 0xca, 0xb2, 0xeb, 0x5d,
	0x2f, 0xa2, 0x77, 0x53, 0xbf, 0x74, 0x84, 0x1e, 0x36, 0xe3, 0x02, 0x93, 0x08, 0xc3, 0x3d, 0x2a,
	0x54, 0x74, 0xe0, 0x55, 0x22, 0x04, 0x5e, 0xe5, 0x4c, 0x85, 0x9e, 0xa1, 0xe5, 0x6c, 0x43, 0xeb,
	0x27, 0x16, 0x3a, 0xd0, 0x04, 0x39, 0xc4, 0x29, 0x95, 0x7c, 0x47, 0xb8, 0x45, 0xd7, 0x5b, 0x29,
	0xc0, 0x7d, 0xf0, 0x2a, 0xc8, 0x51, 0xd0, 0x57, 0x41, 0x0e, 0x22, 0x2e, 0xda, 0x8b, 0x93, 0xf6,
	0x89, 0xf1, 0xa0, 0x2b, 0xf7, 0x69, 0xf0, 0xc0, 0xfe, 0xde, 0x1e, 0x74, 0x28, 0x80, 0x10, 0x46,
	0x76, 0x23, 0x43, 0x7e, 0xd8, 0x35, 0xe7, 0xd5, 0xcd, 0x0e, 0xb3, 0xbb, 0xac, 0x0e, 0x73, 0xf9,
	0xaf, 0xa5, 0xae, 0xf7, 0xd3, 0x52, 0x91, 0xce, 0x4b, 0xda, 0xdd, 0x08, 0xe4, 0xaf, 0x95, 0x8c,
	0x61, 0x22, 0x6c, 0x5c, 0xef, 0x60, 0x1a, 0xb8, 0x58, 0x4f, 0x55, 0x76, 0x32, 0x32, 0x83, 0x83,
	0x48, 0x42, 0x29, 0x30, 0x8d, 0xb0, 0x6c, 0x01, 0xe6, 0x10, 0x12, 0x09, 0x01, 0xd6, 0x87, 0x11,
	0xd7, 0x41, 0x2d, 0x32, 0x84, 0x82, 0x73, 0x98, 0x44, 0x01, 0x26, 0x61, 0x88, 0x53, 0xc5, 0x53,
	0x33, 0x8d, 0x36, 0x49, 0x48, 0x03, 0xbd, 0x2c, 0xf5, 0xe2, 0x27, 0x42, 0xb2, 0x36, 0x70, 0x81,
	0x3f, 0xc3, 0xea, 0x34, 0x04, 0xfc, 0x12, 0x09, 0x43, 0x90, 0xcf, 0x61, 0x0e, 0x51, 0x00, 0x5c,
	0xad, 0x92, 0x2d, 0x68, 0xe3, 0x24, 0x4a, 0x04, 0xa9, 0x87, 0xe0, 0xe2, 0xf5, 0x16, 0x15, 0xb8,
	0x0d, 0xb2, 0xc5, 0x02, 0x1c, 0x01, 0x04, 0x02, 0x4b, 0x86, 0xeb, 0x80, 0x13, 0x01, 0x01, 0xde,
	0xa2, 0xb2, 0x85, 0x7d, 0xc2, 0xe1, 0x1c, 0x96, 0x6a, 0x9e, 0xfa, 0xc7, 0x39, 0x6c, 0x02, 0x17,
	0x54, 0xad, 0xd6, 0xbb, 0x73, 0x6a, 0x76, 0xbb, 0xdd, 0x51, 0x71, 0xf5, 0x7a, 0x09, 0x4d, 0x87,
	0x54, 0x0c, 0x05, 0x96, 0x58, 0x82, 0x98, 0x83, 0xaf, 0x28, 0xd8, 0x4f, 0xa8, 0x9d, 0x5a, 0xed,
	0x25, 0xc3, 0x1d, 0xc5, 0xda, 0x2f, 0xad, 0xae, 0xf7, 0xd0, 0x2a, 0xd8, 0xbd, 0xf2, 0x75, 0x2a,
	0x46, 0xc2, 0x4d, 0xe0, 0x97, 0x97, 0x96, 0x57, 0x6b, 0xcb, 0x8b, 0xde, 0xfa, 0xf2, 0xd2, 0x6d,
	0xe7, 0x76, 0xee, 0x69, 0x01, 0xdf, 0xa8, 0x61, 0x16, 0x03, 0x27, 0x92, 0x71, 0xc5, 0x33, 0x62,
	0x12, 0x8b, 0x24, 0x56, 0x69, 0x16, 0x82, 0xdb, 0x58, 0xb9, 0x13, 0x7a, 0x0f, 0x46, 0x7c, 0x36,
	0x18, 0xd7, 0xda, 0x87, 0xac, 0xd9, 0x34, 0x3b, 0x91, 0x08, 0xe0, 0x46, 0x9b, 0x69, 0xfb, 0xd8,
	0x78, 0x6d, 0x44, 0xd5, 0xb2, 0xff, 0x68, 0xa1, 0x83, 0x05, 0xb2, 0xd8, 0x8f, 0x2b, 0x31, 0x5e,
	0xd0, 0xd9, 0x5f, 0xec, 0x48, 0x89, 0xaf, 0x5b, 0x5d, 0xef, 0x76, 0x81, 0x10, 0x4f, 0x16, 0x0a,
	0xe1, 0xcc, 0x3d, 0x22, 0xa1, 0xd3, 0x65, 0x3c, 0x81, 0x50, 0x45, 0x51, 0x59, 0xb0, 0x66, 0xab,
	0x96, 0xfd, 0x0f, 0x0b, 0xed, 0x6b, 0x82, 0xf4, 0x22, 0x12, 0x76, 0x24, 0xf5, 0x85, 0x7d, 0x48,
	0x31, 0xea, 0x3d, 0xd6, 0xe0, 0x6e, 0x02, 0x42, 0x3a, 0x17, 0xb7, 0xa7, 0x96, 0x5b, 0x23, 0x94,
	0x19, 0xca, 0xdf, 0x1e, 0xc3, 0x75, 0xba, 0x20, 0xc5, 0xe0, 0xde, 0x72, 0x67, 0xb6, 0x06, 0x92,
	0x53, 0xd8, 0x04, 0x81, 0x4d, 0x05, 0x63, 0x21, 0x16, 0x31, 0xf8, 0xb4, 0x41, 0x7d, 0x4c, 0xb2,
	0x69, 0x38, 0x20, 0x92, 0x68, 0xae, 0x55, 0xdb, 0x9d, 0x14, 0xd8, 0x7e, 0x48, 0x84, 0x58, 0x09,
	0x1e, 0x54, 0x7a, 0x4b, 0xed, 0x1f, 0x58, 0xe8, 0x40, 0xbe, 0xac, 0xdd, 0x50, 0x87, 0xd9, 0x3e,
	0x31, 0x9e, 0xa3, 0x9e, 0xd0, 0x2b, 0x68, 0xd0, 0xf5, 0x9e, 0x47, 0xfb, 0x53, 0x02, 0xda, 0x24,
	0xec, 0x83, 0x83, 0xd5, 0xcc, 0x2c, 0x70, 0x06, 0x4b, 0x59, 0xde, 0xa6, 0x91, 0x1f, 0x2f, 0x1f,
	0x19, 0x45, 0xae, 0x33, 0x8b, 0x3a, 0x8a, 0x6f, 0x5b, 0xe8, 0x40, 0xbe, 0x72, 0xed, 0x10, 0xe5,
	0x76, 0x13, 0xca, 0x1b, 0x5d, 0xef, 0x85, 0x11, 0xf8, 0x83, 0xd5, 0xca, 0x78, 0x2a, 0x2c, 0x55,
	0xa3, 0x24, 0x9c, 0x49, 0x24, 0xbe, 0x6f, 0xa1, 0x27, 0x7a, 0x75, 0xca, 0x30, 0xc8, 0x52, 0xfd,
	0xb6, 0x40, 0x9b, 0x05, 0x3a, 0x4f, 0xe5, 0x62, 0xc7, 0xa0, 0x9c, 0x1e, 0x57, 0x9b, 0xfa, 0x10,
	0x9f, 0xb2, 0x8f, 0x8f, 0x81, 0x68, 0xaa, 0xd2, 0xbb, 0x25, 0x74, 0x20, 0x5f, 0x95, 0x06, 0x71,
	0x8e, 0x2b, 0x49, 0x3f, 0x2c, 0x75, 0xbd, 0x7f, 0x5b, 0x23, 0x4a, 0x0e, 0xd6, 0x23, 0x83, 0xf1,
	0x1d, 0x6b, 0x42, 0x31, 0xba, 0x61, 0x4a, 0xc9, 0xb8, 0x4a, 0x64, 0xcc, 0xb9, 0x32, 0xf4, 0x7f,
	0xaa, 0x30, 0x9f, 0x7d, 0xa4, 0xaa, 0x72, 0x72, 0x76, 0xa2, 0xb4, 0x2a, 0x04, 0xde, 0x2c, 0x21,
	0xa7, 0x9f, 0x3b, 0x8d, 0x4c, 0xb9, 0x7a, 0x72, 0x69, 0x9b, 0x30, 0x10, 0x2a, 0x05, 0xa6, 0x79,
	0xa8, 0xbf, 0x6c, 0xfb, 0xe8, 0xf9, 0x91, 0xd5, 0xf5, 0xbe, 0x3c, 0xb2, 0x3d, 0x27, 0xf2, 0x79,
	0xd6, 0x8c, 0x0d, 0x56, 0x9b, 0xda, 0x7b, 0xa9, 0x36, 0xa9, 0x43, 0x95, 0x99, 0x09, 0xee, 0x75,
	0xf5, 0x5a, 0x28, 0xc7, 0xfe, 0xf0, 0x18, 0xa1, 0x54, 0x7d, 0x79, 0xd7, 0x42, 0x53, 0xc3, 0x1a,
	0xd9, 0x4f, 0xef, 0x42, 0x99, 0xed, 0xf5, 0xd8, 0x52, 0x7d, 0xea, 0x90, 0x1a, 0xf6, 0xa8, 0x1a,
	0xce, 0x99, 0xdd, 0xb0, 0x2a, 0x97, 0xa7, 0xc7, 0xb1, 0xca, 0x15, 0x99, 0x6f, 0x58, 0x68, 0x5f,
	0x3e, 0xdf, 0xda, 0xce, 0x78, 0xb0, 0xbd, 0x2c, 0xfb, 0x72, 0xd7, 0xbb, 0x84, 0x1e, 0xcb, 0x6e,
	0x22, 0xfb, 0x07, 0xf2, 0xab, 0x73, 0x6c, 0x30, 0xb3, 0x26, 0x11, 0xbd, 0x9b, 0x64, 0x46, 0x53,
	0xd1, 0xcb, 0x05, 0x72, 0x9b, 0x01, 0x15, 0x93, 0xaf, 0x59, 0x68, 0x5f, 0x3e, 0xb7, 0xee, 0x08,
	0xd1, 0xad, 0xae, 0x37, 0x9f, 0x43, 0x34, 0x90, 0x32, 0x1d, 0x67, 0x7c, 0xb2, 0x34, 0x80, 0x9c,
	0x89, 0x80, 0x7e, 0x67, 0xa1, 0x83, 0x42, 0x72, 0x20, 0x6d, 0xb3, 0x26, 0xf5, 0xb6, 0x23, 0x5c,
	0xaf, 0x5a, 0x5d, 0xef, 0xab, 0x56, 0x1f, 0xd9, 0xfc, 0x9a, 0x76, 0x94, 0x6d, 0x5f, 0x06, 0x6c,
	0x86, 0x35, 0x1a, 0xd4, 0xa7, 0x24, 0xc4, 0x6b, 0x4b, 0xd7, 0xce, 0x08, 0xcc, 0xa2, 0xb0, 0x73,
	0x0e, 0x47, 0x0c, 0xd7, 0x96, 0xd7, 0xd6, 0xcf, 0x3a, 0x9f, 0xca, 0xe6, 0x0d, 0xe7, 0x27, 0x0e,
	0x3e, 0xe3, 0x81, 0xc0, 0x9b, 0x94, 0x60, 0x03, 0xd1, 0xc5, 0xeb, 0xfd, 0x34, 0xa1, 0xc2, 0xa2,
	0x4e, 0xa4, 0xdf, 0xc2, 0x46, 0x50, 0x77, 0xc6, 0xaa, 0x5a, 0xf6, 0xdf, 0x4a, 0x68, 0x1f, 0x87,
	0x00, 0xa0, 0xbd, 0x0b, 0x81, 0xdf, 0x2a, 0x75, 0xbd, 0xaf, 0x94, 0x72, 0x12, 0xd7, 0xb4, 0x87,
	0x4c, 0xe2, 0xbf, 0x5b, 0xe6, 0xb9, 0x48, 0x63, 0x57, 0xdf, 0x10, 0x75, 0x9e, 0x82, 0x28, 0x88,
	0x19, 0x8d, 0x24, 0xde, 0x6a, 0x41, 0x84, 0x3b, 0x2c, 0xc1, 0x5b, 0x24, 0x92, 0x2a, 0xb3, 0xf9,
	0x24, 0x96, 0x09, 0x57, 0x4d, 0x7c, 0x00, 0x6d, 0x7d, 0x13, 0xd6, 0x5d, 0x84, 0xee, 0xdb, 0x25,
	0xa7, 0xea, 0x86, 0xac, 0x93, 0xa7, 0xd8, 0xa2, 0x8a, 0x8f, 0x64, 0x69, 0xcb, 0xdf, 0x9f, 0x0d,
	0x42, 0xf5, 0x2a, 0xac, 0x61, 0x72, 0x6c, 0xfa, 0xe6, 0xf5, 0xde, 0xff, 0xb1, 0xaf, 0x2f, 0xd6,
	0x3d, 0x6d, 0x48, 0x93, 0xa8, 0x84, 0xdd, 0x90, 0xc0, 0xb1, 0x4f, 0xc2, 0xd0, 0xa4, 0xdd, 0x1c,
	0x46, 0x73, 0x67, 0x50, 0xad, 0x3d, 0xe1, 0x1b, 0x6a, 0x81, 0xc0, 0x46, 0x35, 0x08, 0xd2, 0xae,
	0xdd, 0x39, 0x31, 0x2e, 0x6c, 0x2a, 0x66, 0xa6, 0x8a, 0x9e, 0x3f, 0x5b, 0xe8, 0x48, 0x3e, 0x7a,
	0x6a, 0x3d, 0xc8, 0x3b, 0x8b, 0xa0, 0x87, 0x56, 0xd7, 0xfb, 0x66, 0x2e, 0x82, 0x9e, 0x1d, 0x8c,
	0xa0, 0x9c, 0xbb, 0xed, 0xa2, 0xe8, 0x7a, 0xb6, 0x45, 0x8f, 0x1c, 0x45, 0x7d, 0xb9, 0x4d, 0x24,
	0xbd, 0x66, 0xa1, 0xfd, 0xbd, 0x0e, 0xe2, 0x4a, 0x67, 0x25, 0xe8, 0x15, 0xe6, 0x09, 0xcc, 0xca,
	0x9f, 0xeb, 0x7a, 0x17, 0xfa, 0x7c, 0xf2, 0x5d, 0x43, 0xbd, 0x83, 0x57, 0x96, 0x9c, 0x43, 0xa6,
	0x6b, 0x18, 0x44, 0x67, 0xae, 0xde, 0xf6, 0xf4, 0x58, 0xc5, 0x75, 0xb7, 0xf0, 0x2f, 0x0b, 0x3d,
	0x99, 0x03, 0xb4, 0x7c, 0x4f, 0x02, 0x8f, 0x48, 0xb8, 0x12, 0xd8, 0xa7, 0x8b, 0x00, 0xf5, 0xed,
	0x59, 0xaa, 0x9e, 0x84, 0xfb, 0x0d, 0x4b, 0x5d, 0xcb, 0x7b, 0xc0, 0x8f, 0x0e, 0x02, 0xcf, 0x7c,
	0x29, 0x06, 0x1f, 0x29, 0x62, 0x30, 0x34, 0x49, 0x13, 0x5a, 0xb6, 0x17, 0xc7, 0x12, 0x82, 0x1e,
	0xb8, 0xca, 0x7d, 0x7f, 0xa0, 0x9d, 0x57, 0x1d, 0xf3, 0xfd, 0xbe, 0xf9, 0x81, 0xfd, 0x76, 0x09,
	0xa1, 0x4d, 0x46, 0x83, 0x1d, 0x9c, 0xe7, 0x71, 0x1d, 0xd3, 0x7f, 0xac, 0xae, 0xf7, 0xa7, 0x5c,
	0x98, 0x3d, 0xfe, 0x22, 0xa3, 0x41, 0x76, 0xba, 0x7f, 0x6d, 0xa9, 0x27, 0x81, 0x67, 0x4c, 0x27,
	0x26, 0xce, 0x16, 0xf5, 0x4a, 0x7a, 0xf3, 0x30, 0xe3, 0x79, 0x92, 0x2e, 0x5e, 0xe9, 0xf5, 0x3f,
	0x22, 0x77, 0x30, 0x77, 0xd1, 0x0a, 0x51, 0xa9, 0xa2, 0x30, 0x04, 0x21, 0x06, 0x6f, 0xda, 0x43,
	0x2d, 0x8f, 0x3e, 0xac, 0xa2, 0xc5, 0x92, 0x30, 0x18, 0xed, 0x92, 0xd2, 0x9b, 0xe4, 0xec, 0xc4,
	0x34, 0xff, 0xb3, 0x12, 0x3a, 0xdd, 0xaf, 0xf3, 0xe2, 0x4a, 0x67, 0xf0, 0x0e, 0x95, 0x6b, 0x8b,
	0xce, 0x16, 0xe9, 0x5b, 0xdc, 0x0a, 0x4d, 0x8a, 0xa7, 0xdf, 0x5a, 0x5d, 0xef, 0xd5, 0x9c, 0xe4,
	0x47, 0x73, 0x15, 0x7f, 0xa8, 0xf3, 0x69, 0xee, 0xb2, 0xf3, 0x19, 0x68, 0x44, 0x4d, 0x73, 0x30,
	0x74, 0xa9, 0x73, 0xf1, 0x9a, 0x59, 0x22, 0x70, 0xee, 0xeb, 0xa9, 0xd6, 0xc9, 0xb5, 0xcf, 0x8d,
	0xd3, 0x49, 0x14, 0x84, 0x62, 0xd5, 0xb2, 0xff, 0x69, 0xa1, 0x63, 0x13, 0xa4, 0x2b, 0xbe, 0x18,
	0xe5, 0x3b, 0xa4, 0x49, 0x32, 0xbd, 0x6e, 0x75, 0xbd, 0x9b, 0x7d, 0x95, 0xf6, 0xe5, 0x55, 0x72,
	0x2e, 0xbf, 0x67, 0xb6, 0x1f, 0x2b, 0x5f, 0x18, 0xcf, 0x56, 0x91, 0x2a, 0xa0, 0x6c, 0x5a, 0xa7,
	0x37, 0x4a, 0xe8, 0xa3, 0x3e, 0x4b, 0xa2, 0xff, 0x6d, 0xc4, 0x7c, 0x50, 0x65, 0xd0, 0x45, 0xe5,
	0xb6, 0xfc, 0x96, 0xd5, 0xf5, 0x3a, 0x3b, 0x8a, 0x8f, 0xb5, 0x5d, 0xc4, 0x87, 0xf6, 0xbd, 0x03,
	0xc9, 0xb4, 0x3a, 0xf3, 0xf6, 0xdc, 0x78, 0x75, 0x34, 0xf9, 0x02, 0x79, 0xec, 0xdf, 0x5b, 0xe8,
	0xf8, 0x24, 0x65, 0xb6, 0x0f, 0x88, 0x9c, 0x0a, 0x5f, 0xb4, 0xba, 0x9e, 0x37, 0x6e, 0xff, 0x67,
	0x76, 0xc5, 0xe6, 0x99, 0xf2, 0x23, 0xb0, 0x51, 0xb9, 0xe1, 0xe7, 0x16, 0xb2, 0x7d, 0x16, 0x0f,
	0xd3, 0x38, 0x53, 0x18, 0xb6, 0xa9, 0x75, 0x91, 0xc5, 0x9d, 0x8c, 0x4e, 0x56, 0xcc, 0x79, 0xd7,
	0x5b, 0x2e, 0xf8, 0xea, 0xb2, 0x5f, 0xcd, 0xed, 0x7f, 0x1f, 0x2d, 0x2f, 0xb2, 0x98, 0x0e, 0xb5,
	0xab, 0x7e, 0xff, 0xa3, 0x67, 0xaf, 0x1c, 0x9e, 0x2a, 0x4f, 0xfa, 0x6c, 0xa8, 0xf0, 0x2e, 0x58,
	0xb3, 0x57, 0x1e, 0x3e, 0xd6, 0xf5, 0xde, 0xdc, 0x6b, 0xff, 0xaa, 0x84, 0xa6, 0x57, 0x89, 0x10,
	0xd7, 0xa8, 0x2c, 0xf8, 0x70, 0xef, 0xad, 0xae, 0xd8, 0xdf, 0xb5, 0x74, 0x7e, 0xed, 0x7d, 0xd8,
	0xa1, 0x02, 0x8b, 0x84, 0x4a, 0x2d, 0xa8, 0x4f, 0x04, 0x08, 0xd5, 0xb5, 0x71, 0xd0, 0x89, 0x3b,
	0x11, 0xfa, 0xe2, 0x7b, 0x37, 0xa1, 0x5c, 0x77, 0xfa, 0x7e, 0x08, 0x24, 0x32, 0x39, 0x98, 0xb6,
	0xe3, 0x10, 0xb0, 0x01, 0xa4, 0xe6, 0x65, 0x29, 0x5f, 0xb9, 0x11, 0x2d, 0xc6, 0x25, 0x96, 0xc0,
	0xdb, 0xfd, 0xae, 0x2c, 0xfb, 0x66, 0x46, 0x23, 0xec, 0xc5, 0x71, 0xaf, 0x06, 0x68, 0x67, 0x57,
	0x75, 0xad, 0xc2, 0xab, 0xa4, 0xe3, 0x3a, 0xcf, 0xb6, 0xa4, 0x8c, 0xc5, 0x42, 0xa5, 0x12, 0x13,
	0x21, 0x36, 0xa8, 0x74, 0x7d, 0xd6, 0xae, 0x84, 0xd0, 0x24, 0x61, 0x45, 0x39, 0x14, 0xe7, 0x59,
	0xe3, 0xbc, 0x48, 0xea, 0xc2, 0xe7, 0x54, 0xb7, 0x28, 0xe7, 0x05, 0xf0, 0x4d, 0xea, 0x43, 0xa5,
	0xfc, 0x49, 0xf4, 0xa1, 0x1e, 0x73, 0x73, 0x0e, 0xec, 0x23, 0x99, 0xb3, 0x80, 0xf9, 0xc2, 0xcd,
	0x3c, 0x52, 0xe6, 0x1c, 0x4c, 0x4f, 0xca, 0xf3, 0xb9, 0xb7, 0xcc, 0xed, 0xa9, 0xba, 0x17, 0x66,
	0xad, 0xd2, 0xdc, 0x14, 0x89, 0xe3, 0x90, 0xfa, 0x3a, 0x7b, 0x54, 0x5e, 0x11, 0x2c, 0x5a, 0x18,
	0x19, 0xa9, 0x7d, 0x1c, 0xed, 0x99, 0xab, 0x56, 0xed, 0x39, 0x34, 0x53, 0x03, 0x99, 0xf0, 0x48,
	0xd5, 0x21, 0xd5, 0xec, 0x9a, 0x76, 0x55, 0x87, 0x83, 0x51, 0xd6, 0xf7, 0x41, 0x88, 0x46, 0x12,
	0xba, 0xf6, 0x5e, 0xf4, 0xfe, 0xef, 0x94, 0xac, 0xc7, 0x6a, 0xab, 0x68, 0xcf, 0x7c, 0xf5, 0xa2,
	0xbd, 0x82, 0xae, 0x8e, 0x2e, 0xd5, 0x82, 0x07, 0x0c, 0xcc, 0x71, 0x6e, 0x91, 0x4d, 0xc0, 0x31,
	0xf0, 0x36, 0x15, 0x42, 0x35, 0xbf, 0x92, 0x61, 0xa2, 0xfd, 0xa5, 0xaf, 0x11, 0x2c, 0xe1, 0x3e,
	0xb8, 0xb5, 0xe7, 0x94, 0xc7, 0x79, 0x7b, 0x1e, 0xcd, 0x16, 0x81, 0x31, 0xb3, 0xfa, 0x5e, 0x75,
	0xb0, 0xf5, 0xe1, 0x5c, 0x46, 0x7b, 0x2e, 0x55, 0xab, 0xf6, 0x25, 0xf4, 0xf4, 0xc8, 0x62, 0x0e,
	0x8a, 0x03, 0x89, 0x70, 0x12, 0xc1, 0xbd, 0x18, 0x7c, 0x09, 0x01, 0x06, 0xce, 0x19, 0xef, 0xaf,
	0xbe, 0xad, 0x56, 0x5f, 0xb4, 0x5f, 0x44, 0xeb, 0x63, 0xc8, 0xd0, 0xec, 0x13, 0x89, 0x6c, 0x71,
	0x26, 0x65, 0x08, 0x81, 0x8b, 0xaf, 0x10, 0x7f, 0x03, 0xb3, 0x46, 0x23, 0x3d, 0xc4, 0x0d, 0xd8,
	0xc2, 0xfa, 0x4a, 0x11, 0xa8, 0x65, 0x11, 0x96, 0xbc, 0x63, 0xfa, 0x76, 0xf7, 0xd6, 0x27, 0xd0,
	0x65, 0x84, 0x48, 0x4c, 0xaf, 0x41, 0xc7, 0x4b, 0x64, 0xcb, 0x76, 0x3f, 0x50, 0xb2, 0x8f, 0x7e,
	0xfa, 0xa5, 0x75, 0xac, 0x9e, 0x20, 0x92, 0xe9, 0x9e, 0x60, 0xc9, 0x36, 0x20, 0x72, 0x9d, 0xfd,
	0x6a, 0x98, 0x71, 0xfa, 0x79, 0x33, 0x5a, 0xaa, 0x4f, 0xa1, 0x27, 0x06, 0xd6, 0xbf, 0x0f, 0x61,
	0xca, 0x7a, 0x81, 0xb0, 0x7a, 0x8d, 0x32, 0x77, 0xf8, 0x4f, 0x6e, 0xb7, 0x9e, 0x11, 0x92, 0x88,
	0x96, 0x9b, 0x8f, 0x3f, 0xca, 0x2a, 0x6d, 0x16, 0x40, 0x58, 0x11, 0xc1, 0x46, 0xa5, 0xc9, 0x2a,
	0x85, 0x7f, 0xfb, 0xfb, 0x71, 0xc9, 0x5e, 0xbd, 0x36, 0xec, 0xad, 0xbe, 0x57, 0x1f, 0xb4, 0x8b,
	0xff, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x2e, 0x8f, 0x65, 0xa0, 0x5a, 0x1d, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SingleUseCouponsClient is the client API for SingleUseCoupons service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SingleUseCouponsClient interface {
	CreateCouponCampaign(ctx context.Context, in *CouponCampaign, opts ...grpc.CallOption) (*io.Id, error)
	UpdateCouponCampaign(ctx context.Context, in *CouponCampaign, opts ...grpc.CallOption) (*CouponCampaign, error)
	GetCouponCampaign(ctx context.Context, in *io.Id, opts ...grpc.CallOption) (*CouponCampaign, error)
	DeleteCouponCampaign(ctx context.Context, in *io.Id, opts ...grpc.CallOption) (*empty.Empty, error)
	ListCouponCampaignsDeprecated(ctx context.Context, in *io.Pagination, opts ...grpc.CallOption) (SingleUseCoupons_ListCouponCampaignsDeprecatedClient, error)
	ListCouponCampaigns(ctx context.Context, in *io.Filters, opts ...grpc.CallOption) (SingleUseCoupons_ListCouponCampaignsClient, error)
	GetAnalytics(ctx context.Context, in *io.AnalyticsRequest, opts ...grpc.CallOption) (*CouponCampaignAnalyticsResponse, error)
	CreateCouponOffer(ctx context.Context, in *CouponOffer, opts ...grpc.CallOption) (*io.Id, error)
	UpdateCouponOffer(ctx context.Context, in *CouponOffer, opts ...grpc.CallOption) (*CouponOffer, error)
	GetCouponOffer(ctx context.Context, in *io.Id, opts ...grpc.CallOption) (*CouponOffer, error)
	DeleteCouponOffer(ctx context.Context, in *io.Id, opts ...grpc.CallOption) (*empty.Empty, error)
	ListCouponOffersDeprecated(ctx context.Context, in *CouponOffersListRequestDeprecated, opts ...grpc.CallOption) (SingleUseCoupons_ListCouponOffersDeprecatedClient, error)
	ListCouponOffers(ctx context.Context, in *CouponOffersListRequest, opts ...grpc.CallOption) (SingleUseCoupons_ListCouponOffersClient, error)
	CreateCoupon(ctx context.Context, in *Coupon, opts ...grpc.CallOption) (*io.Id, error)
	UpdateCoupon(ctx context.Context, in *Coupon, opts ...grpc.CallOption) (*io.Id, error)
	StreamCouponUpdates(ctx context.Context, opts ...grpc.CallOption) (SingleUseCoupons_StreamCouponUpdatesClient, error)
	RedeemCoupon(ctx context.Context, in *Coupon, opts ...grpc.CallOption) (*io.Id, error)
	StreamCouponRedemptions(ctx context.Context, opts ...grpc.CallOption) (SingleUseCoupons_StreamCouponRedemptionsClient, error)
	GetCouponById(ctx context.Context, in *io.Id, opts ...grpc.CallOption) (*Coupon, error)
	GetCouponByExternalId(ctx context.Context, in *ExternalIdRequest, opts ...grpc.CallOption) (*Coupon, error)
	VoidCoupon(ctx context.Context, in *Coupon, opts ...grpc.CallOption) (*empty.Empty, error)
	ListCouponsByCouponCampaignDeprecated(ctx context.Context, in *ListRequestDeprecated, opts ...grpc.CallOption) (SingleUseCoupons_ListCouponsByCouponCampaignDeprecatedClient, error)
	ListCouponsByCouponCampaign(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (SingleUseCoupons_ListCouponsByCouponCampaignClient, error)
	CountCouponsByCouponCampaignDeprecated(ctx context.Context, in *ListRequestDeprecated, opts ...grpc.CallOption) (*io.Count, error)
	CountCouponsByCouponCampaign(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*io.Count, error)
	CopyCouponCampaign(ctx context.Context, in *CampaignCopyRequest, opts ...grpc.CallOption) (*io.Id, error)
}

type singleUseCouponsClient struct {
	cc grpc.ClientConnInterface
}

func NewSingleUseCouponsClient(cc grpc.ClientConnInterface) SingleUseCouponsClient {
	return &singleUseCouponsClient{cc}
}

func (c *singleUseCouponsClient) CreateCouponCampaign(ctx context.Context, in *CouponCampaign, opts ...grpc.CallOption) (*io.Id, error) {
	out := new(io.Id)
	err := c.cc.Invoke(ctx, "/single_use_coupons.SingleUseCoupons/createCouponCampaign", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *singleUseCouponsClient) UpdateCouponCampaign(ctx context.Context, in *CouponCampaign, opts ...grpc.CallOption) (*CouponCampaign, error) {
	out := new(CouponCampaign)
	err := c.cc.Invoke(ctx, "/single_use_coupons.SingleUseCoupons/updateCouponCampaign", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *singleUseCouponsClient) GetCouponCampaign(ctx context.Context, in *io.Id, opts ...grpc.CallOption) (*CouponCampaign, error) {
	out := new(CouponCampaign)
	err := c.cc.Invoke(ctx, "/single_use_coupons.SingleUseCoupons/getCouponCampaign", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *singleUseCouponsClient) DeleteCouponCampaign(ctx context.Context, in *io.Id, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/single_use_coupons.SingleUseCoupons/deleteCouponCampaign", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *singleUseCouponsClient) ListCouponCampaignsDeprecated(ctx context.Context, in *io.Pagination, opts ...grpc.CallOption) (SingleUseCoupons_ListCouponCampaignsDeprecatedClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SingleUseCoupons_serviceDesc.Streams[0], "/single_use_coupons.SingleUseCoupons/listCouponCampaignsDeprecated", opts...)
	if err != nil {
		return nil, err
	}
	x := &singleUseCouponsListCouponCampaignsDeprecatedClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SingleUseCoupons_ListCouponCampaignsDeprecatedClient interface {
	Recv() (*CouponCampaign, error)
	grpc.ClientStream
}

type singleUseCouponsListCouponCampaignsDeprecatedClient struct {
	grpc.ClientStream
}

func (x *singleUseCouponsListCouponCampaignsDeprecatedClient) Recv() (*CouponCampaign, error) {
	m := new(CouponCampaign)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *singleUseCouponsClient) ListCouponCampaigns(ctx context.Context, in *io.Filters, opts ...grpc.CallOption) (SingleUseCoupons_ListCouponCampaignsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SingleUseCoupons_serviceDesc.Streams[1], "/single_use_coupons.SingleUseCoupons/listCouponCampaigns", opts...)
	if err != nil {
		return nil, err
	}
	x := &singleUseCouponsListCouponCampaignsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SingleUseCoupons_ListCouponCampaignsClient interface {
	Recv() (*CouponCampaign, error)
	grpc.ClientStream
}

type singleUseCouponsListCouponCampaignsClient struct {
	grpc.ClientStream
}

func (x *singleUseCouponsListCouponCampaignsClient) Recv() (*CouponCampaign, error) {
	m := new(CouponCampaign)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *singleUseCouponsClient) GetAnalytics(ctx context.Context, in *io.AnalyticsRequest, opts ...grpc.CallOption) (*CouponCampaignAnalyticsResponse, error) {
	out := new(CouponCampaignAnalyticsResponse)
	err := c.cc.Invoke(ctx, "/single_use_coupons.SingleUseCoupons/getAnalytics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *singleUseCouponsClient) CreateCouponOffer(ctx context.Context, in *CouponOffer, opts ...grpc.CallOption) (*io.Id, error) {
	out := new(io.Id)
	err := c.cc.Invoke(ctx, "/single_use_coupons.SingleUseCoupons/createCouponOffer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *singleUseCouponsClient) UpdateCouponOffer(ctx context.Context, in *CouponOffer, opts ...grpc.CallOption) (*CouponOffer, error) {
	out := new(CouponOffer)
	err := c.cc.Invoke(ctx, "/single_use_coupons.SingleUseCoupons/updateCouponOffer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *singleUseCouponsClient) GetCouponOffer(ctx context.Context, in *io.Id, opts ...grpc.CallOption) (*CouponOffer, error) {
	out := new(CouponOffer)
	err := c.cc.Invoke(ctx, "/single_use_coupons.SingleUseCoupons/getCouponOffer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *singleUseCouponsClient) DeleteCouponOffer(ctx context.Context, in *io.Id, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/single_use_coupons.SingleUseCoupons/deleteCouponOffer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *singleUseCouponsClient) ListCouponOffersDeprecated(ctx context.Context, in *CouponOffersListRequestDeprecated, opts ...grpc.CallOption) (SingleUseCoupons_ListCouponOffersDeprecatedClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SingleUseCoupons_serviceDesc.Streams[2], "/single_use_coupons.SingleUseCoupons/listCouponOffersDeprecated", opts...)
	if err != nil {
		return nil, err
	}
	x := &singleUseCouponsListCouponOffersDeprecatedClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SingleUseCoupons_ListCouponOffersDeprecatedClient interface {
	Recv() (*CouponOffer, error)
	grpc.ClientStream
}

type singleUseCouponsListCouponOffersDeprecatedClient struct {
	grpc.ClientStream
}

func (x *singleUseCouponsListCouponOffersDeprecatedClient) Recv() (*CouponOffer, error) {
	m := new(CouponOffer)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *singleUseCouponsClient) ListCouponOffers(ctx context.Context, in *CouponOffersListRequest, opts ...grpc.CallOption) (SingleUseCoupons_ListCouponOffersClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SingleUseCoupons_serviceDesc.Streams[3], "/single_use_coupons.SingleUseCoupons/listCouponOffers", opts...)
	if err != nil {
		return nil, err
	}
	x := &singleUseCouponsListCouponOffersClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SingleUseCoupons_ListCouponOffersClient interface {
	Recv() (*CouponOffer, error)
	grpc.ClientStream
}

type singleUseCouponsListCouponOffersClient struct {
	grpc.ClientStream
}

func (x *singleUseCouponsListCouponOffersClient) Recv() (*CouponOffer, error) {
	m := new(CouponOffer)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *singleUseCouponsClient) CreateCoupon(ctx context.Context, in *Coupon, opts ...grpc.CallOption) (*io.Id, error) {
	out := new(io.Id)
	err := c.cc.Invoke(ctx, "/single_use_coupons.SingleUseCoupons/createCoupon", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *singleUseCouponsClient) UpdateCoupon(ctx context.Context, in *Coupon, opts ...grpc.CallOption) (*io.Id, error) {
	out := new(io.Id)
	err := c.cc.Invoke(ctx, "/single_use_coupons.SingleUseCoupons/updateCoupon", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *singleUseCouponsClient) StreamCouponUpdates(ctx context.Context, opts ...grpc.CallOption) (SingleUseCoupons_StreamCouponUpdatesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SingleUseCoupons_serviceDesc.Streams[4], "/single_use_coupons.SingleUseCoupons/streamCouponUpdates", opts...)
	if err != nil {
		return nil, err
	}
	x := &singleUseCouponsStreamCouponUpdatesClient{stream}
	return x, nil
}

type SingleUseCoupons_StreamCouponUpdatesClient interface {
	Send(*Coupon) error
	Recv() (*io.Id, error)
	grpc.ClientStream
}

type singleUseCouponsStreamCouponUpdatesClient struct {
	grpc.ClientStream
}

func (x *singleUseCouponsStreamCouponUpdatesClient) Send(m *Coupon) error {
	return x.ClientStream.SendMsg(m)
}

func (x *singleUseCouponsStreamCouponUpdatesClient) Recv() (*io.Id, error) {
	m := new(io.Id)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *singleUseCouponsClient) RedeemCoupon(ctx context.Context, in *Coupon, opts ...grpc.CallOption) (*io.Id, error) {
	out := new(io.Id)
	err := c.cc.Invoke(ctx, "/single_use_coupons.SingleUseCoupons/redeemCoupon", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *singleUseCouponsClient) StreamCouponRedemptions(ctx context.Context, opts ...grpc.CallOption) (SingleUseCoupons_StreamCouponRedemptionsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SingleUseCoupons_serviceDesc.Streams[5], "/single_use_coupons.SingleUseCoupons/streamCouponRedemptions", opts...)
	if err != nil {
		return nil, err
	}
	x := &singleUseCouponsStreamCouponRedemptionsClient{stream}
	return x, nil
}

type SingleUseCoupons_StreamCouponRedemptionsClient interface {
	Send(*Coupon) error
	Recv() (*io.Id, error)
	grpc.ClientStream
}

type singleUseCouponsStreamCouponRedemptionsClient struct {
	grpc.ClientStream
}

func (x *singleUseCouponsStreamCouponRedemptionsClient) Send(m *Coupon) error {
	return x.ClientStream.SendMsg(m)
}

func (x *singleUseCouponsStreamCouponRedemptionsClient) Recv() (*io.Id, error) {
	m := new(io.Id)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *singleUseCouponsClient) GetCouponById(ctx context.Context, in *io.Id, opts ...grpc.CallOption) (*Coupon, error) {
	out := new(Coupon)
	err := c.cc.Invoke(ctx, "/single_use_coupons.SingleUseCoupons/getCouponById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *singleUseCouponsClient) GetCouponByExternalId(ctx context.Context, in *ExternalIdRequest, opts ...grpc.CallOption) (*Coupon, error) {
	out := new(Coupon)
	err := c.cc.Invoke(ctx, "/single_use_coupons.SingleUseCoupons/getCouponByExternalId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *singleUseCouponsClient) VoidCoupon(ctx context.Context, in *Coupon, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/single_use_coupons.SingleUseCoupons/voidCoupon", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *singleUseCouponsClient) ListCouponsByCouponCampaignDeprecated(ctx context.Context, in *ListRequestDeprecated, opts ...grpc.CallOption) (SingleUseCoupons_ListCouponsByCouponCampaignDeprecatedClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SingleUseCoupons_serviceDesc.Streams[6], "/single_use_coupons.SingleUseCoupons/listCouponsByCouponCampaignDeprecated", opts...)
	if err != nil {
		return nil, err
	}
	x := &singleUseCouponsListCouponsByCouponCampaignDeprecatedClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SingleUseCoupons_ListCouponsByCouponCampaignDeprecatedClient interface {
	Recv() (*Coupon, error)
	grpc.ClientStream
}

type singleUseCouponsListCouponsByCouponCampaignDeprecatedClient struct {
	grpc.ClientStream
}

func (x *singleUseCouponsListCouponsByCouponCampaignDeprecatedClient) Recv() (*Coupon, error) {
	m := new(Coupon)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *singleUseCouponsClient) ListCouponsByCouponCampaign(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (SingleUseCoupons_ListCouponsByCouponCampaignClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SingleUseCoupons_serviceDesc.Streams[7], "/single_use_coupons.SingleUseCoupons/listCouponsByCouponCampaign", opts...)
	if err != nil {
		return nil, err
	}
	x := &singleUseCouponsListCouponsByCouponCampaignClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SingleUseCoupons_ListCouponsByCouponCampaignClient interface {
	Recv() (*Coupon, error)
	grpc.ClientStream
}

type singleUseCouponsListCouponsByCouponCampaignClient struct {
	grpc.ClientStream
}

func (x *singleUseCouponsListCouponsByCouponCampaignClient) Recv() (*Coupon, error) {
	m := new(Coupon)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *singleUseCouponsClient) CountCouponsByCouponCampaignDeprecated(ctx context.Context, in *ListRequestDeprecated, opts ...grpc.CallOption) (*io.Count, error) {
	out := new(io.Count)
	err := c.cc.Invoke(ctx, "/single_use_coupons.SingleUseCoupons/countCouponsByCouponCampaignDeprecated", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *singleUseCouponsClient) CountCouponsByCouponCampaign(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*io.Count, error) {
	out := new(io.Count)
	err := c.cc.Invoke(ctx, "/single_use_coupons.SingleUseCoupons/countCouponsByCouponCampaign", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *singleUseCouponsClient) CopyCouponCampaign(ctx context.Context, in *CampaignCopyRequest, opts ...grpc.CallOption) (*io.Id, error) {
	out := new(io.Id)
	err := c.cc.Invoke(ctx, "/single_use_coupons.SingleUseCoupons/copyCouponCampaign", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SingleUseCouponsServer is the server API for SingleUseCoupons service.
type SingleUseCouponsServer interface {
	CreateCouponCampaign(context.Context, *CouponCampaign) (*io.Id, error)
	UpdateCouponCampaign(context.Context, *CouponCampaign) (*CouponCampaign, error)
	GetCouponCampaign(context.Context, *io.Id) (*CouponCampaign, error)
	DeleteCouponCampaign(context.Context, *io.Id) (*empty.Empty, error)
	ListCouponCampaignsDeprecated(*io.Pagination, SingleUseCoupons_ListCouponCampaignsDeprecatedServer) error
	ListCouponCampaigns(*io.Filters, SingleUseCoupons_ListCouponCampaignsServer) error
	GetAnalytics(context.Context, *io.AnalyticsRequest) (*CouponCampaignAnalyticsResponse, error)
	CreateCouponOffer(context.Context, *CouponOffer) (*io.Id, error)
	UpdateCouponOffer(context.Context, *CouponOffer) (*CouponOffer, error)
	GetCouponOffer(context.Context, *io.Id) (*CouponOffer, error)
	DeleteCouponOffer(context.Context, *io.Id) (*empty.Empty, error)
	ListCouponOffersDeprecated(*CouponOffersListRequestDeprecated, SingleUseCoupons_ListCouponOffersDeprecatedServer) error
	ListCouponOffers(*CouponOffersListRequest, SingleUseCoupons_ListCouponOffersServer) error
	CreateCoupon(context.Context, *Coupon) (*io.Id, error)
	UpdateCoupon(context.Context, *Coupon) (*io.Id, error)
	StreamCouponUpdates(SingleUseCoupons_StreamCouponUpdatesServer) error
	RedeemCoupon(context.Context, *Coupon) (*io.Id, error)
	StreamCouponRedemptions(SingleUseCoupons_StreamCouponRedemptionsServer) error
	GetCouponById(context.Context, *io.Id) (*Coupon, error)
	GetCouponByExternalId(context.Context, *ExternalIdRequest) (*Coupon, error)
	VoidCoupon(context.Context, *Coupon) (*empty.Empty, error)
	ListCouponsByCouponCampaignDeprecated(*ListRequestDeprecated, SingleUseCoupons_ListCouponsByCouponCampaignDeprecatedServer) error
	ListCouponsByCouponCampaign(*ListRequest, SingleUseCoupons_ListCouponsByCouponCampaignServer) error
	CountCouponsByCouponCampaignDeprecated(context.Context, *ListRequestDeprecated) (*io.Count, error)
	CountCouponsByCouponCampaign(context.Context, *ListRequest) (*io.Count, error)
	CopyCouponCampaign(context.Context, *CampaignCopyRequest) (*io.Id, error)
}

// UnimplementedSingleUseCouponsServer can be embedded to have forward compatible implementations.
type UnimplementedSingleUseCouponsServer struct {
}

func (*UnimplementedSingleUseCouponsServer) CreateCouponCampaign(ctx context.Context, req *CouponCampaign) (*io.Id, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCouponCampaign not implemented")
}
func (*UnimplementedSingleUseCouponsServer) UpdateCouponCampaign(ctx context.Context, req *CouponCampaign) (*CouponCampaign, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCouponCampaign not implemented")
}
func (*UnimplementedSingleUseCouponsServer) GetCouponCampaign(ctx context.Context, req *io.Id) (*CouponCampaign, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCouponCampaign not implemented")
}
func (*UnimplementedSingleUseCouponsServer) DeleteCouponCampaign(ctx context.Context, req *io.Id) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCouponCampaign not implemented")
}
func (*UnimplementedSingleUseCouponsServer) ListCouponCampaignsDeprecated(req *io.Pagination, srv SingleUseCoupons_ListCouponCampaignsDeprecatedServer) error {
	return status.Errorf(codes.Unimplemented, "method ListCouponCampaignsDeprecated not implemented")
}
func (*UnimplementedSingleUseCouponsServer) ListCouponCampaigns(req *io.Filters, srv SingleUseCoupons_ListCouponCampaignsServer) error {
	return status.Errorf(codes.Unimplemented, "method ListCouponCampaigns not implemented")
}
func (*UnimplementedSingleUseCouponsServer) GetAnalytics(ctx context.Context, req *io.AnalyticsRequest) (*CouponCampaignAnalyticsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAnalytics not implemented")
}
func (*UnimplementedSingleUseCouponsServer) CreateCouponOffer(ctx context.Context, req *CouponOffer) (*io.Id, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCouponOffer not implemented")
}
func (*UnimplementedSingleUseCouponsServer) UpdateCouponOffer(ctx context.Context, req *CouponOffer) (*CouponOffer, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCouponOffer not implemented")
}
func (*UnimplementedSingleUseCouponsServer) GetCouponOffer(ctx context.Context, req *io.Id) (*CouponOffer, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCouponOffer not implemented")
}
func (*UnimplementedSingleUseCouponsServer) DeleteCouponOffer(ctx context.Context, req *io.Id) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCouponOffer not implemented")
}
func (*UnimplementedSingleUseCouponsServer) ListCouponOffersDeprecated(req *CouponOffersListRequestDeprecated, srv SingleUseCoupons_ListCouponOffersDeprecatedServer) error {
	return status.Errorf(codes.Unimplemented, "method ListCouponOffersDeprecated not implemented")
}
func (*UnimplementedSingleUseCouponsServer) ListCouponOffers(req *CouponOffersListRequest, srv SingleUseCoupons_ListCouponOffersServer) error {
	return status.Errorf(codes.Unimplemented, "method ListCouponOffers not implemented")
}
func (*UnimplementedSingleUseCouponsServer) CreateCoupon(ctx context.Context, req *Coupon) (*io.Id, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCoupon not implemented")
}
func (*UnimplementedSingleUseCouponsServer) UpdateCoupon(ctx context.Context, req *Coupon) (*io.Id, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCoupon not implemented")
}
func (*UnimplementedSingleUseCouponsServer) StreamCouponUpdates(srv SingleUseCoupons_StreamCouponUpdatesServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamCouponUpdates not implemented")
}
func (*UnimplementedSingleUseCouponsServer) RedeemCoupon(ctx context.Context, req *Coupon) (*io.Id, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RedeemCoupon not implemented")
}
func (*UnimplementedSingleUseCouponsServer) StreamCouponRedemptions(srv SingleUseCoupons_StreamCouponRedemptionsServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamCouponRedemptions not implemented")
}
func (*UnimplementedSingleUseCouponsServer) GetCouponById(ctx context.Context, req *io.Id) (*Coupon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCouponById not implemented")
}
func (*UnimplementedSingleUseCouponsServer) GetCouponByExternalId(ctx context.Context, req *ExternalIdRequest) (*Coupon, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCouponByExternalId not implemented")
}
func (*UnimplementedSingleUseCouponsServer) VoidCoupon(ctx context.Context, req *Coupon) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VoidCoupon not implemented")
}
func (*UnimplementedSingleUseCouponsServer) ListCouponsByCouponCampaignDeprecated(req *ListRequestDeprecated, srv SingleUseCoupons_ListCouponsByCouponCampaignDeprecatedServer) error {
	return status.Errorf(codes.Unimplemented, "method ListCouponsByCouponCampaignDeprecated not implemented")
}
func (*UnimplementedSingleUseCouponsServer) ListCouponsByCouponCampaign(req *ListRequest, srv SingleUseCoupons_ListCouponsByCouponCampaignServer) error {
	return status.Errorf(codes.Unimplemented, "method ListCouponsByCouponCampaign not implemented")
}
func (*UnimplementedSingleUseCouponsServer) CountCouponsByCouponCampaignDeprecated(ctx context.Context, req *ListRequestDeprecated) (*io.Count, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CountCouponsByCouponCampaignDeprecated not implemented")
}
func (*UnimplementedSingleUseCouponsServer) CountCouponsByCouponCampaign(ctx context.Context, req *ListRequest) (*io.Count, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CountCouponsByCouponCampaign not implemented")
}
func (*UnimplementedSingleUseCouponsServer) CopyCouponCampaign(ctx context.Context, req *CampaignCopyRequest) (*io.Id, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CopyCouponCampaign not implemented")
}

func RegisterSingleUseCouponsServer(s *grpc.Server, srv SingleUseCouponsServer) {
	s.RegisterService(&_SingleUseCoupons_serviceDesc, srv)
}

func _SingleUseCoupons_CreateCouponCampaign_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CouponCampaign)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SingleUseCouponsServer).CreateCouponCampaign(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/single_use_coupons.SingleUseCoupons/CreateCouponCampaign",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SingleUseCouponsServer).CreateCouponCampaign(ctx, req.(*CouponCampaign))
	}
	return interceptor(ctx, in, info, handler)
}

func _SingleUseCoupons_UpdateCouponCampaign_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CouponCampaign)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SingleUseCouponsServer).UpdateCouponCampaign(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/single_use_coupons.SingleUseCoupons/UpdateCouponCampaign",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SingleUseCouponsServer).UpdateCouponCampaign(ctx, req.(*CouponCampaign))
	}
	return interceptor(ctx, in, info, handler)
}

func _SingleUseCoupons_GetCouponCampaign_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(io.Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SingleUseCouponsServer).GetCouponCampaign(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/single_use_coupons.SingleUseCoupons/GetCouponCampaign",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SingleUseCouponsServer).GetCouponCampaign(ctx, req.(*io.Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _SingleUseCoupons_DeleteCouponCampaign_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(io.Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SingleUseCouponsServer).DeleteCouponCampaign(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/single_use_coupons.SingleUseCoupons/DeleteCouponCampaign",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SingleUseCouponsServer).DeleteCouponCampaign(ctx, req.(*io.Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _SingleUseCoupons_ListCouponCampaignsDeprecated_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(io.Pagination)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SingleUseCouponsServer).ListCouponCampaignsDeprecated(m, &singleUseCouponsListCouponCampaignsDeprecatedServer{stream})
}

type SingleUseCoupons_ListCouponCampaignsDeprecatedServer interface {
	Send(*CouponCampaign) error
	grpc.ServerStream
}

type singleUseCouponsListCouponCampaignsDeprecatedServer struct {
	grpc.ServerStream
}

func (x *singleUseCouponsListCouponCampaignsDeprecatedServer) Send(m *CouponCampaign) error {
	return x.ServerStream.SendMsg(m)
}

func _SingleUseCoupons_ListCouponCampaigns_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(io.Filters)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SingleUseCouponsServer).ListCouponCampaigns(m, &singleUseCouponsListCouponCampaignsServer{stream})
}

type SingleUseCoupons_ListCouponCampaignsServer interface {
	Send(*CouponCampaign) error
	grpc.ServerStream
}

type singleUseCouponsListCouponCampaignsServer struct {
	grpc.ServerStream
}

func (x *singleUseCouponsListCouponCampaignsServer) Send(m *CouponCampaign) error {
	return x.ServerStream.SendMsg(m)
}

func _SingleUseCoupons_GetAnalytics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(io.AnalyticsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SingleUseCouponsServer).GetAnalytics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/single_use_coupons.SingleUseCoupons/GetAnalytics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SingleUseCouponsServer).GetAnalytics(ctx, req.(*io.AnalyticsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SingleUseCoupons_CreateCouponOffer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CouponOffer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SingleUseCouponsServer).CreateCouponOffer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/single_use_coupons.SingleUseCoupons/CreateCouponOffer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SingleUseCouponsServer).CreateCouponOffer(ctx, req.(*CouponOffer))
	}
	return interceptor(ctx, in, info, handler)
}

func _SingleUseCoupons_UpdateCouponOffer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CouponOffer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SingleUseCouponsServer).UpdateCouponOffer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/single_use_coupons.SingleUseCoupons/UpdateCouponOffer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SingleUseCouponsServer).UpdateCouponOffer(ctx, req.(*CouponOffer))
	}
	return interceptor(ctx, in, info, handler)
}

func _SingleUseCoupons_GetCouponOffer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(io.Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SingleUseCouponsServer).GetCouponOffer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/single_use_coupons.SingleUseCoupons/GetCouponOffer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SingleUseCouponsServer).GetCouponOffer(ctx, req.(*io.Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _SingleUseCoupons_DeleteCouponOffer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(io.Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SingleUseCouponsServer).DeleteCouponOffer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/single_use_coupons.SingleUseCoupons/DeleteCouponOffer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SingleUseCouponsServer).DeleteCouponOffer(ctx, req.(*io.Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _SingleUseCoupons_ListCouponOffersDeprecated_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CouponOffersListRequestDeprecated)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SingleUseCouponsServer).ListCouponOffersDeprecated(m, &singleUseCouponsListCouponOffersDeprecatedServer{stream})
}

type SingleUseCoupons_ListCouponOffersDeprecatedServer interface {
	Send(*CouponOffer) error
	grpc.ServerStream
}

type singleUseCouponsListCouponOffersDeprecatedServer struct {
	grpc.ServerStream
}

func (x *singleUseCouponsListCouponOffersDeprecatedServer) Send(m *CouponOffer) error {
	return x.ServerStream.SendMsg(m)
}

func _SingleUseCoupons_ListCouponOffers_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CouponOffersListRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SingleUseCouponsServer).ListCouponOffers(m, &singleUseCouponsListCouponOffersServer{stream})
}

type SingleUseCoupons_ListCouponOffersServer interface {
	Send(*CouponOffer) error
	grpc.ServerStream
}

type singleUseCouponsListCouponOffersServer struct {
	grpc.ServerStream
}

func (x *singleUseCouponsListCouponOffersServer) Send(m *CouponOffer) error {
	return x.ServerStream.SendMsg(m)
}

func _SingleUseCoupons_CreateCoupon_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Coupon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SingleUseCouponsServer).CreateCoupon(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/single_use_coupons.SingleUseCoupons/CreateCoupon",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SingleUseCouponsServer).CreateCoupon(ctx, req.(*Coupon))
	}
	return interceptor(ctx, in, info, handler)
}

func _SingleUseCoupons_UpdateCoupon_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Coupon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SingleUseCouponsServer).UpdateCoupon(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/single_use_coupons.SingleUseCoupons/UpdateCoupon",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SingleUseCouponsServer).UpdateCoupon(ctx, req.(*Coupon))
	}
	return interceptor(ctx, in, info, handler)
}

func _SingleUseCoupons_StreamCouponUpdates_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(SingleUseCouponsServer).StreamCouponUpdates(&singleUseCouponsStreamCouponUpdatesServer{stream})
}

type SingleUseCoupons_StreamCouponUpdatesServer interface {
	Send(*io.Id) error
	Recv() (*Coupon, error)
	grpc.ServerStream
}

type singleUseCouponsStreamCouponUpdatesServer struct {
	grpc.ServerStream
}

func (x *singleUseCouponsStreamCouponUpdatesServer) Send(m *io.Id) error {
	return x.ServerStream.SendMsg(m)
}

func (x *singleUseCouponsStreamCouponUpdatesServer) Recv() (*Coupon, error) {
	m := new(Coupon)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _SingleUseCoupons_RedeemCoupon_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Coupon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SingleUseCouponsServer).RedeemCoupon(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/single_use_coupons.SingleUseCoupons/RedeemCoupon",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SingleUseCouponsServer).RedeemCoupon(ctx, req.(*Coupon))
	}
	return interceptor(ctx, in, info, handler)
}

func _SingleUseCoupons_StreamCouponRedemptions_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(SingleUseCouponsServer).StreamCouponRedemptions(&singleUseCouponsStreamCouponRedemptionsServer{stream})
}

type SingleUseCoupons_StreamCouponRedemptionsServer interface {
	Send(*io.Id) error
	Recv() (*Coupon, error)
	grpc.ServerStream
}

type singleUseCouponsStreamCouponRedemptionsServer struct {
	grpc.ServerStream
}

func (x *singleUseCouponsStreamCouponRedemptionsServer) Send(m *io.Id) error {
	return x.ServerStream.SendMsg(m)
}

func (x *singleUseCouponsStreamCouponRedemptionsServer) Recv() (*Coupon, error) {
	m := new(Coupon)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _SingleUseCoupons_GetCouponById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(io.Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SingleUseCouponsServer).GetCouponById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/single_use_coupons.SingleUseCoupons/GetCouponById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SingleUseCouponsServer).GetCouponById(ctx, req.(*io.Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _SingleUseCoupons_GetCouponByExternalId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExternalIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SingleUseCouponsServer).GetCouponByExternalId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/single_use_coupons.SingleUseCoupons/GetCouponByExternalId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SingleUseCouponsServer).GetCouponByExternalId(ctx, req.(*ExternalIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SingleUseCoupons_VoidCoupon_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Coupon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SingleUseCouponsServer).VoidCoupon(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/single_use_coupons.SingleUseCoupons/VoidCoupon",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SingleUseCouponsServer).VoidCoupon(ctx, req.(*Coupon))
	}
	return interceptor(ctx, in, info, handler)
}

func _SingleUseCoupons_ListCouponsByCouponCampaignDeprecated_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListRequestDeprecated)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SingleUseCouponsServer).ListCouponsByCouponCampaignDeprecated(m, &singleUseCouponsListCouponsByCouponCampaignDeprecatedServer{stream})
}

type SingleUseCoupons_ListCouponsByCouponCampaignDeprecatedServer interface {
	Send(*Coupon) error
	grpc.ServerStream
}

type singleUseCouponsListCouponsByCouponCampaignDeprecatedServer struct {
	grpc.ServerStream
}

func (x *singleUseCouponsListCouponsByCouponCampaignDeprecatedServer) Send(m *Coupon) error {
	return x.ServerStream.SendMsg(m)
}

func _SingleUseCoupons_ListCouponsByCouponCampaign_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SingleUseCouponsServer).ListCouponsByCouponCampaign(m, &singleUseCouponsListCouponsByCouponCampaignServer{stream})
}

type SingleUseCoupons_ListCouponsByCouponCampaignServer interface {
	Send(*Coupon) error
	grpc.ServerStream
}

type singleUseCouponsListCouponsByCouponCampaignServer struct {
	grpc.ServerStream
}

func (x *singleUseCouponsListCouponsByCouponCampaignServer) Send(m *Coupon) error {
	return x.ServerStream.SendMsg(m)
}

func _SingleUseCoupons_CountCouponsByCouponCampaignDeprecated_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequestDeprecated)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SingleUseCouponsServer).CountCouponsByCouponCampaignDeprecated(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/single_use_coupons.SingleUseCoupons/CountCouponsByCouponCampaignDeprecated",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SingleUseCouponsServer).CountCouponsByCouponCampaignDeprecated(ctx, req.(*ListRequestDeprecated))
	}
	return interceptor(ctx, in, info, handler)
}

func _SingleUseCoupons_CountCouponsByCouponCampaign_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SingleUseCouponsServer).CountCouponsByCouponCampaign(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/single_use_coupons.SingleUseCoupons/CountCouponsByCouponCampaign",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SingleUseCouponsServer).CountCouponsByCouponCampaign(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SingleUseCoupons_CopyCouponCampaign_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CampaignCopyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SingleUseCouponsServer).CopyCouponCampaign(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/single_use_coupons.SingleUseCoupons/CopyCouponCampaign",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SingleUseCouponsServer).CopyCouponCampaign(ctx, req.(*CampaignCopyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SingleUseCoupons_serviceDesc = grpc.ServiceDesc{
	ServiceName: "single_use_coupons.SingleUseCoupons",
	HandlerType: (*SingleUseCouponsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "createCouponCampaign",
			Handler:    _SingleUseCoupons_CreateCouponCampaign_Handler,
		},
		{
			MethodName: "updateCouponCampaign",
			Handler:    _SingleUseCoupons_UpdateCouponCampaign_Handler,
		},
		{
			MethodName: "getCouponCampaign",
			Handler:    _SingleUseCoupons_GetCouponCampaign_Handler,
		},
		{
			MethodName: "deleteCouponCampaign",
			Handler:    _SingleUseCoupons_DeleteCouponCampaign_Handler,
		},
		{
			MethodName: "getAnalytics",
			Handler:    _SingleUseCoupons_GetAnalytics_Handler,
		},
		{
			MethodName: "createCouponOffer",
			Handler:    _SingleUseCoupons_CreateCouponOffer_Handler,
		},
		{
			MethodName: "updateCouponOffer",
			Handler:    _SingleUseCoupons_UpdateCouponOffer_Handler,
		},
		{
			MethodName: "getCouponOffer",
			Handler:    _SingleUseCoupons_GetCouponOffer_Handler,
		},
		{
			MethodName: "deleteCouponOffer",
			Handler:    _SingleUseCoupons_DeleteCouponOffer_Handler,
		},
		{
			MethodName: "createCoupon",
			Handler:    _SingleUseCoupons_CreateCoupon_Handler,
		},
		{
			MethodName: "updateCoupon",
			Handler:    _SingleUseCoupons_UpdateCoupon_Handler,
		},
		{
			MethodName: "redeemCoupon",
			Handler:    _SingleUseCoupons_RedeemCoupon_Handler,
		},
		{
			MethodName: "getCouponById",
			Handler:    _SingleUseCoupons_GetCouponById_Handler,
		},
		{
			MethodName: "getCouponByExternalId",
			Handler:    _SingleUseCoupons_GetCouponByExternalId_Handler,
		},
		{
			MethodName: "voidCoupon",
			Handler:    _SingleUseCoupons_VoidCoupon_Handler,
		},
		{
			MethodName: "countCouponsByCouponCampaignDeprecated",
			Handler:    _SingleUseCoupons_CountCouponsByCouponCampaignDeprecated_Handler,
		},
		{
			MethodName: "countCouponsByCouponCampaign",
			Handler:    _SingleUseCoupons_CountCouponsByCouponCampaign_Handler,
		},
		{
			MethodName: "copyCouponCampaign",
			Handler:    _SingleUseCoupons_CopyCouponCampaign_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "listCouponCampaignsDeprecated",
			Handler:       _SingleUseCoupons_ListCouponCampaignsDeprecated_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "listCouponCampaigns",
			Handler:       _SingleUseCoupons_ListCouponCampaigns_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "listCouponOffersDeprecated",
			Handler:       _SingleUseCoupons_ListCouponOffersDeprecated_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "listCouponOffers",
			Handler:       _SingleUseCoupons_ListCouponOffers_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "streamCouponUpdates",
			Handler:       _SingleUseCoupons_StreamCouponUpdates_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "streamCouponRedemptions",
			Handler:       _SingleUseCoupons_StreamCouponRedemptions_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "listCouponsByCouponCampaignDeprecated",
			Handler:       _SingleUseCoupons_ListCouponsByCouponCampaignDeprecated_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "listCouponsByCouponCampaign",
			Handler:       _SingleUseCoupons_ListCouponsByCouponCampaign_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "io/single_use_coupons/a_rpc.proto",
}
