// Code generated by protoc-gen-go. DO NOT EDIT.
// source: io/single_use_coupons/campaign.proto

package single_use_coupons

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	math "math"
	io "github.com/PassKit/passkit-golang-grpc-sdk/io"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The Coupon Campaign Details.
type CouponCampaign struct {
	// PassKit generated program id (22 characters).
	// @tag: validateGeneric:"required" validateCreate:"-" validateUpdate:"required"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" validateGeneric:"required" validateCreate:"-" validateUpdate:"required"`
	// Name of the coupon campaign; used in the portal / API. Not shown to the end-customer.
	// @tag: validateGeneric:"omitempty" validateCreate:"required" validateUpdate:"required"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" validateGeneric:"omitempty" validateCreate:"required" validateUpdate:"required"`
	// Localized name of the coupon campaign.
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	LocalizedName *io.LocalizedString `protobuf:"bytes,3,opt,name=localizedName,proto3" json:"localizedName,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	// The program status (bitmask of ProjectStatus). Defaults to io.ProjectStatus.PROJECT_ACTIVE_FOR_OBJECT_CREATION + io.ProjectStatus.PROJECT_DRAFT.
	// @tag: validateGeneric:"-" validateCreate:"required" validateUpdate:"-"
	Status []io.ProjectStatus `protobuf:"varint,5,rep,packed,name=status,proto3,enum=io.ProjectStatus" json:"status,omitempty" validateGeneric:"-" validateCreate:"required" validateUpdate:"-"`
	// Leave empty for draft campaigns. Needs to be set for campaigns where status contains PROJECT_PUBLISHED.
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"-"
	PassTypeIdentifier string `protobuf:"bytes,6,opt,name=passTypeIdentifier,proto3" json:"passTypeIdentifier,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"-"`
	// The campaign timezone.
	IanaTimezone string `protobuf:"bytes,7,opt,name=ianaTimezone,proto3" json:"ianaTimezone,omitempty"`
	// The date the campaign was created.
	// @tag: validateGeneric:"-" validateCreate:"-" validateUpdate:"-"
	Created *timestamp.Timestamp `protobuf:"bytes,10,opt,name=created,proto3" json:"created,omitempty" validateGeneric:"-" validateCreate:"-" validateUpdate:"-"`
	// The date the campaign updated.
	// @tag: validateGeneric:"-" validateCreate:"-" validateUpdate:"-"
	Updated              *timestamp.Timestamp `protobuf:"bytes,11,opt,name=updated,proto3" json:"updated,omitempty" validateGeneric:"-" validateCreate:"-" validateUpdate:"-"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CouponCampaign) Reset()         { *m = CouponCampaign{} }
func (m *CouponCampaign) String() string { return proto.CompactTextString(m) }
func (*CouponCampaign) ProtoMessage()    {}
func (*CouponCampaign) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd8eab3f48eb788f, []int{0}
}

func (m *CouponCampaign) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CouponCampaign.Unmarshal(m, b)
}
func (m *CouponCampaign) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CouponCampaign.Marshal(b, m, deterministic)
}
func (m *CouponCampaign) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CouponCampaign.Merge(m, src)
}
func (m *CouponCampaign) XXX_Size() int {
	return xxx_messageInfo_CouponCampaign.Size(m)
}
func (m *CouponCampaign) XXX_DiscardUnknown() {
	xxx_messageInfo_CouponCampaign.DiscardUnknown(m)
}

var xxx_messageInfo_CouponCampaign proto.InternalMessageInfo

func (m *CouponCampaign) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CouponCampaign) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CouponCampaign) GetLocalizedName() *io.LocalizedString {
	if m != nil {
		return m.LocalizedName
	}
	return nil
}

func (m *CouponCampaign) GetStatus() []io.ProjectStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *CouponCampaign) GetPassTypeIdentifier() string {
	if m != nil {
		return m.PassTypeIdentifier
	}
	return ""
}

func (m *CouponCampaign) GetIanaTimezone() string {
	if m != nil {
		return m.IanaTimezone
	}
	return ""
}

func (m *CouponCampaign) GetCreated() *timestamp.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *CouponCampaign) GetUpdated() *timestamp.Timestamp {
	if m != nil {
		return m.Updated
	}
	return nil
}

// CouponCampaignAnalyticsResponse contains redemption stats for the campaign. Other campaign analytics can be taken from the generic analytics endpoint.
type CouponCampaignAnalyticsResponse struct {
	// Period unit of data returned (day, month or year).
	Period io.Period `protobuf:"varint,1,opt,name=period,proto3,enum=io.Period" json:"period,omitempty"`
	// Passes redeemed in this period.
	Redeemed uint32 `protobuf:"varint,2,opt,name=redeemed,proto3" json:"redeemed,omitempty"`
	// Total number of pass redeemed for each device type.
	Devices *io.DeviceBreakdown `protobuf:"bytes,3,opt,name=devices,proto3" json:"devices,omitempty"`
	// Total number of pass redeemed for each distribution source.
	Sources map[string]uint32 `protobuf:"bytes,4,rep,name=sources,proto3" json:"sources,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// Breakdown of data by day, month or year.
	Data                 []*io.ChartDataPoints `protobuf:"bytes,5,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *CouponCampaignAnalyticsResponse) Reset()         { *m = CouponCampaignAnalyticsResponse{} }
func (m *CouponCampaignAnalyticsResponse) String() string { return proto.CompactTextString(m) }
func (*CouponCampaignAnalyticsResponse) ProtoMessage()    {}
func (*CouponCampaignAnalyticsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd8eab3f48eb788f, []int{1}
}

func (m *CouponCampaignAnalyticsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CouponCampaignAnalyticsResponse.Unmarshal(m, b)
}
func (m *CouponCampaignAnalyticsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CouponCampaignAnalyticsResponse.Marshal(b, m, deterministic)
}
func (m *CouponCampaignAnalyticsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CouponCampaignAnalyticsResponse.Merge(m, src)
}
func (m *CouponCampaignAnalyticsResponse) XXX_Size() int {
	return xxx_messageInfo_CouponCampaignAnalyticsResponse.Size(m)
}
func (m *CouponCampaignAnalyticsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CouponCampaignAnalyticsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CouponCampaignAnalyticsResponse proto.InternalMessageInfo

func (m *CouponCampaignAnalyticsResponse) GetPeriod() io.Period {
	if m != nil {
		return m.Period
	}
	return io.Period_DAY
}

func (m *CouponCampaignAnalyticsResponse) GetRedeemed() uint32 {
	if m != nil {
		return m.Redeemed
	}
	return 0
}

func (m *CouponCampaignAnalyticsResponse) GetDevices() *io.DeviceBreakdown {
	if m != nil {
		return m.Devices
	}
	return nil
}

func (m *CouponCampaignAnalyticsResponse) GetSources() map[string]uint32 {
	if m != nil {
		return m.Sources
	}
	return nil
}

func (m *CouponCampaignAnalyticsResponse) GetData() []*io.ChartDataPoints {
	if m != nil {
		return m.Data
	}
	return nil
}

// Contains payload for copying a campaign.
type CampaignCopyRequest struct {
	// uuid of the campaign to copy.
	// @tag: validateCreate:"required"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" validateCreate:"required"`
	// Optional name for the new campaign.
	// @tag: validateCreate:"omitempty"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" validateCreate:"omitempty"`
	// Status to set the copied campaign to.
	// @tag: validateCreate:"omitempty"
	Status []io.ProjectStatus `protobuf:"varint,3,rep,packed,name=status,proto3,enum=io.ProjectStatus" json:"status,omitempty" validateCreate:"omitempty"`
	// Can optionally be provided if setting status to published (requires a prod cert).
	// @tag: validateCreate:"omitempty"
	PassTypeIdentifier   string   `protobuf:"bytes,4,opt,name=passTypeIdentifier,proto3" json:"passTypeIdentifier,omitempty" validateCreate:"omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CampaignCopyRequest) Reset()         { *m = CampaignCopyRequest{} }
func (m *CampaignCopyRequest) String() string { return proto.CompactTextString(m) }
func (*CampaignCopyRequest) ProtoMessage()    {}
func (*CampaignCopyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd8eab3f48eb788f, []int{2}
}

func (m *CampaignCopyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CampaignCopyRequest.Unmarshal(m, b)
}
func (m *CampaignCopyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CampaignCopyRequest.Marshal(b, m, deterministic)
}
func (m *CampaignCopyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampaignCopyRequest.Merge(m, src)
}
func (m *CampaignCopyRequest) XXX_Size() int {
	return xxx_messageInfo_CampaignCopyRequest.Size(m)
}
func (m *CampaignCopyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CampaignCopyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CampaignCopyRequest proto.InternalMessageInfo

func (m *CampaignCopyRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CampaignCopyRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CampaignCopyRequest) GetStatus() []io.ProjectStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *CampaignCopyRequest) GetPassTypeIdentifier() string {
	if m != nil {
		return m.PassTypeIdentifier
	}
	return ""
}

func init() {
	proto.RegisterType((*CouponCampaign)(nil), "single_use_coupons.CouponCampaign")
	proto.RegisterType((*CouponCampaignAnalyticsResponse)(nil), "single_use_coupons.CouponCampaignAnalyticsResponse")
	proto.RegisterMapType((map[string]uint32)(nil), "single_use_coupons.CouponCampaignAnalyticsResponse.SourcesEntry")
	proto.RegisterType((*CampaignCopyRequest)(nil), "single_use_coupons.CampaignCopyRequest")
}

func init() {
	proto.RegisterFile("io/single_use_coupons/campaign.proto", fileDescriptor_cd8eab3f48eb788f)
}

var fileDescriptor_cd8eab3f48eb788f = []byte{
	// 702 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0x4d, 0x6f, 0xf3, 0x44,
	0x10, 0x96, 0x13, 0x37, 0x1f, 0xdb, 0xf7, 0x0d, 0x61, 0x5f, 0x24, 0x42, 0x84, 0x54, 0x2b, 0x42,
	0x10, 0x10, 0xb5, 0xa5, 0x80, 0x04, 0xf4, 0x44, 0x9b, 0x22, 0xf5, 0x03, 0xa1, 0xc8, 0x29, 0x97,
	0x5e, 0xaa, 0x8d, 0x77, 0xe2, 0x2e, 0xb1, 0x77, 0xcc, 0xee, 0xba, 0x55, 0x7a, 0xe3, 0x8c, 0xc4,
	0xa1, 0xe2, 0x57, 0xf0, 0x6f, 0xc8, 0x2f, 0x42, 0x5e, 0xdb, 0xfd, 0x46, 0x45, 0x9c, 0xb2, 0x3b,
	0xcf, 0x33, 0x93, 0xd9, 0x79, 0xe6, 0x31, 0xf9, 0x44, 0x60, 0xa0, 0x85, 0x8c, 0x13, 0xb8, 0xc8,
	0x35, 0x5c, 0x44, 0x98, 0x67, 0x28, 0x75, 0x10, 0xb1, 0x34, 0x63, 0x22, 0x96, 0x7e, 0xa6, 0xd0,
	0x20, 0xa5, 0xcf, 0x29, 0xc3, 0x9d, 0x18, 0x31, 0x4e, 0x20, 0xb0, 0x8c, 0x45, 0xbe, 0x0c, 0x8c,
	0x48, 0x41, 0x1b, 0x96, 0x66, 0x65, 0xd2, 0xf0, 0x63, 0x81, 0x41, 0x84, 0x69, 0x8a, 0x32, 0x48,
	0x30, 0x62, 0x89, 0xb8, 0x61, 0x46, 0x60, 0x55, 0x72, 0xf8, 0xe1, 0x3d, 0x9a, 0x29, 0xfc, 0x05,
	0x22, 0x53, 0x01, 0x1f, 0xdd, 0x03, 0x0a, 0x32, 0x54, 0x46, 0xc8, 0xb8, 0x82, 0xbe, 0xb4, 0x3f,
	0xd1, 0x6e, 0x0c, 0x72, 0x57, 0x5f, 0xb3, 0x38, 0x06, 0x15, 0x60, 0x56, 0x14, 0xd5, 0x01, 0x93,
	0x12, 0x8d, 0xfd, 0x03, 0x5d, 0xb2, 0x47, 0xbf, 0xb9, 0xa4, 0x37, 0xb5, 0xcd, 0x4e, 0xab, 0xd7,
	0xd0, 0x1e, 0x69, 0x08, 0x3e, 0x70, 0x3c, 0x67, 0xdc, 0x0d, 0x1b, 0x82, 0x53, 0x4a, 0x5c, 0xc9,
	0x52, 0x18, 0x34, 0x6c, 0xc4, 0x9e, 0xe9, 0x77, 0xe4, 0x6d, 0xd5, 0x2e, 0xf0, 0x9f, 0x0a, 0xb0,
	0xe9, 0x39, 0xe3, 0xed, 0xc9, 0x3b, 0x5f, 0xa0, 0xff, 0x63, 0x0d, 0xcc, 0x8d, 0x12, 0x32, 0x0e,
	0x1f, 0x33, 0xe9, 0xe7, 0xa4, 0xa5, 0x0d, 0x33, 0xb9, 0x1e, 0x6c, 0x79, 0xcd, 0x71, 0x6f, 0xf2,
	0x7e, 0x91, 0x33, 0x2b, 0x5f, 0x37, 0xb7, 0x40, 0x58, 0x11, 0xa8, 0x4f, 0x68, 0xc6, 0xb4, 0x3e,
	0x5b, 0x67, 0x70, 0xcc, 0x41, 0x1a, 0xb1, 0x14, 0xa0, 0x06, 0x2d, 0xdb, 0xc7, 0x0b, 0x08, 0x1d,
	0x91, 0x37, 0x82, 0x49, 0x76, 0x26, 0x52, 0xb8, 0x41, 0x09, 0x83, 0xb6, 0x65, 0x3e, 0x8a, 0xd1,
	0xaf, 0x49, 0x3b, 0x52, 0xc0, 0x0c, 0xf0, 0x01, 0xb1, 0x3d, 0x0f, 0xfd, 0x52, 0x23, 0xbf, 0xd6,
	0xc8, 0x3f, 0xab, 0x35, 0x0a, 0x6b, 0x6a, 0x91, 0x95, 0x67, 0xdc, 0x66, 0x6d, 0xbf, 0x9e, 0x55,
	0x51, 0xf7, 0x6e, 0x9d, 0xdb, 0xfd, 0x3f, 0x1c, 0xf2, 0xbb, 0xf3, 0xc5, 0x7b, 0xe5, 0x8c, 0xbd,
	0x7a, 0xc8, 0x93, 0xa3, 0x23, 0x4c, 0xb8, 0xf6, 0xcc, 0x25, 0x78, 0x8b, 0x5c, 0x0b, 0x09, 0x5a,
	0x7b, 0x09, 0xc6, 0x22, 0xf2, 0x3e, 0xf5, 0xb8, 0xd0, 0x46, 0x89, 0x45, 0x5e, 0xe8, 0xe4, 0x69,
	0x30, 0x85, 0xb8, 0xda, 0xc3, 0xa5, 0x65, 0x3f, 0x29, 0xe4, 0x6f, 0x1c, 0xab, 0xc8, 0xc6, 0x69,
	0xe3, 0x72, 0x09, 0xea, 0x98, 0x6f, 0x9c, 0x6a, 0x7c, 0x1b, 0xa7, 0xab, 0x0d, 0x53, 0xe6, 0x90,
	0x99, 0x02, 0x06, 0xc9, 0x8b, 0xd3, 0x89, 0xdb, 0x71, 0xfb, 0x5b, 0x27, 0x6e, 0xa7, 0xd3, 0xef,
	0x9e, 0xb8, 0x9d, 0x6e, 0x9f, 0x8c, 0xfe, 0x6e, 0x90, 0x9d, 0xc7, 0x3b, 0xb0, 0x2f, 0x59, 0xb2,
	0x36, 0x22, 0xd2, 0x21, 0xe8, 0x62, 0x8f, 0x81, 0x8e, 0x48, 0x2b, 0x03, 0x25, 0xb0, 0x5c, 0x8c,
	0xde, 0x84, 0x58, 0xd5, 0x6c, 0x24, 0xac, 0x10, 0x3a, 0x24, 0x1d, 0x05, 0x1c, 0x20, 0x05, 0x6e,
	0x97, 0xe5, 0x6d, 0x78, 0x77, 0xa7, 0xbb, 0xa4, 0xcd, 0xe1, 0x4a, 0x44, 0xa0, 0x1f, 0xae, 0xca,
	0xa1, 0x0d, 0x1d, 0x28, 0x60, 0x2b, 0x8e, 0xd7, 0x32, 0xac, 0x39, 0xf4, 0x9c, 0xb4, 0x35, 0xe6,
	0xaa, 0xa0, 0xbb, 0x5e, 0x73, 0xbc, 0x3d, 0xf9, 0xde, 0x7f, 0xee, 0x2e, 0xff, 0x95, 0xa6, 0xfd,
	0x79, 0x59, 0xe2, 0x07, 0x69, 0xd4, 0x3a, 0xac, 0x0b, 0xd2, 0xcf, 0x88, 0xcb, 0x99, 0x61, 0x76,
	0xfd, 0xaa, 0x3e, 0xa6, 0x97, 0xe5, 0x9c, 0xd8, 0x0c, 0x85, 0x34, 0x3a, 0xb4, 0x84, 0xe1, 0x1e,
	0x79, 0xf3, 0xb0, 0x02, 0xed, 0x93, 0xe6, 0x0a, 0xd6, 0x95, 0x33, 0x8a, 0x23, 0xfd, 0x80, 0x6c,
	0x5d, 0xb1, 0x24, 0x87, 0xea, 0xb9, 0xe5, 0x65, 0xaf, 0xf1, 0xad, 0x33, 0xfa, 0xd3, 0x21, 0xef,
	0xea, 0xc6, 0xa6, 0x98, 0xad, 0x43, 0xf8, 0x35, 0x07, 0x6d, 0xfe, 0x93, 0xb9, 0xee, 0x1d, 0xd2,
	0xfc, 0x7f, 0x0e, 0x71, 0xff, 0xcd, 0x21, 0x07, 0x19, 0xf1, 0x04, 0xfa, 0x05, 0xb0, 0x12, 0xc6,
	0x9f, 0x9d, 0x0a, 0xf4, 0xe7, 0x76, 0xae, 0x3f, 0x6b, 0x28, 0xa7, 0xa9, 0xcf, 0xbf, 0xd1, 0x86,
	0xe9, 0xcb, 0x3b, 0x52, 0x84, 0x69, 0x20, 0x30, 0x48, 0x91, 0x43, 0x12, 0x68, 0xbe, 0x0a, 0x62,
	0x0c, 0x5e, 0xfc, 0x1e, 0xfe, 0xd5, 0xa0, 0xb3, 0xd3, 0xa7, 0xd5, 0x16, 0x2d, 0x6b, 0x90, 0xaf,
	0xfe, 0x09, 0x00, 0x00, 0xff, 0xff, 0x28, 0xff, 0x3c, 0xd7, 0x44, 0x05, 0x00, 0x00,
}
