// Code generated by protoc-gen-go. DO NOT EDIT.
// source: io/single_use_coupons/offer.proto

package single_use_coupons

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	math "math"
	io "stash.passkit.com/io/model/sdk/go/io"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CouponExpiryType int32

const (
	CouponExpiryType_EXPIRY_DO_NOT_USE CouponExpiryType = 0
	// The system will set the coupon expiry based to the campaign end date (default).
	CouponExpiryType_AUTO_EXPIRE_OFFER_END_DATE CouponExpiryType = 1
	// The system will set the coupon expiry based to the redemption end date.
	CouponExpiryType_AUTO_EXPIRE_REDEMPTION_END_DATE CouponExpiryType = 2
	// The system will calculate the expiry date based the number of days after the digital coupon is issued.
	// The calculated date needs to be within range of the campaign date rules. For example, if issue date + EXPIRE_AFTER_X_DAYS is greater than the campaign end date, it will default to the campaign end date.
	// The expiry date will be based on your timezone. The digital card will expire at 23:59:59 of set date in fixed timezone.
	CouponExpiryType_EXPIRE_AFTER_X_DAYS CouponExpiryType = 3
	// If you want to set the expiry date for each individual coupon when the coupon is issued, you can use this expiry type.
	// You can set expiry date and time in fixed timezone on the coupon record.
	// The date needs to be within range of the campaign date rules, otherwise the system will return an error.
	CouponExpiryType_EXPIRE_ON_VARIABLE_DATE_TIME CouponExpiryType = 4
)

var CouponExpiryType_name = map[int32]string{
	0: "EXPIRY_DO_NOT_USE",
	1: "AUTO_EXPIRE_OFFER_END_DATE",
	2: "AUTO_EXPIRE_REDEMPTION_END_DATE",
	3: "EXPIRE_AFTER_X_DAYS",
	4: "EXPIRE_ON_VARIABLE_DATE_TIME",
}

var CouponExpiryType_value = map[string]int32{
	"EXPIRY_DO_NOT_USE":               0,
	"AUTO_EXPIRE_OFFER_END_DATE":      1,
	"AUTO_EXPIRE_REDEMPTION_END_DATE": 2,
	"EXPIRE_AFTER_X_DAYS":             3,
	"EXPIRE_ON_VARIABLE_DATE_TIME":    4,
}

func (x CouponExpiryType) String() string {
	return proto.EnumName(CouponExpiryType_name, int32(x))
}

func (CouponExpiryType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_169cf3a5064af2f9, []int{0}
}

type RedemptionType int32

const (
	// Zero index should not be used
	RedemptionType_REDEMPTION_TYPE_DO_NOT_USE RedemptionType = 0
	// Coupons are always redeemed via API (default). This method is used by POS integrations, but is also be used by the PassKit scanning app.
	RedemptionType_REDEMPTION_TYPE_API RedemptionType = 1
	// Coupons can be redeemed by the coupon holder (i.e. the customer) by visiting a redemption URL rendered on the coupon.
	// The coupon will redeem upon the link being visited.
	RedemptionType_REDEMPTION_TYPE_CUSTOMER_INITIATED RedemptionType = 2
	// This will present a fixed code to the customer after they visit the redemption URL, and then auto redeem the coupon. The customer can then present this fixed-code to a member of staff.
	RedemptionType_REDEMPTION_TYPE_CUSTOMER_INITIATED_CODE_FIXED RedemptionType = 3
	// After visiting the redemption URL, a member of staff provides the customer with a redemption-code they need to enter. After entering the code, the coupon with redeem.
	RedemptionType_REDEMPTION_TYPE_CUSTOMER_INITIATED_CODE_PROVIDED_ON_REDEEM RedemptionType = 4
)

var RedemptionType_name = map[int32]string{
	0: "REDEMPTION_TYPE_DO_NOT_USE",
	1: "REDEMPTION_TYPE_API",
	2: "REDEMPTION_TYPE_CUSTOMER_INITIATED",
	3: "REDEMPTION_TYPE_CUSTOMER_INITIATED_CODE_FIXED",
	4: "REDEMPTION_TYPE_CUSTOMER_INITIATED_CODE_PROVIDED_ON_REDEEM",
}

var RedemptionType_value = map[string]int32{
	"REDEMPTION_TYPE_DO_NOT_USE":                                 0,
	"REDEMPTION_TYPE_API":                                        1,
	"REDEMPTION_TYPE_CUSTOMER_INITIATED":                         2,
	"REDEMPTION_TYPE_CUSTOMER_INITIATED_CODE_FIXED":              3,
	"REDEMPTION_TYPE_CUSTOMER_INITIATED_CODE_PROVIDED_ON_REDEEM": 4,
}

func (x RedemptionType) String() string {
	return proto.EnumName(RedemptionType_name, int32(x))
}

func (RedemptionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_169cf3a5064af2f9, []int{1}
}

// The Coupon Offer Details.
type CouponOffer struct {
	// PassKit generated offer id (22 characters).
	// @tag: validateGeneric:"required" validateCreate:"-" validateUpdate:"required"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" validateGeneric:"required" validateCreate:"-" validateUpdate:"required"`
	// The offer title; will be shown on the enrolment page.
	// @tag: validateGeneric:"omitempty,max=60" validateCreate:"required,max=60" validateUpdate:"required,max=60"
	OfferTitle string `protobuf:"bytes,2,opt,name=offerTitle,proto3" json:"offerTitle,omitempty" validateGeneric:"omitempty,max=60" validateCreate:"required,max=60" validateUpdate:"required,max=60"`
	// Localized offer title.
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	LocalizedOfferTitle *io.LocalizedString `protobuf:"bytes,3,opt,name=localizedOfferTitle,proto3" json:"localizedOfferTitle,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	// The offer short title.
	// @tag: validateGeneric:"omitempty,max=20" validateCreate:"required,max=20" validateUpdate:"required,max=20"
	OfferShortTitle string `protobuf:"bytes,4,opt,name=offerShortTitle,proto3" json:"offerShortTitle,omitempty" validateGeneric:"omitempty,max=20" validateCreate:"required,max=20" validateUpdate:"required,max=20"`
	// Localized offer short title.
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	LocalizedOfferShortTitle *io.LocalizedString `protobuf:"bytes,5,opt,name=localizedOfferShortTitle,proto3" json:"localizedOfferShortTitle,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	// The offer details; will be shown on the enrolment page.
	// @tag: validateGeneric:"omitempty" validateCreate:"required" validateUpdate:"required"
	OfferDetails string `protobuf:"bytes,6,opt,name=offerDetails,proto3" json:"offerDetails,omitempty" validateGeneric:"omitempty" validateCreate:"required" validateUpdate:"required"`
	// Localized offer details.
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	LocalizedOfferDetails *io.LocalizedString `protobuf:"bytes,7,opt,name=localizedOfferDetails,proto3" json:"localizedOfferDetails,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	// The offer fine print.
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	OfferFinePrint string `protobuf:"bytes,8,opt,name=offerFinePrint,proto3" json:"offerFinePrint,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	// Localized offer fine print.
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	LocalizedOfferFinePrint *io.LocalizedString `protobuf:"bytes,9,opt,name=localizedOfferFinePrint,proto3" json:"localizedOfferFinePrint,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	// The pass template ID that coupons will use when in unredeemed state. All coupons for the offer are issued in unredeemed state.
	// @tag: validateGeneric:"omitempty" validateCreate:"required" validateUpdate:"omitempty"
	BeforeRedeemPassTemplateId string `protobuf:"bytes,10,opt,name=beforeRedeemPassTemplateId,proto3" json:"beforeRedeemPassTemplateId,omitempty" validateGeneric:"omitempty" validateCreate:"required" validateUpdate:"omitempty"`
	// Optional pass template ID that coupons will use when switched to redeemed state.
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	AfterRedeemPassTemplateId string `protobuf:"bytes,11,opt,name=afterRedeemPassTemplateId,proto3" json:"afterRedeemPassTemplateId,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	// The quota for the campaign. If set to 0, then it is unlimited. If the quota is reached no new coupons can be issued.
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	Quota *io.Quota `protobuf:"bytes,12,opt,name=quota,proto3" json:"quota,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	// Coupon expiry settings
	// @tag: validateGeneric:"omitempty" validateCreate:"-" validateUpdate:"required"
	CouponExpirySettings *CouponExpirySettings `protobuf:"bytes,13,opt,name=couponExpirySettings,proto3" json:"couponExpirySettings,omitempty" validateGeneric:"omitempty" validateCreate:"-" validateUpdate:"required"`
	// Optional redemption settings to give more control over redemption.
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	RedemptionSettings *RedemptionSettings `protobuf:"bytes,14,opt,name=redemptionSettings,proto3" json:"redemptionSettings,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	// Optional date when coupons can start to be issued. Defaults to the campaign start date. Needs to be greater than / equal to the campaign start date. Needs to be less than / equal to the campaign end date.
	// @tag: validateGeneric:"omitempty" validateCreate:"required" validateUpdate:"required"
	IssueStartDate *timestamp.Timestamp `protobuf:"bytes,15,opt,name=issueStartDate,proto3" json:"issueStartDate,omitempty" validateGeneric:"omitempty" validateCreate:"required" validateUpdate:"required"`
	// Optional date when coupons can no longer be issued. Defaults to the campaign end date. Needs to be less than / equal to the campaign end date.
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"required"
	IssueEndDate *timestamp.Timestamp `protobuf:"bytes,16,opt,name=issueEndDate,proto3" json:"issueEndDate,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"required"`
	// The date when the offer was created.
	// @tag: validateGeneric:"-" validateCreate:"-" validateUpdate:"-"
	Created *timestamp.Timestamp `protobuf:"bytes,17,opt,name=created,proto3" json:"created,omitempty" validateGeneric:"-" validateCreate:"-" validateUpdate:"-"`
	// The date the offer was last updated.
	// @tag: validateGeneric:"-" validateCreate:"-" validateUpdate:"-"
	Updated *timestamp.Timestamp `protobuf:"bytes,18,opt,name=updated,proto3" json:"updated,omitempty" validateGeneric:"-" validateCreate:"-" validateUpdate:"-"`
	// The campaign id that the offer belongs to (1 campaign can have multiple offers). This field cannot be changed once an offer is linked to a campaign.
	// @tag: validateGeneric:"omitempty" validateCreate:"required" validateUpdate:"required"
	CampaignId string `protobuf:"bytes,19,opt,name=campaignId,proto3" json:"campaignId,omitempty" validateGeneric:"omitempty" validateCreate:"required" validateUpdate:"required"`
	// Contains the email & sms distribution settings for the offer.
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	DistributionSettings *io.DistributionSettings `protobuf:"bytes,20,opt,name=distributionSettings,proto3" json:"distributionSettings,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	// The offer shortcode generated by the system. If the campaign is public, then this shortcode can be used to generate the coupon-create URL.
	// @tag: validateGeneric:"-" validateCreate:"-" validateUpdate:"-"
	ShortCode string `protobuf:"bytes,21,opt,name=shortCode,proto3" json:"shortCode,omitempty" validateGeneric:"-" validateCreate:"-" validateUpdate:"-"`
	// The offer timezone.
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	IanaTimezone string `protobuf:"bytes,22,opt,name=ianaTimezone,proto3" json:"ianaTimezone,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	// Can be used to temporarily disable the coupon (i.e. if you ran out of your promotion item, you can temporarily disable all live coupons, and activate them again later on when your item is in stock again).
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	Disabled             bool     `protobuf:"varint,23,opt,name=disabled,proto3" json:"disabled,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CouponOffer) Reset()         { *m = CouponOffer{} }
func (m *CouponOffer) String() string { return proto.CompactTextString(m) }
func (*CouponOffer) ProtoMessage()    {}
func (*CouponOffer) Descriptor() ([]byte, []int) {
	return fileDescriptor_169cf3a5064af2f9, []int{0}
}

func (m *CouponOffer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CouponOffer.Unmarshal(m, b)
}
func (m *CouponOffer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CouponOffer.Marshal(b, m, deterministic)
}
func (m *CouponOffer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CouponOffer.Merge(m, src)
}
func (m *CouponOffer) XXX_Size() int {
	return xxx_messageInfo_CouponOffer.Size(m)
}
func (m *CouponOffer) XXX_DiscardUnknown() {
	xxx_messageInfo_CouponOffer.DiscardUnknown(m)
}

var xxx_messageInfo_CouponOffer proto.InternalMessageInfo

func (m *CouponOffer) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CouponOffer) GetOfferTitle() string {
	if m != nil {
		return m.OfferTitle
	}
	return ""
}

func (m *CouponOffer) GetLocalizedOfferTitle() *io.LocalizedString {
	if m != nil {
		return m.LocalizedOfferTitle
	}
	return nil
}

func (m *CouponOffer) GetOfferShortTitle() string {
	if m != nil {
		return m.OfferShortTitle
	}
	return ""
}

func (m *CouponOffer) GetLocalizedOfferShortTitle() *io.LocalizedString {
	if m != nil {
		return m.LocalizedOfferShortTitle
	}
	return nil
}

func (m *CouponOffer) GetOfferDetails() string {
	if m != nil {
		return m.OfferDetails
	}
	return ""
}

func (m *CouponOffer) GetLocalizedOfferDetails() *io.LocalizedString {
	if m != nil {
		return m.LocalizedOfferDetails
	}
	return nil
}

func (m *CouponOffer) GetOfferFinePrint() string {
	if m != nil {
		return m.OfferFinePrint
	}
	return ""
}

func (m *CouponOffer) GetLocalizedOfferFinePrint() *io.LocalizedString {
	if m != nil {
		return m.LocalizedOfferFinePrint
	}
	return nil
}

func (m *CouponOffer) GetBeforeRedeemPassTemplateId() string {
	if m != nil {
		return m.BeforeRedeemPassTemplateId
	}
	return ""
}

func (m *CouponOffer) GetAfterRedeemPassTemplateId() string {
	if m != nil {
		return m.AfterRedeemPassTemplateId
	}
	return ""
}

func (m *CouponOffer) GetQuota() *io.Quota {
	if m != nil {
		return m.Quota
	}
	return nil
}

func (m *CouponOffer) GetCouponExpirySettings() *CouponExpirySettings {
	if m != nil {
		return m.CouponExpirySettings
	}
	return nil
}

func (m *CouponOffer) GetRedemptionSettings() *RedemptionSettings {
	if m != nil {
		return m.RedemptionSettings
	}
	return nil
}

func (m *CouponOffer) GetIssueStartDate() *timestamp.Timestamp {
	if m != nil {
		return m.IssueStartDate
	}
	return nil
}

func (m *CouponOffer) GetIssueEndDate() *timestamp.Timestamp {
	if m != nil {
		return m.IssueEndDate
	}
	return nil
}

func (m *CouponOffer) GetCreated() *timestamp.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *CouponOffer) GetUpdated() *timestamp.Timestamp {
	if m != nil {
		return m.Updated
	}
	return nil
}

func (m *CouponOffer) GetCampaignId() string {
	if m != nil {
		return m.CampaignId
	}
	return ""
}

func (m *CouponOffer) GetDistributionSettings() *io.DistributionSettings {
	if m != nil {
		return m.DistributionSettings
	}
	return nil
}

func (m *CouponOffer) GetShortCode() string {
	if m != nil {
		return m.ShortCode
	}
	return ""
}

func (m *CouponOffer) GetIanaTimezone() string {
	if m != nil {
		return m.IanaTimezone
	}
	return ""
}

func (m *CouponOffer) GetDisabled() bool {
	if m != nil {
		return m.Disabled
	}
	return false
}

type CouponExpirySettings struct {
	// @tag: validateGeneric:"omitempty,min=1" validateCreate:"required,min=1" validateUpdate:"omitempty,min=1"
	CouponExpiryType CouponExpiryType `protobuf:"varint,1,opt,name=couponExpiryType,proto3,enum=single_use_coupons.CouponExpiryType" json:"couponExpiryType,omitempty" validateGeneric:"omitempty,min=1" validateCreate:"required,min=1" validateUpdate:"omitempty,min=1"`
	// Number of days the coupon card is expired after the issue date.
	// The expiry time is 23:59:59 of expiry day. Please set couponExpiryType as EXPIRE_AFTER_X_DAYS.
	// Field can be omitted if using any of the other coupon expiry types.
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	ExpireAfterXDays     uint32   `protobuf:"varint,3,opt,name=expireAfterXDays,proto3" json:"expireAfterXDays,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CouponExpirySettings) Reset()         { *m = CouponExpirySettings{} }
func (m *CouponExpirySettings) String() string { return proto.CompactTextString(m) }
func (*CouponExpirySettings) ProtoMessage()    {}
func (*CouponExpirySettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_169cf3a5064af2f9, []int{1}
}

func (m *CouponExpirySettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CouponExpirySettings.Unmarshal(m, b)
}
func (m *CouponExpirySettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CouponExpirySettings.Marshal(b, m, deterministic)
}
func (m *CouponExpirySettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CouponExpirySettings.Merge(m, src)
}
func (m *CouponExpirySettings) XXX_Size() int {
	return xxx_messageInfo_CouponExpirySettings.Size(m)
}
func (m *CouponExpirySettings) XXX_DiscardUnknown() {
	xxx_messageInfo_CouponExpirySettings.DiscardUnknown(m)
}

var xxx_messageInfo_CouponExpirySettings proto.InternalMessageInfo

func (m *CouponExpirySettings) GetCouponExpiryType() CouponExpiryType {
	if m != nil {
		return m.CouponExpiryType
	}
	return CouponExpiryType_EXPIRY_DO_NOT_USE
}

func (m *CouponExpirySettings) GetExpireAfterXDays() uint32 {
	if m != nil {
		return m.ExpireAfterXDays
	}
	return 0
}

type RedemptionSettings struct {
	// Optional field that can be set if offers can only be redeemed after a certain date. Defaults to the offer issue start date. Needs to be greater than / equal to the offer issue start date, and less than / equal to offer issue end date.
	// @tag: validateGeneric:"-" validateCreate:"-" validateUpdate:"-"
	RedemptionStartDate *timestamp.Timestamp `protobuf:"bytes,1,opt,name=redemptionStartDate,proto3" json:"redemptionStartDate,omitempty" validateGeneric:"-" validateCreate:"-" validateUpdate:"-"`
	// Optional field that can be set if offers can only be redeemed until a certain date. Defaults to the offer issue end date. Needs to be less than / equal to the offer issue end date.
	// @tag: validateGeneric:"-" validateCreate:"-" validateUpdate:"-"
	RedemptionEndDate *timestamp.Timestamp `protobuf:"bytes,2,opt,name=redemptionEndDate,proto3" json:"redemptionEndDate,omitempty" validateGeneric:"-" validateCreate:"-" validateUpdate:"-"`
	// Dictates redemption type; defaults to API.
	RedemptionType []RedemptionType `protobuf:"varint,3,rep,packed,name=redemptionType,proto3,enum=single_use_coupons.RedemptionType" json:"redemptionType,omitempty"`
	// Settings for code provided on redemption; a list of valid codes and possible invalid-code error message needs to be provided.
	CodeProvidedOnRedeemSettings *CustomerInitiatedCodeProvideOnRedeemSettings `protobuf:"bytes,5,opt,name=codeProvidedOnRedeemSettings,proto3" json:"codeProvidedOnRedeemSettings,omitempty"`
	// Settings for fixed code redemption.
	FixedCodeSettings *CustomerInitiatedFixedCodeSettings `protobuf:"bytes,6,opt,name=fixedCodeSettings,proto3" json:"fixedCodeSettings,omitempty"`
	// Standard redemption page design, hosted by PassKit. Mandatory field if the type is any of the customer initiated redemptions.
	StandardSettings     *StandardPassKitHostedPage `protobuf:"bytes,7,opt,name=standardSettings,proto3" json:"standardSettings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *RedemptionSettings) Reset()         { *m = RedemptionSettings{} }
func (m *RedemptionSettings) String() string { return proto.CompactTextString(m) }
func (*RedemptionSettings) ProtoMessage()    {}
func (*RedemptionSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_169cf3a5064af2f9, []int{2}
}

func (m *RedemptionSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RedemptionSettings.Unmarshal(m, b)
}
func (m *RedemptionSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RedemptionSettings.Marshal(b, m, deterministic)
}
func (m *RedemptionSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RedemptionSettings.Merge(m, src)
}
func (m *RedemptionSettings) XXX_Size() int {
	return xxx_messageInfo_RedemptionSettings.Size(m)
}
func (m *RedemptionSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_RedemptionSettings.DiscardUnknown(m)
}

var xxx_messageInfo_RedemptionSettings proto.InternalMessageInfo

func (m *RedemptionSettings) GetRedemptionStartDate() *timestamp.Timestamp {
	if m != nil {
		return m.RedemptionStartDate
	}
	return nil
}

func (m *RedemptionSettings) GetRedemptionEndDate() *timestamp.Timestamp {
	if m != nil {
		return m.RedemptionEndDate
	}
	return nil
}

func (m *RedemptionSettings) GetRedemptionType() []RedemptionType {
	if m != nil {
		return m.RedemptionType
	}
	return nil
}

func (m *RedemptionSettings) GetCodeProvidedOnRedeemSettings() *CustomerInitiatedCodeProvideOnRedeemSettings {
	if m != nil {
		return m.CodeProvidedOnRedeemSettings
	}
	return nil
}

func (m *RedemptionSettings) GetFixedCodeSettings() *CustomerInitiatedFixedCodeSettings {
	if m != nil {
		return m.FixedCodeSettings
	}
	return nil
}

func (m *RedemptionSettings) GetStandardSettings() *StandardPassKitHostedPage {
	if m != nil {
		return m.StandardSettings
	}
	return nil
}

type CustomerInitiatedFixedCodeSettings struct {
	// For fixed code customer initiated redemption; the fixed code to display needs to be set.
	FixedCode string `protobuf:"bytes,1,opt,name=fixedCode,proto3" json:"fixedCode,omitempty"`
	// If set to true will use coupon.sku as the fixed code.
	UseCouponSku bool `protobuf:"varint,2,opt,name=useCouponSku,proto3" json:"useCouponSku,omitempty"`
	// If set will render a barcode underneath the fixed code with as contents the fixed code.
	Barcode io.BarcodeType `protobuf:"varint,3,opt,name=barcode,proto3,enum=io.BarcodeType" json:"barcode,omitempty"`
	// Count down timer for redemption.
	RedemptionTimer      *RedemptionTimerSettings `protobuf:"bytes,4,opt,name=redemptionTimer,proto3" json:"redemptionTimer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *CustomerInitiatedFixedCodeSettings) Reset()         { *m = CustomerInitiatedFixedCodeSettings{} }
func (m *CustomerInitiatedFixedCodeSettings) String() string { return proto.CompactTextString(m) }
func (*CustomerInitiatedFixedCodeSettings) ProtoMessage()    {}
func (*CustomerInitiatedFixedCodeSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_169cf3a5064af2f9, []int{3}
}

func (m *CustomerInitiatedFixedCodeSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CustomerInitiatedFixedCodeSettings.Unmarshal(m, b)
}
func (m *CustomerInitiatedFixedCodeSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CustomerInitiatedFixedCodeSettings.Marshal(b, m, deterministic)
}
func (m *CustomerInitiatedFixedCodeSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CustomerInitiatedFixedCodeSettings.Merge(m, src)
}
func (m *CustomerInitiatedFixedCodeSettings) XXX_Size() int {
	return xxx_messageInfo_CustomerInitiatedFixedCodeSettings.Size(m)
}
func (m *CustomerInitiatedFixedCodeSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_CustomerInitiatedFixedCodeSettings.DiscardUnknown(m)
}

var xxx_messageInfo_CustomerInitiatedFixedCodeSettings proto.InternalMessageInfo

func (m *CustomerInitiatedFixedCodeSettings) GetFixedCode() string {
	if m != nil {
		return m.FixedCode
	}
	return ""
}

func (m *CustomerInitiatedFixedCodeSettings) GetUseCouponSku() bool {
	if m != nil {
		return m.UseCouponSku
	}
	return false
}

func (m *CustomerInitiatedFixedCodeSettings) GetBarcode() io.BarcodeType {
	if m != nil {
		return m.Barcode
	}
	return io.BarcodeType_BARCODE_TYPE_DO_NOT_USE
}

func (m *CustomerInitiatedFixedCodeSettings) GetRedemptionTimer() *RedemptionTimerSettings {
	if m != nil {
		return m.RedemptionTimer
	}
	return nil
}

type RedemptionTimerSettings struct {
	// The number of seconds the redemption page displays the redemption code. When the times runs out, the redemption page will show the 'redemption period expired' message.
	TimeoutSeconds uint32 `protobuf:"varint,1,opt,name=timeoutSeconds,proto3" json:"timeoutSeconds,omitempty"`
	// Help text rendered above redemption timer.
	TimerHelpText string `protobuf:"bytes,2,opt,name=timerHelpText,proto3" json:"timerHelpText,omitempty"`
	// Localized help text for redemption timer.
	LocalizedTimeHelpText *io.LocalizedString `protobuf:"bytes,3,opt,name=localizedTimeHelpText,proto3" json:"localizedTimeHelpText,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}            `json:"-"`
	XXX_unrecognized      []byte              `json:"-"`
	XXX_sizecache         int32               `json:"-"`
}

func (m *RedemptionTimerSettings) Reset()         { *m = RedemptionTimerSettings{} }
func (m *RedemptionTimerSettings) String() string { return proto.CompactTextString(m) }
func (*RedemptionTimerSettings) ProtoMessage()    {}
func (*RedemptionTimerSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_169cf3a5064af2f9, []int{4}
}

func (m *RedemptionTimerSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RedemptionTimerSettings.Unmarshal(m, b)
}
func (m *RedemptionTimerSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RedemptionTimerSettings.Marshal(b, m, deterministic)
}
func (m *RedemptionTimerSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RedemptionTimerSettings.Merge(m, src)
}
func (m *RedemptionTimerSettings) XXX_Size() int {
	return xxx_messageInfo_RedemptionTimerSettings.Size(m)
}
func (m *RedemptionTimerSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_RedemptionTimerSettings.DiscardUnknown(m)
}

var xxx_messageInfo_RedemptionTimerSettings proto.InternalMessageInfo

func (m *RedemptionTimerSettings) GetTimeoutSeconds() uint32 {
	if m != nil {
		return m.TimeoutSeconds
	}
	return 0
}

func (m *RedemptionTimerSettings) GetTimerHelpText() string {
	if m != nil {
		return m.TimerHelpText
	}
	return ""
}

func (m *RedemptionTimerSettings) GetLocalizedTimeHelpText() *io.LocalizedString {
	if m != nil {
		return m.LocalizedTimeHelpText
	}
	return nil
}

type CustomerInitiatedCodeProvideOnRedeemSettings struct {
	// Optional array of valid codes that can be input on redemption.
	ValidCodes []string `protobuf:"bytes,1,rep,name=validCodes,proto3" json:"validCodes,omitempty"`
	// Input field box for entering the redemption code.
	RedemptionCodeInput *InputField `protobuf:"bytes,2,opt,name=redemptionCodeInput,proto3" json:"redemptionCodeInput,omitempty"`
	// Submit button to confirm the validation code.
	SubmitButtonText string `protobuf:"bytes,3,opt,name=submitButtonText,proto3" json:"submitButtonText,omitempty"`
	// Localized submit button text.
	LocalizedSubmitButtonText *io.LocalizedString `protobuf:"bytes,4,opt,name=localizedSubmitButtonText,proto3" json:"localizedSubmitButtonText,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}            `json:"-"`
	XXX_unrecognized          []byte              `json:"-"`
	XXX_sizecache             int32               `json:"-"`
}

func (m *CustomerInitiatedCodeProvideOnRedeemSettings) Reset() {
	*m = CustomerInitiatedCodeProvideOnRedeemSettings{}
}
func (m *CustomerInitiatedCodeProvideOnRedeemSettings) String() string {
	return proto.CompactTextString(m)
}
func (*CustomerInitiatedCodeProvideOnRedeemSettings) ProtoMessage() {}
func (*CustomerInitiatedCodeProvideOnRedeemSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_169cf3a5064af2f9, []int{5}
}

func (m *CustomerInitiatedCodeProvideOnRedeemSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CustomerInitiatedCodeProvideOnRedeemSettings.Unmarshal(m, b)
}
func (m *CustomerInitiatedCodeProvideOnRedeemSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CustomerInitiatedCodeProvideOnRedeemSettings.Marshal(b, m, deterministic)
}
func (m *CustomerInitiatedCodeProvideOnRedeemSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CustomerInitiatedCodeProvideOnRedeemSettings.Merge(m, src)
}
func (m *CustomerInitiatedCodeProvideOnRedeemSettings) XXX_Size() int {
	return xxx_messageInfo_CustomerInitiatedCodeProvideOnRedeemSettings.Size(m)
}
func (m *CustomerInitiatedCodeProvideOnRedeemSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_CustomerInitiatedCodeProvideOnRedeemSettings.DiscardUnknown(m)
}

var xxx_messageInfo_CustomerInitiatedCodeProvideOnRedeemSettings proto.InternalMessageInfo

func (m *CustomerInitiatedCodeProvideOnRedeemSettings) GetValidCodes() []string {
	if m != nil {
		return m.ValidCodes
	}
	return nil
}

func (m *CustomerInitiatedCodeProvideOnRedeemSettings) GetRedemptionCodeInput() *InputField {
	if m != nil {
		return m.RedemptionCodeInput
	}
	return nil
}

func (m *CustomerInitiatedCodeProvideOnRedeemSettings) GetSubmitButtonText() string {
	if m != nil {
		return m.SubmitButtonText
	}
	return ""
}

func (m *CustomerInitiatedCodeProvideOnRedeemSettings) GetLocalizedSubmitButtonText() *io.LocalizedString {
	if m != nil {
		return m.LocalizedSubmitButtonText
	}
	return nil
}

type InputField struct {
	// The label of input field.
	Label string `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	// Localized label of input field.
	LocalizedLabel *io.LocalizedString `protobuf:"bytes,2,opt,name=localizedLabel,proto3" json:"localizedLabel,omitempty"`
	// Help text shown below the input field.
	HelperText string `protobuf:"bytes,3,opt,name=helperText,proto3" json:"helperText,omitempty"`
	// Localized help text shown below the input field.
	LocalizedHelperText *io.LocalizedString `protobuf:"bytes,4,opt,name=localizedHelperText,proto3" json:"localizedHelperText,omitempty"`
	// Optional message that is displayed if the user provides an invalid input value.
	ErrorMessage string `protobuf:"bytes,5,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	// Localized invalid code error message.
	LocalizedErrorMessage *io.LocalizedString `protobuf:"bytes,6,opt,name=localizedErrorMessage,proto3" json:"localizedErrorMessage,omitempty"`
	// Default input value.
	DefaultValue string `protobuf:"bytes,7,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`
	// Localized default value.
	LocalizedDefaultValue *io.LocalizedString `protobuf:"bytes,8,opt,name=localizedDefaultValue,proto3" json:"localizedDefaultValue,omitempty"`
	// Placeholder text for the input field.
	Placeholder string `protobuf:"bytes,9,opt,name=placeholder,proto3" json:"placeholder,omitempty"`
	// Localized placeholder text.
	LocalizedPlaceholder *io.LocalizedString `protobuf:"bytes,10,opt,name=localizedPlaceholder,proto3" json:"localizedPlaceholder,omitempty"`
	// A regex which allows you to set custom validation rules for the input value.
	Validation           string   `protobuf:"bytes,11,opt,name=validation,proto3" json:"validation,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InputField) Reset()         { *m = InputField{} }
func (m *InputField) String() string { return proto.CompactTextString(m) }
func (*InputField) ProtoMessage()    {}
func (*InputField) Descriptor() ([]byte, []int) {
	return fileDescriptor_169cf3a5064af2f9, []int{6}
}

func (m *InputField) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InputField.Unmarshal(m, b)
}
func (m *InputField) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InputField.Marshal(b, m, deterministic)
}
func (m *InputField) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InputField.Merge(m, src)
}
func (m *InputField) XXX_Size() int {
	return xxx_messageInfo_InputField.Size(m)
}
func (m *InputField) XXX_DiscardUnknown() {
	xxx_messageInfo_InputField.DiscardUnknown(m)
}

var xxx_messageInfo_InputField proto.InternalMessageInfo

func (m *InputField) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *InputField) GetLocalizedLabel() *io.LocalizedString {
	if m != nil {
		return m.LocalizedLabel
	}
	return nil
}

func (m *InputField) GetHelperText() string {
	if m != nil {
		return m.HelperText
	}
	return ""
}

func (m *InputField) GetLocalizedHelperText() *io.LocalizedString {
	if m != nil {
		return m.LocalizedHelperText
	}
	return nil
}

func (m *InputField) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func (m *InputField) GetLocalizedErrorMessage() *io.LocalizedString {
	if m != nil {
		return m.LocalizedErrorMessage
	}
	return nil
}

func (m *InputField) GetDefaultValue() string {
	if m != nil {
		return m.DefaultValue
	}
	return ""
}

func (m *InputField) GetLocalizedDefaultValue() *io.LocalizedString {
	if m != nil {
		return m.LocalizedDefaultValue
	}
	return nil
}

func (m *InputField) GetPlaceholder() string {
	if m != nil {
		return m.Placeholder
	}
	return ""
}

func (m *InputField) GetLocalizedPlaceholder() *io.LocalizedString {
	if m != nil {
		return m.LocalizedPlaceholder
	}
	return nil
}

func (m *InputField) GetValidation() string {
	if m != nil {
		return m.Validation
	}
	return ""
}

type StandardPassKitHostedPage struct {
	// Title shown on the redemption page browser tab. If not set, offer title will be shown.
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// Localized title.
	LocalizedTitle *io.LocalizedString `protobuf:"bytes,2,opt,name=localizedTitle,proto3" json:"localizedTitle,omitempty"`
	// Redemption instructions, show underneath the redemption banner image.
	RedemptionInstructions string `protobuf:"bytes,3,opt,name=redemptionInstructions,proto3" json:"redemptionInstructions,omitempty"`
	// Localized redemption instructions.
	LocalizedRedemptionInstructions *io.LocalizedString `protobuf:"bytes,4,opt,name=localizedRedemptionInstructions,proto3" json:"localizedRedemptionInstructions,omitempty"`
	// Image assets for the redemption banner image.
	//
	// Types that are valid to be assigned to RedemptionImageAssets:
	//	*StandardPassKitHostedPage_ImageIds
	//	*StandardPassKitHostedPage_Images
	RedemptionImageAssets isStandardPassKitHostedPage_RedemptionImageAssets `protobuf_oneof:"RedemptionImageAssets"`
	// Text shown at the footer of the page, underneath the redemption code / redemption code input.
	FooterText string `protobuf:"bytes,7,opt,name=footerText,proto3" json:"footerText,omitempty"`
	// Localized text shown at the footer of the page.
	LocalizedFooterText *io.LocalizedString `protobuf:"bytes,8,opt,name=localizedFooterText,proto3" json:"localizedFooterText,omitempty"`
	// Customize success or error messages shown on the page or error dialog box.
	ResponseTexts *ResponseTexts `protobuf:"bytes,9,opt,name=responseTexts,proto3" json:"responseTexts,omitempty"`
	// Date time showed with couponAlreadyRedeemedText. Date time is localized to browser preferred language.
	HideRedeemedDateTime bool `protobuf:"varint,10,opt,name=hideRedeemedDateTime,proto3" json:"hideRedeemedDateTime,omitempty"`
	// Call to action button rendered on error page of coupon already redeemed to provide better customer experience.
	CallToActionButton *CallToActionButton `protobuf:"bytes,11,opt,name=callToActionButton,proto3" json:"callToActionButton,omitempty"`
	// Optional CSS overrides to ensure the page aligns with your brand guidelines.
	CssOverrides         string   `protobuf:"bytes,12,opt,name=cssOverrides,proto3" json:"cssOverrides,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StandardPassKitHostedPage) Reset()         { *m = StandardPassKitHostedPage{} }
func (m *StandardPassKitHostedPage) String() string { return proto.CompactTextString(m) }
func (*StandardPassKitHostedPage) ProtoMessage()    {}
func (*StandardPassKitHostedPage) Descriptor() ([]byte, []int) {
	return fileDescriptor_169cf3a5064af2f9, []int{7}
}

func (m *StandardPassKitHostedPage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StandardPassKitHostedPage.Unmarshal(m, b)
}
func (m *StandardPassKitHostedPage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StandardPassKitHostedPage.Marshal(b, m, deterministic)
}
func (m *StandardPassKitHostedPage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StandardPassKitHostedPage.Merge(m, src)
}
func (m *StandardPassKitHostedPage) XXX_Size() int {
	return xxx_messageInfo_StandardPassKitHostedPage.Size(m)
}
func (m *StandardPassKitHostedPage) XXX_DiscardUnknown() {
	xxx_messageInfo_StandardPassKitHostedPage.DiscardUnknown(m)
}

var xxx_messageInfo_StandardPassKitHostedPage proto.InternalMessageInfo

func (m *StandardPassKitHostedPage) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *StandardPassKitHostedPage) GetLocalizedTitle() *io.LocalizedString {
	if m != nil {
		return m.LocalizedTitle
	}
	return nil
}

func (m *StandardPassKitHostedPage) GetRedemptionInstructions() string {
	if m != nil {
		return m.RedemptionInstructions
	}
	return ""
}

func (m *StandardPassKitHostedPage) GetLocalizedRedemptionInstructions() *io.LocalizedString {
	if m != nil {
		return m.LocalizedRedemptionInstructions
	}
	return nil
}

type isStandardPassKitHostedPage_RedemptionImageAssets interface {
	isStandardPassKitHostedPage_RedemptionImageAssets()
}

type StandardPassKitHostedPage_ImageIds struct {
	ImageIds *io.ImageIds `protobuf:"bytes,5,opt,name=imageIds,proto3,oneof"`
}

type StandardPassKitHostedPage_Images struct {
	Images *io.ImageData `protobuf:"bytes,6,opt,name=images,proto3,oneof"`
}

func (*StandardPassKitHostedPage_ImageIds) isStandardPassKitHostedPage_RedemptionImageAssets() {}

func (*StandardPassKitHostedPage_Images) isStandardPassKitHostedPage_RedemptionImageAssets() {}

func (m *StandardPassKitHostedPage) GetRedemptionImageAssets() isStandardPassKitHostedPage_RedemptionImageAssets {
	if m != nil {
		return m.RedemptionImageAssets
	}
	return nil
}

func (m *StandardPassKitHostedPage) GetImageIds() *io.ImageIds {
	if x, ok := m.GetRedemptionImageAssets().(*StandardPassKitHostedPage_ImageIds); ok {
		return x.ImageIds
	}
	return nil
}

func (m *StandardPassKitHostedPage) GetImages() *io.ImageData {
	if x, ok := m.GetRedemptionImageAssets().(*StandardPassKitHostedPage_Images); ok {
		return x.Images
	}
	return nil
}

func (m *StandardPassKitHostedPage) GetFooterText() string {
	if m != nil {
		return m.FooterText
	}
	return ""
}

func (m *StandardPassKitHostedPage) GetLocalizedFooterText() *io.LocalizedString {
	if m != nil {
		return m.LocalizedFooterText
	}
	return nil
}

func (m *StandardPassKitHostedPage) GetResponseTexts() *ResponseTexts {
	if m != nil {
		return m.ResponseTexts
	}
	return nil
}

func (m *StandardPassKitHostedPage) GetHideRedeemedDateTime() bool {
	if m != nil {
		return m.HideRedeemedDateTime
	}
	return false
}

func (m *StandardPassKitHostedPage) GetCallToActionButton() *CallToActionButton {
	if m != nil {
		return m.CallToActionButton
	}
	return nil
}

func (m *StandardPassKitHostedPage) GetCssOverrides() string {
	if m != nil {
		return m.CssOverrides
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*StandardPassKitHostedPage) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*StandardPassKitHostedPage_ImageIds)(nil),
		(*StandardPassKitHostedPage_Images)(nil),
	}
}

type CallToActionButton struct {
	// Set true to hide button.
	HideCallToActionButton bool `protobuf:"varint,1,opt,name=hideCallToActionButton,proto3" json:"hideCallToActionButton,omitempty"`
	// Call-to-action text shown on the button.
	ButtonText string `protobuf:"bytes,2,opt,name=buttonText,proto3" json:"buttonText,omitempty"`
	// Localized button text.
	LocalizedButtonText *io.LocalizedString `protobuf:"bytes,3,opt,name=localizedButtonText,proto3" json:"localizedButtonText,omitempty"`
	// Link that the button will open.
	Link string `protobuf:"bytes,4,opt,name=link,proto3" json:"link,omitempty"`
	// Localized link that the button will open.
	LocalizedLink        *io.LocalizedString `protobuf:"bytes,5,opt,name=localizedLink,proto3" json:"localizedLink,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CallToActionButton) Reset()         { *m = CallToActionButton{} }
func (m *CallToActionButton) String() string { return proto.CompactTextString(m) }
func (*CallToActionButton) ProtoMessage()    {}
func (*CallToActionButton) Descriptor() ([]byte, []int) {
	return fileDescriptor_169cf3a5064af2f9, []int{8}
}

func (m *CallToActionButton) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CallToActionButton.Unmarshal(m, b)
}
func (m *CallToActionButton) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CallToActionButton.Marshal(b, m, deterministic)
}
func (m *CallToActionButton) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CallToActionButton.Merge(m, src)
}
func (m *CallToActionButton) XXX_Size() int {
	return xxx_messageInfo_CallToActionButton.Size(m)
}
func (m *CallToActionButton) XXX_DiscardUnknown() {
	xxx_messageInfo_CallToActionButton.DiscardUnknown(m)
}

var xxx_messageInfo_CallToActionButton proto.InternalMessageInfo

func (m *CallToActionButton) GetHideCallToActionButton() bool {
	if m != nil {
		return m.HideCallToActionButton
	}
	return false
}

func (m *CallToActionButton) GetButtonText() string {
	if m != nil {
		return m.ButtonText
	}
	return ""
}

func (m *CallToActionButton) GetLocalizedButtonText() *io.LocalizedString {
	if m != nil {
		return m.LocalizedButtonText
	}
	return nil
}

func (m *CallToActionButton) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

func (m *CallToActionButton) GetLocalizedLink() *io.LocalizedString {
	if m != nil {
		return m.LocalizedLink
	}
	return nil
}

type ResponseTexts struct {
	// To be shown before redemption page is rendered. The dialogue box will have "Ok" and "Cancel" bottons.
	// If visitor clicks "Ok", coupon will be redeemed and the redemption page will render fixed code.
	// This only applies to the redemption type REDEMPTION_TYPE_CUSTOMER_INITIATED_CODE_FIXED.
	RedeemConfirmationDialogBoxText string `protobuf:"bytes,1,opt,name=redeemConfirmationDialogBoxText,proto3" json:"redeemConfirmationDialogBoxText,omitempty"`
	// Localized redemption confirm dialog box text.
	LocalizedRedeemConfirmationDialogBoxText *io.LocalizedString `protobuf:"bytes,2,opt,name=localizedRedeemConfirmationDialogBoxText,proto3" json:"localizedRedeemConfirmationDialogBoxText,omitempty"`
	// To be shown when visitor clicks "Cancel" and reject to redeem now.
	// This only applies to the redemption type REDEMPTION_TYPE_CUSTOMER_INITIATED_CODE_FIXED.
	CancelRedeemText string `protobuf:"bytes,3,opt,name=cancelRedeemText,proto3" json:"cancelRedeemText,omitempty"`
	// Localized cancel redemption text.
	LocalizedCancelRedeemText *io.LocalizedString `protobuf:"bytes,4,opt,name=localizedCancelRedeemText,proto3" json:"localizedCancelRedeemText,omitempty"`
	// To be shown when coupon has been redeemed.
	AfterRedeemText string `protobuf:"bytes,5,opt,name=afterRedeemText,proto3" json:"afterRedeemText,omitempty"`
	// Localized after redemption text.
	LocalizedAfterRedeemText *io.LocalizedString `protobuf:"bytes,6,opt,name=localizedAfterRedeemText,proto3" json:"localizedAfterRedeemText,omitempty"`
	// To be shown when the coupon was already redeemed.
	CouponAlreadyRedeemedText string `protobuf:"bytes,7,opt,name=couponAlreadyRedeemedText,proto3" json:"couponAlreadyRedeemedText,omitempty"`
	// Localized text shown when the coupon was already redeemed.
	LocalizedCouponAlreadyRedeemedText *io.LocalizedString `protobuf:"bytes,8,opt,name=localizedCouponAlreadyRedeemedText,proto3" json:"localizedCouponAlreadyRedeemedText,omitempty"`
	// To be shown when the offer period has ended.
	OfferExpiredText string `protobuf:"bytes,9,opt,name=offerExpiredText,proto3" json:"offerExpiredText,omitempty"`
	// Localized text shown when offer has ended.
	LocalizedOfferExpiredText *io.LocalizedString `protobuf:"bytes,10,opt,name=localizedOfferExpiredText,proto3" json:"localizedOfferExpiredText,omitempty"`
	// To be shown when the coupon expiry date / redemption end date has passed.
	CouponExpiredText string `protobuf:"bytes,11,opt,name=couponExpiredText,proto3" json:"couponExpiredText,omitempty"`
	// Localized text shown when the coupon expiry date / redemption end date has passed.
	LocalizedCouponExpiredText *io.LocalizedString `protobuf:"bytes,12,opt,name=localizedCouponExpiredText,proto3" json:"localizedCouponExpiredText,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}            `json:"-"`
	XXX_unrecognized           []byte              `json:"-"`
	XXX_sizecache              int32               `json:"-"`
}

func (m *ResponseTexts) Reset()         { *m = ResponseTexts{} }
func (m *ResponseTexts) String() string { return proto.CompactTextString(m) }
func (*ResponseTexts) ProtoMessage()    {}
func (*ResponseTexts) Descriptor() ([]byte, []int) {
	return fileDescriptor_169cf3a5064af2f9, []int{9}
}

func (m *ResponseTexts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseTexts.Unmarshal(m, b)
}
func (m *ResponseTexts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseTexts.Marshal(b, m, deterministic)
}
func (m *ResponseTexts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseTexts.Merge(m, src)
}
func (m *ResponseTexts) XXX_Size() int {
	return xxx_messageInfo_ResponseTexts.Size(m)
}
func (m *ResponseTexts) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseTexts.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseTexts proto.InternalMessageInfo

func (m *ResponseTexts) GetRedeemConfirmationDialogBoxText() string {
	if m != nil {
		return m.RedeemConfirmationDialogBoxText
	}
	return ""
}

func (m *ResponseTexts) GetLocalizedRedeemConfirmationDialogBoxText() *io.LocalizedString {
	if m != nil {
		return m.LocalizedRedeemConfirmationDialogBoxText
	}
	return nil
}

func (m *ResponseTexts) GetCancelRedeemText() string {
	if m != nil {
		return m.CancelRedeemText
	}
	return ""
}

func (m *ResponseTexts) GetLocalizedCancelRedeemText() *io.LocalizedString {
	if m != nil {
		return m.LocalizedCancelRedeemText
	}
	return nil
}

func (m *ResponseTexts) GetAfterRedeemText() string {
	if m != nil {
		return m.AfterRedeemText
	}
	return ""
}

func (m *ResponseTexts) GetLocalizedAfterRedeemText() *io.LocalizedString {
	if m != nil {
		return m.LocalizedAfterRedeemText
	}
	return nil
}

func (m *ResponseTexts) GetCouponAlreadyRedeemedText() string {
	if m != nil {
		return m.CouponAlreadyRedeemedText
	}
	return ""
}

func (m *ResponseTexts) GetLocalizedCouponAlreadyRedeemedText() *io.LocalizedString {
	if m != nil {
		return m.LocalizedCouponAlreadyRedeemedText
	}
	return nil
}

func (m *ResponseTexts) GetOfferExpiredText() string {
	if m != nil {
		return m.OfferExpiredText
	}
	return ""
}

func (m *ResponseTexts) GetLocalizedOfferExpiredText() *io.LocalizedString {
	if m != nil {
		return m.LocalizedOfferExpiredText
	}
	return nil
}

func (m *ResponseTexts) GetCouponExpiredText() string {
	if m != nil {
		return m.CouponExpiredText
	}
	return ""
}

func (m *ResponseTexts) GetLocalizedCouponExpiredText() *io.LocalizedString {
	if m != nil {
		return m.LocalizedCouponExpiredText
	}
	return nil
}

// [DEPRECATED: OR operator not supported] Filter and list records.
type CouponOffersListRequestDeprecated struct {
	// @tag: validateGeneric:"required" validateCreate:"required" validateUpdate:"required"
	CampaignId string `protobuf:"bytes,1,opt,name=campaignId,proto3" json:"campaignId,omitempty" validateGeneric:"required" validateCreate:"required" validateUpdate:"required"`
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	Pagination           *io.Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CouponOffersListRequestDeprecated) Reset()         { *m = CouponOffersListRequestDeprecated{} }
func (m *CouponOffersListRequestDeprecated) String() string { return proto.CompactTextString(m) }
func (*CouponOffersListRequestDeprecated) ProtoMessage()    {}
func (*CouponOffersListRequestDeprecated) Descriptor() ([]byte, []int) {
	return fileDescriptor_169cf3a5064af2f9, []int{10}
}

func (m *CouponOffersListRequestDeprecated) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CouponOffersListRequestDeprecated.Unmarshal(m, b)
}
func (m *CouponOffersListRequestDeprecated) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CouponOffersListRequestDeprecated.Marshal(b, m, deterministic)
}
func (m *CouponOffersListRequestDeprecated) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CouponOffersListRequestDeprecated.Merge(m, src)
}
func (m *CouponOffersListRequestDeprecated) XXX_Size() int {
	return xxx_messageInfo_CouponOffersListRequestDeprecated.Size(m)
}
func (m *CouponOffersListRequestDeprecated) XXX_DiscardUnknown() {
	xxx_messageInfo_CouponOffersListRequestDeprecated.DiscardUnknown(m)
}

var xxx_messageInfo_CouponOffersListRequestDeprecated proto.InternalMessageInfo

func (m *CouponOffersListRequestDeprecated) GetCampaignId() string {
	if m != nil {
		return m.CampaignId
	}
	return ""
}

func (m *CouponOffersListRequestDeprecated) GetPagination() *io.Pagination {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type CouponOffersListRequest struct {
	// @tag: validateGeneric:"required" validateCreate:"required" validateUpdate:"required"
	CampaignId string `protobuf:"bytes,1,opt,name=campaignId,proto3" json:"campaignId,omitempty" validateGeneric:"required" validateCreate:"required" validateUpdate:"required"`
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	Filters              *io.Filters `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CouponOffersListRequest) Reset()         { *m = CouponOffersListRequest{} }
func (m *CouponOffersListRequest) String() string { return proto.CompactTextString(m) }
func (*CouponOffersListRequest) ProtoMessage()    {}
func (*CouponOffersListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_169cf3a5064af2f9, []int{11}
}

func (m *CouponOffersListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CouponOffersListRequest.Unmarshal(m, b)
}
func (m *CouponOffersListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CouponOffersListRequest.Marshal(b, m, deterministic)
}
func (m *CouponOffersListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CouponOffersListRequest.Merge(m, src)
}
func (m *CouponOffersListRequest) XXX_Size() int {
	return xxx_messageInfo_CouponOffersListRequest.Size(m)
}
func (m *CouponOffersListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CouponOffersListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CouponOffersListRequest proto.InternalMessageInfo

func (m *CouponOffersListRequest) GetCampaignId() string {
	if m != nil {
		return m.CampaignId
	}
	return ""
}

func (m *CouponOffersListRequest) GetFilters() *io.Filters {
	if m != nil {
		return m.Filters
	}
	return nil
}

func init() {
	proto.RegisterEnum("single_use_coupons.CouponExpiryType", CouponExpiryType_name, CouponExpiryType_value)
	proto.RegisterEnum("single_use_coupons.RedemptionType", RedemptionType_name, RedemptionType_value)
	proto.RegisterType((*CouponOffer)(nil), "single_use_coupons.CouponOffer")
	proto.RegisterType((*CouponExpirySettings)(nil), "single_use_coupons.CouponExpirySettings")
	proto.RegisterType((*RedemptionSettings)(nil), "single_use_coupons.RedemptionSettings")
	proto.RegisterType((*CustomerInitiatedFixedCodeSettings)(nil), "single_use_coupons.CustomerInitiatedFixedCodeSettings")
	proto.RegisterType((*RedemptionTimerSettings)(nil), "single_use_coupons.RedemptionTimerSettings")
	proto.RegisterType((*CustomerInitiatedCodeProvideOnRedeemSettings)(nil), "single_use_coupons.CustomerInitiatedCodeProvideOnRedeemSettings")
	proto.RegisterType((*InputField)(nil), "single_use_coupons.InputField")
	proto.RegisterType((*StandardPassKitHostedPage)(nil), "single_use_coupons.StandardPassKitHostedPage")
	proto.RegisterType((*CallToActionButton)(nil), "single_use_coupons.CallToActionButton")
	proto.RegisterType((*ResponseTexts)(nil), "single_use_coupons.ResponseTexts")
	proto.RegisterType((*CouponOffersListRequestDeprecated)(nil), "single_use_coupons.CouponOffersListRequestDeprecated")
	proto.RegisterType((*CouponOffersListRequest)(nil), "single_use_coupons.CouponOffersListRequest")
}

func init() {
	proto.RegisterFile("io/single_use_coupons/offer.proto", fileDescriptor_169cf3a5064af2f9)
}

var fileDescriptor_169cf3a5064af2f9 = []byte{
	// 2113 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x59, 0xdd, 0x72, 0x1b, 0x49,
	0x15, 0xde, 0x91, 0x15, 0x47, 0x3a, 0xb6, 0x15, 0xa5, 0xed, 0xc4, 0x8a, 0x2b, 0x95, 0x4c, 0xc4,
	0x12, 0xbc, 0x21, 0x96, 0x0a, 0x43, 0x2d, 0xc5, 0xb2, 0x95, 0x42, 0xb6, 0xc6, 0xb1, 0x1c, 0xdb,
	0xd2, 0x8e, 0xe4, 0x90, 0x50, 0x50, 0xa2, 0xa5, 0x69, 0xc9, 0x5d, 0x19, 0x4d, 0x6b, 0xa7, 0x5b,
	0x21, 0xde, 0x4b, 0x8a, 0x17, 0x80, 0xe2, 0x9e, 0x6b, 0xb8, 0xa1, 0x8a, 0x47, 0x09, 0x37, 0x54,
	0x6d, 0x15, 0x17, 0x14, 0x17, 0xf0, 0x16, 0x54, 0xf7, 0x8c, 0xe6, 0x4f, 0xa3, 0x1f, 0x6e, 0x76,
	0xad, 0xef, 0x7c, 0xdf, 0x39, 0x3d, 0xdd, 0xe7, 0x9c, 0xfe, 0x09, 0x3c, 0xa1, 0xac, 0xca, 0xa9,
	0x33, 0xb4, 0x49, 0x77, 0xc2, 0x49, 0xb7, 0xcf, 0x26, 0x63, 0xe6, 0xf0, 0x2a, 0x1b, 0x0c, 0x88,
	0x5b, 0x19, 0xbb, 0x4c, 0x30, 0x84, 0x66, 0xed, 0x7b, 0x8f, 0x87, 0x8c, 0x0d, 0x6d, 0x52, 0x55,
	0x8c, 0xde, 0x64, 0x50, 0x15, 0x74, 0x44, 0xb8, 0xc0, 0xa3, 0xb1, 0x27, 0xda, 0xdb, 0xa5, 0xac,
	0xda, 0x67, 0xa3, 0x11, 0x73, 0xaa, 0x3d, 0x6a, 0xdb, 0xd4, 0x19, 0xfa, 0x86, 0x87, 0xa1, 0xc1,
	0xa2, 0x5c, 0xb8, 0xb4, 0x37, 0x11, 0x94, 0x39, 0xb3, 0x56, 0x9b, 0xf5, 0xb1, 0x4d, 0xbf, 0xc1,
	0x11, 0xeb, 0x5e, 0x68, 0x1d, 0xe3, 0x21, 0x75, 0xa2, 0xb6, 0xfb, 0xa1, 0x6d, 0x40, 0x6d, 0x31,
	0x1d, 0xfd, 0x5e, 0x29, 0xc4, 0x05, 0x19, 0x8d, 0x6d, 0x2c, 0x88, 0x6f, 0xd9, 0xa1, 0xac, 0x4a,
	0x47, 0x78, 0x48, 0xbc, 0xff, 0xfa, 0xe8, 0x73, 0xf5, 0xbf, 0xfe, 0xc1, 0x90, 0x38, 0x07, 0xfc,
	0x37, 0x78, 0x38, 0x24, 0x6e, 0x95, 0x8d, 0x65, 0x20, 0x5e, 0xc5, 0x8e, 0xc3, 0x84, 0x0a, 0xca,
	0x3d, 0x76, 0xf9, 0xdb, 0x0d, 0xd8, 0x38, 0x56, 0x73, 0xd2, 0x94, 0x33, 0x86, 0x0a, 0x90, 0xa1,
	0x56, 0x49, 0xd3, 0xb5, 0xfd, 0xbc, 0x99, 0xa1, 0x16, 0x7a, 0x04, 0xa0, 0xa6, 0xb2, 0x43, 0x85,
	0x4d, 0x4a, 0x19, 0x85, 0x47, 0x10, 0x64, 0xc0, 0xb6, 0xff, 0x9d, 0xc4, 0x6a, 0x86, 0xc4, 0x35,
	0x5d, 0xdb, 0xdf, 0x38, 0xdc, 0xae, 0x50, 0x56, 0x39, 0x9f, 0x9a, 0xdb, 0xc2, 0xa5, 0xce, 0xd0,
	0x4c, 0xe3, 0xa3, 0x7d, 0xb8, 0xa3, 0x9c, 0xb6, 0xaf, 0x99, 0x2b, 0x3c, 0x17, 0x59, 0x15, 0x2b,
	0x09, 0xa3, 0x26, 0x94, 0xe2, 0x0e, 0x22, 0x92, 0x5b, 0xf3, 0xa3, 0xce, 0x15, 0xa1, 0x32, 0x6c,
	0xaa, 0x18, 0x75, 0x22, 0x30, 0xb5, 0x79, 0x69, 0x5d, 0xc5, 0x8d, 0x61, 0xa8, 0x01, 0xf7, 0xe2,
	0xfa, 0x29, 0xf9, 0xf6, 0xfc, 0x88, 0xe9, 0x0a, 0xf4, 0x14, 0x0a, 0xca, 0xf5, 0x09, 0x75, 0x48,
	0xcb, 0xa5, 0x8e, 0x28, 0xe5, 0x54, 0xc0, 0x04, 0x8a, 0x2e, 0x60, 0x37, 0xee, 0x20, 0x14, 0xe4,
	0xe7, 0x07, 0x9d, 0xa7, 0x41, 0x2f, 0x60, 0xaf, 0x47, 0x06, 0xcc, 0x25, 0x26, 0xb1, 0x08, 0x19,
	0xb5, 0x30, 0xe7, 0x1d, 0x3f, 0x9b, 0x1a, 0x56, 0x09, 0xd4, 0x10, 0x16, 0x30, 0xd0, 0x97, 0xf0,
	0x00, 0x0f, 0x04, 0x71, 0x53, 0xe5, 0x1b, 0x4a, 0x3e, 0x9f, 0x80, 0x1e, 0xc3, 0xad, 0xaf, 0x27,
	0x4c, 0xe0, 0xd2, 0xa6, 0x1a, 0x7a, 0x5e, 0x0e, 0xfd, 0x2b, 0x09, 0x98, 0x1e, 0x8e, 0x7e, 0x09,
	0x3b, 0x5e, 0x65, 0x1a, 0x1f, 0xc6, 0xd4, 0xbd, 0x69, 0x13, 0x21, 0xa8, 0x33, 0xe4, 0xa5, 0x2d,
	0xc5, 0xdf, 0xaf, 0xcc, 0x56, 0x70, 0xe5, 0x38, 0x85, 0x6f, 0xa6, 0x7a, 0x41, 0xaf, 0x01, 0xb9,
	0xc4, 0x22, 0x23, 0x55, 0x05, 0x81, 0xef, 0x82, 0xf2, 0xfd, 0x34, 0xcd, 0xb7, 0x39, 0xc3, 0x36,
	0x53, 0x3c, 0xa0, 0x23, 0x28, 0x50, 0xce, 0x27, 0xa4, 0x2d, 0xb0, 0x2b, 0xea, 0x58, 0x90, 0xd2,
	0x1d, 0xe5, 0x73, 0xaf, 0xe2, 0x75, 0x97, 0xca, 0xb4, 0xbb, 0x54, 0x3a, 0xd3, 0xee, 0x62, 0x26,
	0x14, 0xe8, 0x05, 0x6c, 0x2a, 0xc4, 0x70, 0x2c, 0xe5, 0xa1, 0xb8, 0xd4, 0x43, 0x8c, 0x8f, 0x7e,
	0x04, 0xb7, 0xfb, 0x2e, 0xc1, 0x82, 0x58, 0xa5, 0xbb, 0x4b, 0xa5, 0x53, 0xaa, 0x54, 0x4d, 0xc6,
	0x96, 0x52, 0xa1, 0xe5, 0x2a, 0x9f, 0x2a, 0x9b, 0x41, 0x1f, 0x8f, 0xc6, 0x98, 0x0e, 0x9d, 0x86,
	0x55, 0xda, 0xf6, 0x9a, 0x41, 0x88, 0xa0, 0x73, 0xd8, 0x89, 0xb6, 0xc4, 0x60, 0xa6, 0x77, 0x54,
	0x88, 0x92, 0x5c, 0xf5, 0x7a, 0x8a, 0xdd, 0x4c, 0x55, 0xa1, 0x87, 0x90, 0xe7, 0xb2, 0x4c, 0x8f,
	0x99, 0x45, 0x4a, 0xf7, 0x54, 0xb0, 0x10, 0x90, 0x65, 0x4b, 0xb1, 0x83, 0xe5, 0x28, 0xbf, 0x61,
	0x0e, 0x29, 0xdd, 0xf7, 0xca, 0x36, 0x8a, 0xa1, 0x3d, 0xc8, 0x59, 0x94, 0xe3, 0x9e, 0x4d, 0xac,
	0xd2, 0xae, 0xae, 0xed, 0xe7, 0xcc, 0xe0, 0xf7, 0x17, 0xff, 0xd2, 0xfe, 0x50, 0xfb, 0xa7, 0x06,
	0xdf, 0x6a, 0xcf, 0x36, 0xbd, 0x4c, 0xd2, 0x55, 0xc5, 0x1c, 0xfe, 0x5e, 0x3b, 0x65, 0xb6, 0xc5,
	0x75, 0x71, 0x4d, 0x74, 0x55, 0x92, 0xba, 0xe5, 0x55, 0xee, 0x73, 0x3d, 0xcc, 0x00, 0x9d, 0xfb,
	0x83, 0xd4, 0xb1, 0x63, 0xe9, 0x5e, 0xd9, 0xe8, 0x4f, 0x75, 0x55, 0x00, 0x07, 0xae, 0xaa, 0x00,
	0x7d, 0xda, 0xac, 0x75, 0x8b, 0x70, 0x3a, 0x74, 0xb8, 0xbe, 0x5f, 0x1b, 0x8f, 0x6d, 0xa2, 0xff,
	0x1c, 0xdb, 0x36, 0x11, 0xfa, 0x53, 0xfd, 0xa5, 0x9a, 0x70, 0xbd, 0x85, 0x6f, 0xa6, 0x94, 0xcf,
	0xf4, 0x01, 0x73, 0x55, 0xe4, 0xe8, 0x90, 0x2a, 0x1f, 0xb5, 0x48, 0xc7, 0xfd, 0xa8, 0xc5, 0x5a,
	0xd3, 0x47, 0x6d, 0x41, 0xd5, 0x96, 0xff, 0xa8, 0xc1, 0x4e, 0x5a, 0x9d, 0xa0, 0x16, 0x14, 0xa3,
	0x95, 0xd2, 0xb9, 0x19, 0x13, 0xd5, 0xf4, 0x0b, 0x87, 0x9f, 0x2e, 0xab, 0x35, 0xc9, 0x35, 0x67,
	0xd4, 0xe8, 0x19, 0x14, 0x89, 0xfc, 0x45, 0x6a, 0x72, 0x12, 0xde, 0xd4, 0xf1, 0x0d, 0x57, 0xbb,
	0xc0, 0x96, 0x39, 0x83, 0x97, 0xff, 0x91, 0x05, 0x34, 0x5b, 0x62, 0xe8, 0x1c, 0xb6, 0x23, 0x45,
	0x16, 0xd4, 0x94, 0xb6, 0x34, 0x41, 0xd3, 0x64, 0xe8, 0x14, 0xee, 0x86, 0xf0, 0xb4, 0xba, 0x32,
	0x4b, 0x7d, 0xcd, 0x8a, 0xd0, 0x19, 0x14, 0x42, 0x50, 0x4d, 0xd5, 0x9a, 0xbe, 0xb6, 0x5f, 0x38,
	0x2c, 0x2f, 0x6e, 0x1d, 0x6a, 0xa2, 0x12, 0x4a, 0xf4, 0x3b, 0x0d, 0x1e, 0xf6, 0x99, 0x45, 0x5a,
	0x2e, 0x7b, 0x4f, 0x2d, 0x62, 0x35, 0x1d, 0x6f, 0xe1, 0x82, 0x5a, 0xf1, 0xf6, 0xb0, 0x9f, 0xa5,
	0xae, 0xc2, 0x84, 0x0b, 0x36, 0x22, 0x6e, 0xc3, 0xa1, 0x82, 0xca, 0x82, 0x3c, 0x0e, 0x1d, 0x25,
	0xfd, 0x98, 0x0b, 0xa3, 0x20, 0x0b, 0xee, 0x0e, 0xe8, 0x07, 0xcf, 0x43, 0x10, 0x7a, 0x5d, 0x85,
	0xfe, 0x7c, 0xa5, 0xd0, 0x27, 0x49, 0xb5, 0x39, 0xeb, 0x10, 0xbd, 0x85, 0x22, 0x17, 0xd8, 0xb1,
	0xb0, 0x6b, 0x05, 0x41, 0xbc, 0x1d, 0xf3, 0x20, 0x2d, 0x48, 0xdb, 0xe7, 0xca, 0x24, 0x7e, 0x45,
	0xc5, 0x29, 0xe3, 0x82, 0x58, 0x2d, 0x3c, 0x24, 0xe6, 0x8c, 0x9b, 0xb3, 0x6c, 0x2e, 0x5b, 0xbc,
	0x75, 0x96, 0xcd, 0xe5, 0x8a, 0xf9, 0xb3, 0x6c, 0x2e, 0x5f, 0x84, 0xb3, 0x6c, 0x0e, 0x8a, 0x1b,
	0xe5, 0xff, 0x68, 0x50, 0x5e, 0x3e, 0x58, 0xd9, 0x5b, 0x82, 0xe1, 0xfa, 0xa7, 0x9d, 0x10, 0x90,
	0xbd, 0x65, 0xc2, 0x89, 0x97, 0xf4, 0xed, 0x77, 0x13, 0x95, 0x35, 0x39, 0x33, 0x86, 0xa1, 0xcf,
	0xe0, 0x76, 0x0f, 0xbb, 0x72, 0x92, 0x55, 0x9a, 0x17, 0x0e, 0xef, 0xc8, 0xf6, 0x76, 0xe4, 0x41,
	0x6a, 0xe9, 0xa7, 0x76, 0x74, 0x05, 0x77, 0x22, 0x59, 0x40, 0x47, 0xc4, 0x55, 0x87, 0x9b, 0x8d,
	0xc3, 0xef, 0x2f, 0x49, 0x20, 0x49, 0x0d, 0xe6, 0x37, 0xe9, 0xa3, 0xfc, 0x37, 0x0d, 0x76, 0xe7,
	0x90, 0xe5, 0x29, 0x43, 0x1e, 0x68, 0xd9, 0x44, 0xb4, 0x49, 0x9f, 0x39, 0x16, 0x57, 0x1f, 0xb9,
	0x65, 0x26, 0x50, 0xf4, 0x29, 0x6c, 0x49, 0xc4, 0x3d, 0x25, 0xf6, 0xb8, 0x43, 0x3e, 0x08, 0xff,
	0x84, 0x17, 0x07, 0x63, 0xc7, 0x1f, 0x19, 0x27, 0x60, 0xaf, 0xad, 0x72, 0xfc, 0x89, 0x2a, 0xca,
	0x7f, 0xca, 0xc0, 0xf3, 0xff, 0x27, 0x8f, 0xe5, 0x9e, 0xf3, 0x1e, 0xdb, 0x54, 0x71, 0xe4, 0x57,
	0xac, 0xc9, 0x3d, 0x27, 0x44, 0x50, 0x2b, 0xda, 0x34, 0x24, 0xd4, 0x70, 0xc6, 0x13, 0xe1, 0x17,
	0xfa, 0xa3, 0xb4, 0x09, 0x56, 0x84, 0x13, 0x4a, 0x6c, 0xcb, 0x4c, 0x93, 0xca, 0x4e, 0xc6, 0x27,
	0xbd, 0x11, 0x15, 0x47, 0x13, 0x21, 0x98, 0x13, 0x7c, 0x68, 0xde, 0x9c, 0xc1, 0xd1, 0x57, 0xf0,
	0x20, 0xf8, 0xce, 0x76, 0x52, 0x94, 0x9d, 0x3f, 0x3b, 0xf3, 0x55, 0xe5, 0xbf, 0x66, 0x01, 0xc2,
	0x21, 0xa2, 0x1d, 0xb8, 0x65, 0xe3, 0x1e, 0xb1, 0xfd, 0x2c, 0xf5, 0x7e, 0xa0, 0x9f, 0x42, 0x21,
	0xf0, 0x70, 0xae, 0xcc, 0x99, 0xf9, 0xc1, 0x12, 0x54, 0x39, 0xa5, 0xd7, 0xc4, 0x1e, 0x13, 0x37,
	0xf2, 0x69, 0x11, 0x24, 0x76, 0xa6, 0x3f, 0x0d, 0x89, 0xd9, 0x55, 0xce, 0xf4, 0x21, 0x5f, 0x56,
	0x11, 0x71, 0x5d, 0xe6, 0x5e, 0x10, 0xce, 0xf1, 0xd0, 0x3b, 0x9d, 0xe7, 0xcd, 0x18, 0x16, 0xcb,
	0x2c, 0x23, 0x4a, 0x5e, 0x5f, 0x25, 0xb3, 0xa2, 0x0a, 0x19, 0xce, 0x22, 0x03, 0x3c, 0xb1, 0xc5,
	0x6b, 0x6c, 0x4f, 0x88, 0x6a, 0x34, 0x79, 0x33, 0x86, 0xc5, 0xc2, 0xd5, 0xa3, 0xe4, 0xdc, 0x2a,
	0xe1, 0xa2, 0x0a, 0xa4, 0xc3, 0xc6, 0xd8, 0xc6, 0x7d, 0x72, 0xcd, 0x6c, 0x8b, 0xb8, 0xea, 0x4c,
	0x9e, 0x37, 0xa3, 0x10, 0x7a, 0x09, 0x3b, 0x81, 0xb4, 0x15, 0xa1, 0xc2, 0xfc, 0x58, 0xa9, 0x82,
	0xa0, 0x04, 0xd4, 0xc5, 0xcd, 0x3f, 0x6c, 0x47, 0x90, 0xf2, 0xdf, 0x6f, 0xc1, 0x83, 0xb9, 0xbd,
	0x53, 0x26, 0x90, 0x50, 0xb7, 0x23, 0x3f, 0x81, 0xd4, 0x8f, 0x58, 0x02, 0x85, 0x77, 0xbb, 0xa5,
	0x09, 0xe4, 0x5d, 0x99, 0x3e, 0x87, 0xfb, 0x61, 0xe1, 0x34, 0x1c, 0x2e, 0xdc, 0x49, 0x5f, 0x5d,
	0x2a, 0xfd, 0x64, 0x9a, 0x63, 0x45, 0xbf, 0x82, 0xc7, 0x81, 0x27, 0x33, 0xdd, 0xc1, 0x82, 0x24,
	0x5b, 0xa6, 0x45, 0xcf, 0x20, 0xa7, 0x2e, 0xc2, 0x0d, 0x6b, 0xba, 0x8d, 0x6e, 0x4a, 0x3f, 0x0d,
	0x1f, 0x3b, 0xfd, 0xc4, 0x0c, 0xec, 0xe8, 0x7b, 0xb0, 0xae, 0xfe, 0x9e, 0xee, 0x7a, 0x5b, 0x01,
	0xb3, 0x8e, 0x05, 0x3e, 0xfd, 0xc4, 0xf4, 0xcd, 0x72, 0xf2, 0x07, 0x8c, 0x09, 0xbf, 0x06, 0xbc,
	0xa4, 0x8a, 0x20, 0xb1, 0x62, 0x39, 0x09, 0x89, 0xb9, 0x55, 0x8a, 0x25, 0xe4, 0xa3, 0x97, 0xb0,
	0xe5, 0x12, 0x2e, 0xfb, 0x13, 0x91, 0xbf, 0xb9, 0x7f, 0xc9, 0x7b, 0x92, 0xbe, 0x43, 0x44, 0x88,
	0x66, 0x5c, 0x87, 0x0e, 0x61, 0xe7, 0x9a, 0x5a, 0xfe, 0x71, 0x90, 0xa8, 0x03, 0x8c, 0x6c, 0xc0,
	0x2a, 0xeb, 0x72, 0x66, 0xaa, 0x4d, 0xde, 0x8f, 0xfa, 0xd8, 0xb6, 0x3b, 0xac, 0xa6, 0x66, 0xd2,
	0x6b, 0x46, 0x2a, 0xd1, 0xe6, 0xdc, 0x8f, 0x8e, 0x67, 0xd8, 0x66, 0x8a, 0x07, 0x59, 0x92, 0x7d,
	0xce, 0x9b, 0xef, 0x89, 0xeb, 0x52, 0xd9, 0xbd, 0x37, 0xbd, 0x92, 0x8c, 0x62, 0x47, 0xbb, 0x70,
	0x2f, 0xb2, 0x9c, 0x72, 0xce, 0x6b, 0x9c, 0x13, 0xc1, 0xcb, 0xbf, 0xcd, 0x00, 0x9a, 0x8d, 0x23,
	0x73, 0x4f, 0x7e, 0xc3, 0xac, 0x45, 0xe5, 0x77, 0xce, 0x9c, 0x63, 0x95, 0xeb, 0xd8, 0x0b, 0x5b,
	0xb3, 0xff, 0x90, 0x11, 0x22, 0xb1, 0x75, 0x4c, 0x34, 0xfe, 0xa5, 0xeb, 0x18, 0xd9, 0x10, 0x10,
	0x64, 0x6d, 0xea, 0xbc, 0xf3, 0x5f, 0x2f, 0xd4, 0xdf, 0xe8, 0x27, 0xb0, 0x15, 0x76, 0x60, 0x69,
	0x5c, 0xf0, 0x4e, 0x11, 0x67, 0x96, 0xff, 0xbb, 0x0e, 0x5b, 0xb1, 0xe5, 0x46, 0xa7, 0xf0, 0xd8,
	0xbb, 0x60, 0x1c, 0x33, 0x67, 0x40, 0xdd, 0x91, 0x6a, 0x01, 0x75, 0x8a, 0x6d, 0x36, 0x3c, 0x62,
	0x1f, 0xd4, 0x98, 0xbd, 0x42, 0x5f, 0x46, 0x43, 0x0c, 0xf6, 0x63, 0x15, 0xb5, 0xc8, 0xe5, 0x82,
	0xe6, 0xb0, 0xb2, 0x13, 0xb9, 0xb1, 0xf6, 0xb1, 0xd3, 0x27, 0xb6, 0x47, 0x8c, 0x6e, 0xac, 0x49,
	0x3c, 0xb6, 0xb1, 0x1e, 0x27, 0x45, 0x2b, 0x6d, 0xac, 0x49, 0x15, 0xda, 0x87, 0x3b, 0x91, 0x17,
	0x0a, 0xe5, 0xc8, 0xdb, 0x92, 0x92, 0x70, 0xec, 0x8d, 0xa9, 0x96, 0x90, 0xac, 0xaf, 0xf2, 0xc6,
	0x94, 0x10, 0xa1, 0x2f, 0xe1, 0x81, 0x57, 0x3a, 0x35, 0xdb, 0x25, 0xd8, 0xba, 0x99, 0x56, 0x60,
	0xa4, 0xa7, 0xcc, 0x27, 0xa0, 0x3e, 0x94, 0xc3, 0xaf, 0x9a, 0xeb, 0x66, 0x41, 0xc7, 0x59, 0x41,
	0x2e, 0x17, 0x47, 0xdd, 0x2b, 0xd5, 0x95, 0xce, 0x77, 0xe9, 0x6d, 0x6a, 0x33, 0x78, 0x6c, 0x71,
	0x9a, 0x49, 0x11, 0xac, 0xb2, 0x38, 0x49, 0x15, 0x7a, 0x0e, 0x77, 0x23, 0x57, 0x4a, 0xdf, 0x95,
	0xb7, 0xd5, 0xcd, 0x1a, 0x50, 0x1b, 0xf6, 0x12, 0x9f, 0x14, 0x95, 0x6d, 0xce, 0x1f, 0xc1, 0x02,
	0x59, 0x99, 0xc3, 0x93, 0xc8, 0x4b, 0x28, 0x3f, 0xa7, 0x5c, 0x98, 0xe4, 0xeb, 0x09, 0xe1, 0xa2,
	0x4e, 0xc6, 0x2e, 0xe9, 0xa7, 0x3c, 0x81, 0x68, 0x33, 0x4f, 0x20, 0x15, 0x80, 0xf0, 0x65, 0xd7,
	0x2f, 0x9b, 0x82, 0x1c, 0x49, 0x2b, 0x40, 0xcd, 0x08, 0xa3, 0xfc, 0x6b, 0xd8, 0x9d, 0x13, 0x74,
	0x69, 0xa8, 0xef, 0xc2, 0x6d, 0xef, 0xa1, 0x98, 0xfb, 0x71, 0x36, 0x64, 0x9c, 0x13, 0x0f, 0x32,
	0xa7, 0xb6, 0x67, 0x7f, 0xd6, 0xa0, 0x98, 0xbc, 0xbf, 0xa3, 0x7b, 0x70, 0xd7, 0x78, 0xd3, 0x6a,
	0x98, 0x6f, 0xbb, 0xf5, 0x66, 0xf7, 0xb2, 0xd9, 0xe9, 0x5e, 0xb5, 0x8d, 0xe2, 0x27, 0xe8, 0x11,
	0xec, 0xd5, 0xae, 0x3a, 0xcd, 0xae, 0xb2, 0x19, 0xdd, 0xe6, 0xc9, 0x89, 0x61, 0x76, 0x8d, 0xcb,
	0x7a, 0xb7, 0x5e, 0xeb, 0x18, 0x45, 0x0d, 0x7d, 0x07, 0x1e, 0x47, 0xed, 0xa6, 0x51, 0x37, 0x2e,
	0x5a, 0x9d, 0x46, 0xf3, 0x32, 0x24, 0x65, 0xd0, 0x2e, 0x6c, 0xfb, 0xf6, 0xda, 0x49, 0xc7, 0x30,
	0xbb, 0x6f, 0xba, 0xf5, 0xda, 0xdb, 0x76, 0x71, 0x0d, 0xe9, 0xf0, 0x70, 0xea, 0xf8, 0xb2, 0xfb,
	0xba, 0x66, 0x36, 0x6a, 0x47, 0xe7, 0x86, 0x52, 0x75, 0x3b, 0x8d, 0x0b, 0xa3, 0x98, 0x7d, 0xf6,
	0x6f, 0x0d, 0x0a, 0xf1, 0x0b, 0xb4, 0x1c, 0x52, 0x24, 0x4c, 0xe7, 0x6d, 0xcb, 0x88, 0x0f, 0x79,
	0x17, 0xb6, 0x93, 0xf6, 0x5a, 0xab, 0x51, 0xd4, 0xd0, 0x53, 0x28, 0x27, 0x0d, 0xc7, 0x57, 0xed,
	0x4e, 0xf3, 0xc2, 0x30, 0xbb, 0x8d, 0xcb, 0x46, 0xa7, 0x51, 0xeb, 0x18, 0xf5, 0x62, 0x06, 0xfd,
	0x00, 0x0e, 0x96, 0xf3, 0xba, 0xc7, 0xcd, 0xba, 0xd1, 0x3d, 0x69, 0xbc, 0x31, 0xea, 0xc5, 0x35,
	0xf4, 0x02, 0xbe, 0x58, 0x55, 0xd2, 0x32, 0x9b, 0xaf, 0x1b, 0x75, 0xa3, 0x2e, 0x3f, 0x59, 0x6a,
	0x8c, 0x8b, 0x62, 0xf6, 0x68, 0x0c, 0x3a, 0x65, 0x95, 0x31, 0xe6, 0xfc, 0x1d, 0x15, 0x95, 0xd6,
	0x2b, 0xca, 0x2a, 0x6d, 0xb5, 0xc9, 0x5e, 0x4d, 0x6f, 0x98, 0xfc, 0x17, 0x3f, 0xe6, 0x02, 0xf3,
	0xeb, 0x80, 0xd4, 0x67, 0xa3, 0x2a, 0x65, 0xd5, 0x11, 0xb3, 0x88, 0x5d, 0xe5, 0xd6, 0xbb, 0xea,
	0x90, 0x55, 0x53, 0xff, 0xe5, 0xe3, 0x2f, 0x19, 0xd4, 0x7a, 0x95, 0xf4, 0xd6, 0x5b, 0x57, 0x2f,
	0x1d, 0x3f, 0xfc, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xfe, 0x86, 0x67, 0x63, 0x2e, 0x19, 0x00,
	0x00,
}
