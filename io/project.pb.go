// Code generated by protoc-gen-go. DO NOT EDIT.
// source: io/common/project.proto

package io

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ProjectStatus int32

const (
	// Zero based enum, don't use 0.
	ProjectStatus_NO_PROJECT_STATUS ProjectStatus = 0
	// Active projects allow for creation of records (turned on by default).
	ProjectStatus_PROJECT_ACTIVE_FOR_OBJECT_CREATION ProjectStatus = 1
	// Disabled projects do not allow for creation of records (i.e. temporarily disable enroling of members / creating of coupons, etc).
	ProjectStatus_PROJECT_DISABLED_FOR_OBJECT_CREATION ProjectStatus = 2
	// Default status for all projects. A draft project can do everything a published program can:
	// Cards can be created, stats will show up, etc.
	// Data belonging to draft projects is automatically purged every 7 days.
	// A draft project uses a PassKit Apple Developer Certificate, and has a PassKit legal disclaimer on the back.
	// Draft projects cannot be used for a production setup.
	ProjectStatus_PROJECT_DRAFT ProjectStatus = 4
	// A project can only be published if a custom Apple Developer Certificate is uploaded, if payment details have been provided,
	// and an account email address has been validated.
	// Published projects do not have a PassKit legal disclaimer on the back.
	// Published projects do not have their data purged on a 7 day basis.
	ProjectStatus_PROJECT_PUBLISHED ProjectStatus = 8
	// A project is private: records can only by created by authorized users / via the portal interface.
	ProjectStatus_PROJECT_PRIVATE ProjectStatus = 16
	// The project is currently over quota, and new records cannot be created (set by system only; cannot be set by user)
	ProjectStatus_PROJECT_OVER_QUOTA ProjectStatus = 32
	// A project which needs to be deleted. If delete flag is set, project will be deleted in the near future.
	ProjectStatus_PROJECT_DELETED ProjectStatus = 64
)

var ProjectStatus_name = map[int32]string{
	0:  "NO_PROJECT_STATUS",
	1:  "PROJECT_ACTIVE_FOR_OBJECT_CREATION",
	2:  "PROJECT_DISABLED_FOR_OBJECT_CREATION",
	4:  "PROJECT_DRAFT",
	8:  "PROJECT_PUBLISHED",
	16: "PROJECT_PRIVATE",
	32: "PROJECT_OVER_QUOTA",
	64: "PROJECT_DELETED",
}

var ProjectStatus_value = map[string]int32{
	"NO_PROJECT_STATUS":                    0,
	"PROJECT_ACTIVE_FOR_OBJECT_CREATION":   1,
	"PROJECT_DISABLED_FOR_OBJECT_CREATION": 2,
	"PROJECT_DRAFT":                        4,
	"PROJECT_PUBLISHED":                    8,
	"PROJECT_PRIVATE":                      16,
	"PROJECT_OVER_QUOTA":                   32,
	"PROJECT_DELETED":                      64,
}

func (x ProjectStatus) String() string {
	return proto.EnumName(ProjectStatus_name, int32(x))
}

func (ProjectStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a8ef3e8cce3ff548, []int{0}
}

type Project struct {
	// The PassProtocol the project implements.
	Protocol PassProtocol `protobuf:"varint,1,opt,name=protocol,proto3,enum=io.PassProtocol" json:"protocol,omitempty"`
	// The class ID that the projects refers to (highest level protocol object; i.e. member program id, coupon campaign id, etc).
	ClassId string `protobuf:"bytes,2,opt,name=classId,proto3" json:"classId,omitempty"`
	// The project name.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// The project short-code; used for creating public project URL's.
	ShortCode string `protobuf:"bytes,4,opt,name=shortCode,proto3" json:"shortCode,omitempty"`
	// The timestamp when the project was created.
	Created *timestamp.Timestamp `protobuf:"bytes,5,opt,name=created,proto3" json:"created,omitempty"`
	// A shared secret used for creating signed links.
	// @tag: validateGeneric:"-" validateCreate:"-" validateUpdate:"-"
	Secret string `protobuf:"bytes,6,opt,name=secret,proto3" json:"secret,omitempty" validateGeneric:"-" validateCreate:"-" validateUpdate:"-"`
	// A key used to create encrypted, signed links.
	// @tag: validateGeneric:"-" validateCreate:"-" validateUpdate:"-"
	Key                  string   `protobuf:"bytes,7,opt,name=key,proto3" json:"key,omitempty" validateGeneric:"-" validateCreate:"-" validateUpdate:"-"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Project) Reset()         { *m = Project{} }
func (m *Project) String() string { return proto.CompactTextString(m) }
func (*Project) ProtoMessage()    {}
func (*Project) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8ef3e8cce3ff548, []int{0}
}

func (m *Project) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Project.Unmarshal(m, b)
}
func (m *Project) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Project.Marshal(b, m, deterministic)
}
func (m *Project) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Project.Merge(m, src)
}
func (m *Project) XXX_Size() int {
	return xxx_messageInfo_Project.Size(m)
}
func (m *Project) XXX_DiscardUnknown() {
	xxx_messageInfo_Project.DiscardUnknown(m)
}

var xxx_messageInfo_Project proto.InternalMessageInfo

func (m *Project) GetProtocol() PassProtocol {
	if m != nil {
		return m.Protocol
	}
	return PassProtocol_PASS_PROTOCOL_DO_NOT_USE
}

func (m *Project) GetClassId() string {
	if m != nil {
		return m.ClassId
	}
	return ""
}

func (m *Project) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Project) GetShortCode() string {
	if m != nil {
		return m.ShortCode
	}
	return ""
}

func (m *Project) GetCreated() *timestamp.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *Project) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

func (m *Project) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type ProjectByShortCodeResult struct {
	Project              *Project      `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	Template             *PassTemplate `protobuf:"bytes,2,opt,name=template,proto3" json:"template,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ProjectByShortCodeResult) Reset()         { *m = ProjectByShortCodeResult{} }
func (m *ProjectByShortCodeResult) String() string { return proto.CompactTextString(m) }
func (*ProjectByShortCodeResult) ProtoMessage()    {}
func (*ProjectByShortCodeResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8ef3e8cce3ff548, []int{1}
}

func (m *ProjectByShortCodeResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProjectByShortCodeResult.Unmarshal(m, b)
}
func (m *ProjectByShortCodeResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProjectByShortCodeResult.Marshal(b, m, deterministic)
}
func (m *ProjectByShortCodeResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProjectByShortCodeResult.Merge(m, src)
}
func (m *ProjectByShortCodeResult) XXX_Size() int {
	return xxx_messageInfo_ProjectByShortCodeResult.Size(m)
}
func (m *ProjectByShortCodeResult) XXX_DiscardUnknown() {
	xxx_messageInfo_ProjectByShortCodeResult.DiscardUnknown(m)
}

var xxx_messageInfo_ProjectByShortCodeResult proto.InternalMessageInfo

func (m *ProjectByShortCodeResult) GetProject() *Project {
	if m != nil {
		return m.Project
	}
	return nil
}

func (m *ProjectByShortCodeResult) GetTemplate() *PassTemplate {
	if m != nil {
		return m.Template
	}
	return nil
}

type ProjectStatusFilter struct {
	Status               ProjectStatus `protobuf:"varint,1,opt,name=status,proto3,enum=io.ProjectStatus" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ProjectStatusFilter) Reset()         { *m = ProjectStatusFilter{} }
func (m *ProjectStatusFilter) String() string { return proto.CompactTextString(m) }
func (*ProjectStatusFilter) ProtoMessage()    {}
func (*ProjectStatusFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8ef3e8cce3ff548, []int{2}
}

func (m *ProjectStatusFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProjectStatusFilter.Unmarshal(m, b)
}
func (m *ProjectStatusFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProjectStatusFilter.Marshal(b, m, deterministic)
}
func (m *ProjectStatusFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProjectStatusFilter.Merge(m, src)
}
func (m *ProjectStatusFilter) XXX_Size() int {
	return xxx_messageInfo_ProjectStatusFilter.Size(m)
}
func (m *ProjectStatusFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_ProjectStatusFilter.DiscardUnknown(m)
}

var xxx_messageInfo_ProjectStatusFilter proto.InternalMessageInfo

func (m *ProjectStatusFilter) GetStatus() ProjectStatus {
	if m != nil {
		return m.Status
	}
	return ProjectStatus_NO_PROJECT_STATUS
}

func init() {
	proto.RegisterEnum("io.ProjectStatus", ProjectStatus_name, ProjectStatus_value)
	proto.RegisterType((*Project)(nil), "io.Project")
	proto.RegisterType((*ProjectByShortCodeResult)(nil), "io.ProjectByShortCodeResult")
	proto.RegisterType((*ProjectStatusFilter)(nil), "io.ProjectStatusFilter")
}

func init() {
	proto.RegisterFile("io/common/project.proto", fileDescriptor_a8ef3e8cce3ff548)
}

var fileDescriptor_a8ef3e8cce3ff548 = []byte{
	// 502 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0x51, 0x6f, 0xda, 0x3e,
	0x14, 0xc5, 0xff, 0xa1, 0xfc, 0xa1, 0xbd, 0xa8, 0x6b, 0x70, 0xb5, 0x2e, 0x43, 0x93, 0x86, 0x50,
	0x37, 0xb1, 0x69, 0x4a, 0x24, 0xb6, 0xe7, 0xa9, 0x01, 0x82, 0x96, 0x15, 0x35, 0x99, 0x63, 0x78,
	0xd8, 0x0b, 0x4a, 0x83, 0x47, 0x33, 0x92, 0x5e, 0x14, 0x9b, 0x87, 0x7e, 0xa5, 0x7d, 0xad, 0xed,
	0x83, 0x4c, 0x38, 0x31, 0xb4, 0xd2, 0xde, 0x7c, 0x7f, 0xe7, 0xd8, 0x57, 0xe7, 0xc8, 0xf0, 0x22,
	0x45, 0x27, 0xc1, 0x3c, 0xc7, 0x7b, 0x67, 0x53, 0xe0, 0x4f, 0x9e, 0x48, 0x7b, 0x53, 0xa0, 0x44,
	0x52, 0x4b, 0xb1, 0xf3, 0x7a, 0x85, 0xb8, 0xca, 0xb8, 0xa3, 0xc8, 0xed, 0xf6, 0x87, 0x23, 0xd3,
	0x9c, 0x0b, 0x19, 0xe7, 0x9b, 0xd2, 0xd4, 0x79, 0xf9, 0xe4, 0xb6, 0xc4, 0x04, 0x33, 0x51, 0x49,
	0xd6, 0x41, 0x92, 0x3c, 0xdf, 0x64, 0xb1, 0xe4, 0xa5, 0xd2, 0xfb, 0x6d, 0x40, 0x33, 0x2c, 0x77,
	0x91, 0x0f, 0x70, 0xac, 0x2f, 0x5a, 0x46, 0xd7, 0xe8, 0x3f, 0x1b, 0x98, 0x76, 0x8a, 0x76, 0x18,
	0x0b, 0x11, 0x56, 0x9c, 0xee, 0x1d, 0xc4, 0x82, 0x66, 0x92, 0xc5, 0x42, 0xf8, 0x4b, 0xab, 0xd6,
	0x35, 0xfa, 0x27, 0x54, 0x8f, 0x84, 0x40, 0xfd, 0x3e, 0xce, 0xb9, 0x75, 0xa4, 0xb0, 0x3a, 0x93,
	0x57, 0x70, 0x22, 0xee, 0xb0, 0x90, 0x23, 0x5c, 0x72, 0xab, 0xae, 0x84, 0x03, 0x20, 0x9f, 0xa0,
	0x99, 0x14, 0x3c, 0x96, 0x7c, 0x69, 0xfd, 0xdf, 0x35, 0xfa, 0xad, 0x41, 0xc7, 0x2e, 0xd3, 0xda,
	0x3a, 0xad, 0xcd, 0x74, 0x5a, 0xaa, 0xad, 0xe4, 0x02, 0x1a, 0x82, 0x27, 0x05, 0x97, 0x56, 0x43,
	0x3d, 0x58, 0x4d, 0xc4, 0x84, 0xa3, 0x35, 0x7f, 0xb0, 0x9a, 0x0a, 0xee, 0x8e, 0x3d, 0x04, 0xab,
	0x0a, 0x39, 0x7c, 0x88, 0xf4, 0x56, 0xca, 0xc5, 0x36, 0x93, 0xe4, 0x0d, 0x34, 0xab, 0xb2, 0x55,
	0xe8, 0xd6, 0xa0, 0xa5, 0x42, 0x97, 0x88, 0x6a, 0x6d, 0x57, 0x8e, 0xae, 0x4e, 0xe5, 0x6d, 0x1d,
	0xca, 0x61, 0x15, 0xa7, 0x7b, 0x47, 0xef, 0x0a, 0xce, 0xab, 0x17, 0x22, 0x19, 0xcb, 0xad, 0x98,
	0xa4, 0x99, 0xe4, 0x05, 0x79, 0x07, 0x0d, 0xa1, 0xe6, 0xaa, 0xdf, 0xf6, 0xa3, 0x55, 0xa5, 0x91,
	0x56, 0x86, 0xf7, 0x7f, 0x0c, 0x38, 0x7d, 0xa2, 0x90, 0xe7, 0xd0, 0xbe, 0x09, 0x16, 0x21, 0x0d,
	0xbe, 0x7a, 0x23, 0xb6, 0x88, 0x98, 0xcb, 0x66, 0x91, 0xf9, 0x1f, 0x79, 0x0b, 0x3d, 0xcd, 0xdc,
	0x11, 0xf3, 0xe7, 0xde, 0x62, 0x12, 0xd0, 0x45, 0x30, 0x54, 0x64, 0x44, 0x3d, 0x97, 0xf9, 0xc1,
	0x8d, 0x69, 0x90, 0x3e, 0x5c, 0x6a, 0xdf, 0xd8, 0x8f, 0xdc, 0xe1, 0xd4, 0x1b, 0xff, 0xd3, 0x59,
	0x23, 0x6d, 0x38, 0xdd, 0x3b, 0xa9, 0x3b, 0x61, 0x66, 0x7d, 0xb7, 0x5b, 0xa3, 0x70, 0x36, 0x9c,
	0xfa, 0xd1, 0x17, 0x6f, 0x6c, 0x1e, 0x93, 0x73, 0x38, 0xdb, 0x63, 0xea, 0xcf, 0x5d, 0xe6, 0x99,
	0x26, 0xb9, 0x00, 0xa2, 0x61, 0x30, 0xf7, 0xe8, 0xe2, 0xdb, 0x2c, 0x60, 0xae, 0xd9, 0x7d, 0x6c,
	0x1e, 0x7b, 0x53, 0x8f, 0x79, 0x63, 0xf3, 0x6a, 0xf8, 0x19, 0xce, 0x52, 0xb4, 0x37, 0xb1, 0x10,
	0xeb, 0x54, 0xda, 0xe1, 0x75, 0x8a, 0xdf, 0x2f, 0x85, 0x8c, 0xc5, 0xdd, 0x9e, 0x25, 0x98, 0x3b,
	0x29, 0x3a, 0x39, 0x2e, 0x79, 0xe6, 0x88, 0xe5, 0xda, 0x59, 0xa1, 0x93, 0xe2, 0xaf, 0x5a, 0x3d,
	0xbc, 0xf6, 0xf1, 0xb6, 0xa1, 0x3e, 0xc8, 0xc7, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x9e, 0x10,
	0x45, 0xb6, 0x3b, 0x03, 0x00, 0x00,
}
