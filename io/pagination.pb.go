// Code generated by protoc-gen-go. DO NOT EDIT.
// source: io/common/pagination.proto

package io

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Pagination struct {
	// Limit the number of records returned. If not specified, a default of 25 is used.  Enter -1 for all records.
	Limit int32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	// Allows you to offset the first record returned by the limit.
	Offset int32 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// Array of column names to filter results by.
	FilterField []string `protobuf:"bytes,3,rep,name=filterField,proto3" json:"filterField,omitempty"`
	// Array of values to test against the filter fields.
	FilterValue []string `protobuf:"bytes,4,rep,name=filterValue,proto3" json:"filterValue,omitempty"`
	// will be whitelisted operators in io core
	FilterOperator []string `protobuf:"bytes,5,rep,name=filterOperator,proto3" json:"filterOperator,omitempty"`
	// Field to order results by.
	OrderBy string `protobuf:"bytes,6,opt,name=orderBy,proto3" json:"orderBy,omitempty"`
	// Will return in ascending order if true, or descending order if false.
	OrderAsc             bool     `protobuf:"varint,7,opt,name=orderAsc,proto3" json:"orderAsc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pagination) Reset()         { *m = Pagination{} }
func (m *Pagination) String() string { return proto.CompactTextString(m) }
func (*Pagination) ProtoMessage()    {}
func (*Pagination) Descriptor() ([]byte, []int) {
	return fileDescriptor_3022e52cf9a6ff9e, []int{0}
}

func (m *Pagination) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pagination.Unmarshal(m, b)
}
func (m *Pagination) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pagination.Marshal(b, m, deterministic)
}
func (m *Pagination) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pagination.Merge(m, src)
}
func (m *Pagination) XXX_Size() int {
	return xxx_messageInfo_Pagination.Size(m)
}
func (m *Pagination) XXX_DiscardUnknown() {
	xxx_messageInfo_Pagination.DiscardUnknown(m)
}

var xxx_messageInfo_Pagination proto.InternalMessageInfo

func (m *Pagination) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *Pagination) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *Pagination) GetFilterField() []string {
	if m != nil {
		return m.FilterField
	}
	return nil
}

func (m *Pagination) GetFilterValue() []string {
	if m != nil {
		return m.FilterValue
	}
	return nil
}

func (m *Pagination) GetFilterOperator() []string {
	if m != nil {
		return m.FilterOperator
	}
	return nil
}

func (m *Pagination) GetOrderBy() string {
	if m != nil {
		return m.OrderBy
	}
	return ""
}

func (m *Pagination) GetOrderAsc() bool {
	if m != nil {
		return m.OrderAsc
	}
	return false
}

type Filter struct {
	// Array of column names to filter results by.
	FilterField []string `protobuf:"bytes,1,rep,name=filterField,proto3" json:"filterField,omitempty"`
	// Array of values to test against the filter fields.
	FilterValue []string `protobuf:"bytes,2,rep,name=filterValue,proto3" json:"filterValue,omitempty"`
	// will be whitelisted operators in io core
	FilterOperator       []string `protobuf:"bytes,3,rep,name=filterOperator,proto3" json:"filterOperator,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Filter) Reset()         { *m = Filter{} }
func (m *Filter) String() string { return proto.CompactTextString(m) }
func (*Filter) ProtoMessage()    {}
func (*Filter) Descriptor() ([]byte, []int) {
	return fileDescriptor_3022e52cf9a6ff9e, []int{1}
}

func (m *Filter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Filter.Unmarshal(m, b)
}
func (m *Filter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Filter.Marshal(b, m, deterministic)
}
func (m *Filter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Filter.Merge(m, src)
}
func (m *Filter) XXX_Size() int {
	return xxx_messageInfo_Filter.Size(m)
}
func (m *Filter) XXX_DiscardUnknown() {
	xxx_messageInfo_Filter.DiscardUnknown(m)
}

var xxx_messageInfo_Filter proto.InternalMessageInfo

func (m *Filter) GetFilterField() []string {
	if m != nil {
		return m.FilterField
	}
	return nil
}

func (m *Filter) GetFilterValue() []string {
	if m != nil {
		return m.FilterValue
	}
	return nil
}

func (m *Filter) GetFilterOperator() []string {
	if m != nil {
		return m.FilterOperator
	}
	return nil
}

func init() {
	proto.RegisterType((*Pagination)(nil), "io.Pagination")
	proto.RegisterType((*Filter)(nil), "io.Filter")
}

func init() { proto.RegisterFile("io/common/pagination.proto", fileDescriptor_3022e52cf9a6ff9e) }

var fileDescriptor_3022e52cf9a6ff9e = []byte{
	// 346 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0x41, 0x8b, 0xda, 0x40,
	0x18, 0x86, 0x49, 0xd4, 0xa8, 0x53, 0x68, 0x21, 0x94, 0x32, 0x78, 0x1a, 0x3c, 0x94, 0x50, 0x9a,
	0x04, 0xda, 0x5b, 0x7b, 0xd2, 0x83, 0x20, 0x81, 0x36, 0xe4, 0xd0, 0x43, 0x6f, 0x63, 0x32, 0xa6,
	0x5f, 0x9d, 0xcc, 0x17, 0x66, 0x3e, 0x29, 0xfd, 0x1b, 0xfb, 0x33, 0x96, 0xfd, 0x91, 0x8b, 0xa3,
	0xab, 0x22, 0x0b, 0xbb, 0xb7, 0xf7, 0x7d, 0x79, 0xbe, 0x90, 0x87, 0x61, 0x33, 0xc0, 0xbc, 0xc6,
	0xae, 0x43, 0x93, 0xf7, 0xb2, 0x05, 0x23, 0x09, 0xd0, 0x64, 0xbd, 0x45, 0xc2, 0x38, 0x04, 0x9c,
	0x7d, 0xf6, 0xb1, 0x4e, 0x5b, 0x65, 0x52, 0xf7, 0x4f, 0xb6, 0xad, 0xb2, 0x39, 0xf6, 0x07, 0xc8,
	0xe5, 0xd2, 0x18, 0x24, 0x7f, 0xe0, 0x8e, 0x17, 0xf3, 0x87, 0x90, 0xb1, 0xf2, 0xfc, 0x99, 0xf8,
	0x3d, 0x1b, 0x69, 0xe8, 0x80, 0x78, 0x20, 0x82, 0x64, 0x54, 0x1d, 0x4b, 0xfc, 0x81, 0x45, 0xb8,
	0xdd, 0x3a, 0x45, 0x3c, 0xf4, 0xf3, 0xa9, 0xc5, 0x82, 0xbd, 0xd9, 0x82, 0x26, 0x65, 0x57, 0xa0,
	0x74, 0xc3, 0x07, 0x62, 0x90, 0x4c, 0xab, 0xeb, 0xe9, 0x42, 0xfc, 0x92, 0x7a, 0xaf, 0xf8, 0xf0,
	0x9a, 0xf0, 0x53, 0xfc, 0x91, 0xbd, 0x3d, 0xd6, 0x9f, 0xbd, 0xb2, 0x92, 0xd0, 0xf2, 0x91, 0x87,
	0x6e, 0xd6, 0x98, 0xb3, 0x31, 0xda, 0x46, 0xd9, 0xe5, 0x7f, 0x1e, 0x89, 0x20, 0x99, 0x56, 0x4f,
	0x35, 0x9e, 0xb1, 0x89, 0x8f, 0x0b, 0x57, 0xf3, 0xb1, 0x08, 0x92, 0x49, 0x75, 0xee, 0xdf, 0x7e,
	0xdc, 0x2d, 0x0a, 0xb6, 0xfe, 0x74, 0xa5, 0xf8, 0xe5, 0xfb, 0x25, 0x0b, 0xdc, 0xfc, 0x55, 0x35,
	0x89, 0xbd, 0x53, 0x8d, 0x20, 0x14, 0xae, 0xd7, 0x40, 0xa2, 0x46, 0x43, 0xca, 0x90, 0x00, 0x73,
	0x98, 0x3a, 0xa9, 0xb5, 0xb2, 0xa2, 0x97, 0x96, 0x5c, 0x36, 0x27, 0x16, 0xad, 0xfc, 0x7f, 0xdd,
	0xba, 0x07, 0x2f, 0xba, 0x87, 0xaf, 0x71, 0x1f, 0x3c, 0xe7, 0xbe, 0x5c, 0xb2, 0x77, 0x80, 0x59,
	0x2f, 0x9d, 0xdb, 0x01, 0x65, 0x65, 0x01, 0xf8, 0x3b, 0x69, 0x81, 0xfe, 0xec, 0x37, 0x59, 0x8d,
	0x5d, 0x5e, 0x4a, 0xe7, 0x0a, 0xa0, 0xfc, 0x04, 0xa4, 0x2d, 0x6a, 0x69, 0xda, 0xd4, 0x35, 0xbb,
	0x1c, 0xf0, 0x3e, 0x1c, 0x96, 0xc5, 0x1a, 0x37, 0x91, 0x7f, 0xef, 0xaf, 0x8f, 0x01, 0x00, 0x00,
	0xff, 0xff, 0x03, 0xe8, 0xa4, 0x9e, 0x3f, 0x02, 0x00, 0x00,
}
