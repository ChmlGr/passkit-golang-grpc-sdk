// Code generated by protoc-gen-go. DO NOT EDIT.
// source: io/common/message.proto

package io

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MessageStatus int32

const (
	MessageStatus_CREATED                  MessageStatus = 0
	MessageStatus_PROCESSING               MessageStatus = 1
	MessageStatus_ABORTED_WITH_ERRORS      MessageStatus = 2
	MessageStatus_COMPLETED_WITH_WARNINGS  MessageStatus = 3
	MessageStatus_COMPLETED_WITH_ERRORS    MessageStatus = 4
	MessageStatus_COMPLETED_WITHOUT_ERRORS MessageStatus = 5
)

var MessageStatus_name = map[int32]string{
	0: "CREATED",
	1: "PROCESSING",
	2: "ABORTED_WITH_ERRORS",
	3: "COMPLETED_WITH_WARNINGS",
	4: "COMPLETED_WITH_ERRORS",
	5: "COMPLETED_WITHOUT_ERRORS",
}

var MessageStatus_value = map[string]int32{
	"CREATED":                  0,
	"PROCESSING":               1,
	"ABORTED_WITH_ERRORS":      2,
	"COMPLETED_WITH_WARNINGS":  3,
	"COMPLETED_WITH_ERRORS":    4,
	"COMPLETED_WITHOUT_ERRORS": 5,
}

func (x MessageStatus) String() string {
	return proto.EnumName(MessageStatus_name, int32(x))
}

func (MessageStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7f2d6a12491c1a61, []int{0}
}

type Message struct {
	// the protocol that this message is associated with.
	Protocol PassProtocol `protobuf:"varint,1,opt,name=protocol,proto3,enum=io.PassProtocol" json:"protocol,omitempty"`
	// the id of the company that made the message
	CompanyId string `protobuf:"bytes,2,opt,name=companyId,proto3" json:"companyId,omitempty"`
	// the higher level class id for the protocol.
	ClassId string `protobuf:"bytes,3,opt,name=classId,proto3" json:"classId,omitempty"`
	// the unique id for this message
	Uuid string `protobuf:"bytes,4,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// the status of the message.
	Status MessageStatus `protobuf:"varint,5,opt,name=status,proto3,enum=io.MessageStatus" json:"status,omitempty"`
	// warning of any errors that may have occurred.
	Warning string `protobuf:"bytes,6,opt,name=warning,proto3" json:"warning,omitempty"`
	// Optional Image ID; for the Main Image that will be shown in Google Pay (Google Pay only; no image is shown for Apple Wallet).
	ImageId uint32 `protobuf:"varint,7,opt,name=imageId,proto3" json:"imageId,omitempty"`
	// Title (summary) of the message.
	Title string `protobuf:"bytes,8,opt,name=title,proto3" json:"title,omitempty"`
	// Localized title of the message.
	LocalizedTitle *LocalizedString `protobuf:"bytes,9,opt,name=localizedTitle,proto3" json:"localizedTitle,omitempty"`
	// Content of the message (finer details).
	Content string `protobuf:"bytes,10,opt,name=content,proto3" json:"content,omitempty"`
	// Localized content of the message.
	LocalizedContent *LocalizedString `protobuf:"bytes,11,opt,name=localizedContent,proto3" json:"localizedContent,omitempty"`
	// Start date indicates when the message is shown on the pass.
	StartDate *timestamp.Timestamp `protobuf:"bytes,12,opt,name=startDate,proto3" json:"startDate,omitempty"`
	// End date indicates when the message is removed from the pass.
	EndDate *timestamp.Timestamp `protobuf:"bytes,13,opt,name=endDate,proto3" json:"endDate,omitempty"`
	// optional filter used determine which members qualify for this message.
	Filter *Filter `protobuf:"bytes,14,opt,name=filter,proto3" json:"filter,omitempty"`
	// number of records this message will be sent to.
	RecordsMatchingSegment uint32 `protobuf:"varint,15,opt,name=recordsMatchingSegment,proto3" json:"recordsMatchingSegment,omitempty"`
	// number of records updated with this message.
	RecordsSuccessfullyUpdate uint32 `protobuf:"varint,16,opt,name=recordsSuccessfullyUpdate,proto3" json:"recordsSuccessfullyUpdate,omitempty"`
	// number of records that failed updated with this message.
	RecordsFailedToUpdate uint32 `protobuf:"varint,17,opt,name=recordsFailedToUpdate,proto3" json:"recordsFailedToUpdate,omitempty"`
	// The date the message was created in the PassKit system.
	Created              *timestamp.Timestamp `protobuf:"bytes,18,opt,name=created,proto3" json:"created,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f2d6a12491c1a61, []int{0}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetProtocol() PassProtocol {
	if m != nil {
		return m.Protocol
	}
	return PassProtocol_RAW_PROTOCOL
}

func (m *Message) GetCompanyId() string {
	if m != nil {
		return m.CompanyId
	}
	return ""
}

func (m *Message) GetClassId() string {
	if m != nil {
		return m.ClassId
	}
	return ""
}

func (m *Message) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Message) GetStatus() MessageStatus {
	if m != nil {
		return m.Status
	}
	return MessageStatus_CREATED
}

func (m *Message) GetWarning() string {
	if m != nil {
		return m.Warning
	}
	return ""
}

func (m *Message) GetImageId() uint32 {
	if m != nil {
		return m.ImageId
	}
	return 0
}

func (m *Message) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Message) GetLocalizedTitle() *LocalizedString {
	if m != nil {
		return m.LocalizedTitle
	}
	return nil
}

func (m *Message) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Message) GetLocalizedContent() *LocalizedString {
	if m != nil {
		return m.LocalizedContent
	}
	return nil
}

func (m *Message) GetStartDate() *timestamp.Timestamp {
	if m != nil {
		return m.StartDate
	}
	return nil
}

func (m *Message) GetEndDate() *timestamp.Timestamp {
	if m != nil {
		return m.EndDate
	}
	return nil
}

func (m *Message) GetFilter() *Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *Message) GetRecordsMatchingSegment() uint32 {
	if m != nil {
		return m.RecordsMatchingSegment
	}
	return 0
}

func (m *Message) GetRecordsSuccessfullyUpdate() uint32 {
	if m != nil {
		return m.RecordsSuccessfullyUpdate
	}
	return 0
}

func (m *Message) GetRecordsFailedToUpdate() uint32 {
	if m != nil {
		return m.RecordsFailedToUpdate
	}
	return 0
}

func (m *Message) GetCreated() *timestamp.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func init() {
	proto.RegisterEnum("io.MessageStatus", MessageStatus_name, MessageStatus_value)
	proto.RegisterType((*Message)(nil), "io.Message")
}

func init() { proto.RegisterFile("io/common/message.proto", fileDescriptor_7f2d6a12491c1a61) }

var fileDescriptor_7f2d6a12491c1a61 = []byte{
	// 635 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x93, 0xed, 0x4e, 0xdb, 0x3a,
	0x18, 0xc7, 0x4f, 0x4b, 0x69, 0xa9, 0x39, 0x94, 0x60, 0x0e, 0x07, 0xd3, 0x83, 0x74, 0x2a, 0x3e,
	0x75, 0x13, 0x4d, 0x24, 0x86, 0xa6, 0x49, 0x9b, 0x34, 0x41, 0x29, 0x2c, 0xe2, 0xa5, 0x95, 0x13,
	0x84, 0xb4, 0x2f, 0xc8, 0x24, 0xc6, 0x58, 0x24, 0x76, 0x14, 0x3b, 0x42, 0xec, 0x02, 0x76, 0x13,
	0xbb, 0x83, 0x5d, 0xe5, 0x14, 0xd7, 0xa1, 0xc0, 0x86, 0xf8, 0xd4, 0x3e, 0xcf, 0xef, 0xff, 0x7f,
	0x5e, 0xdc, 0xa7, 0x60, 0x9d, 0x4b, 0x2f, 0x92, 0x69, 0x2a, 0x85, 0x97, 0x52, 0xa5, 0x08, 0xa3,
	0x6e, 0x96, 0x4b, 0x2d, 0x61, 0x9d, 0xcb, 0xee, 0xe6, 0x0c, 0x26, 0x32, 0x22, 0x09, 0xff, 0x46,
	0x34, 0x97, 0x62, 0xaa, 0xe8, 0x76, 0x67, 0x34, 0x23, 0x8c, 0x8b, 0xc7, 0xec, 0x7f, 0x26, 0x25,
	0x4b, 0xa8, 0x67, 0xa2, 0xab, 0xe2, 0xda, 0xd3, 0x3c, 0xa5, 0x4a, 0x93, 0x34, 0xb3, 0x82, 0x6d,
	0xf3, 0x11, 0x0d, 0x18, 0x15, 0x03, 0x75, 0x47, 0x18, 0xa3, 0xb9, 0x27, 0xb3, 0xb2, 0x82, 0xf2,
	0x88, 0x10, 0x52, 0x9b, 0x6a, 0xca, 0xaa, 0x37, 0x1e, 0xb5, 0x32, 0x3e, 0x99, 0x58, 0xb4, 0xf5,
	0xbd, 0x09, 0x5a, 0xa7, 0xd3, 0xc9, 0xe1, 0x36, 0x58, 0xa8, 0x30, 0xaa, 0xf5, 0x6a, 0xfd, 0xce,
	0x8e, 0xe3, 0x72, 0xe9, 0x4e, 0x88, 0x52, 0x13, 0x9b, 0xc7, 0x0f, 0x0a, 0xb8, 0x09, 0xda, 0x91,
	0x4c, 0x33, 0x22, 0xee, 0xfd, 0x18, 0xd5, 0x7b, 0xb5, 0x7e, 0x1b, 0xcf, 0x12, 0x10, 0x81, 0x56,
	0x94, 0x10, 0xa5, 0xfc, 0x18, 0xcd, 0x19, 0x56, 0x85, 0x10, 0x82, 0x46, 0x51, 0xf0, 0x18, 0x35,
	0x4c, 0xda, 0x7c, 0x87, 0x6f, 0x40, 0x53, 0x69, 0xa2, 0x0b, 0x85, 0xe6, 0x4d, 0xdf, 0x95, 0xb2,
	0xaf, 0x1d, 0x2b, 0x30, 0x00, 0x5b, 0x41, 0x59, 0xf8, 0x8e, 0xe4, 0x82, 0x0b, 0x86, 0x9a, 0xd3,
	0xc2, 0x36, 0x2c, 0x09, 0x4f, 0x09, 0xa3, 0x7e, 0x8c, 0x5a, 0xbd, 0x5a, 0x7f, 0x09, 0x57, 0x21,
	0xfc, 0x07, 0xcc, 0x6b, 0xae, 0x13, 0x8a, 0x16, 0x8c, 0x63, 0x1a, 0xc0, 0x8f, 0xa0, 0x63, 0x7f,
	0x16, 0x1a, 0x87, 0x06, 0xb7, 0x7b, 0xb5, 0xfe, 0xe2, 0xce, 0x6a, 0xd9, 0xfc, 0xa4, 0x22, 0x81,
	0xce, 0xb9, 0x60, 0xf8, 0x99, 0xd4, 0xec, 0x27, 0x85, 0xa6, 0x42, 0x23, 0x60, 0xf7, 0x9b, 0x86,
	0xf0, 0x33, 0x70, 0x1e, 0xb4, 0x43, 0x2b, 0x59, 0x7c, 0xb9, 0xf0, 0x6f, 0x62, 0xf8, 0x01, 0xb4,
	0x95, 0x26, 0xb9, 0x3e, 0x20, 0x9a, 0xa2, 0xbf, 0x8d, 0xb3, 0xeb, 0x4e, 0x0f, 0xc2, 0xad, 0x0e,
	0xc2, 0x0d, 0xab, 0x83, 0xc0, 0x33, 0x31, 0xdc, 0x05, 0x2d, 0x2a, 0x62, 0xe3, 0x5b, 0x7a, 0xd5,
	0x57, 0x49, 0xe1, 0x16, 0x68, 0x5e, 0xf3, 0x44, 0xd3, 0x1c, 0x75, 0x8c, 0x09, 0x94, 0x63, 0x1e,
	0x9a, 0x0c, 0xb6, 0x04, 0xbe, 0x07, 0xff, 0xe6, 0x34, 0x92, 0x79, 0xac, 0x4e, 0x89, 0x8e, 0x6e,
	0xb8, 0x60, 0x01, 0x65, 0x69, 0xb9, 0xda, 0xb2, 0x79, 0xea, 0x17, 0x28, 0xfc, 0x04, 0x36, 0x2c,
	0x09, 0x8a, 0x28, 0xa2, 0x4a, 0x5d, 0x17, 0x49, 0x72, 0x7f, 0x9e, 0xc5, 0xe5, 0x8c, 0x8e, 0xb1,
	0xbe, 0x2c, 0x80, 0xbb, 0x60, 0xcd, 0xc2, 0x43, 0xc2, 0x13, 0x1a, 0x87, 0xd2, 0x3a, 0x57, 0x8c,
	0xf3, 0xcf, 0xb0, 0x7c, 0x85, 0x28, 0xa7, 0x44, 0xd3, 0x18, 0xc1, 0xd7, 0x5f, 0xc1, 0x4a, 0xdf,
	0xfe, 0xa8, 0x81, 0xa5, 0x27, 0x17, 0x07, 0x17, 0x41, 0x6b, 0x88, 0x47, 0x7b, 0xe1, 0xe8, 0xc0,
	0xf9, 0x0b, 0x76, 0x00, 0x98, 0xe0, 0xf1, 0x70, 0x14, 0x04, 0xfe, 0xd9, 0x91, 0x53, 0x83, 0xeb,
	0x60, 0x75, 0x6f, 0x7f, 0x8c, 0xc3, 0xd1, 0xc1, 0xe5, 0x85, 0x1f, 0x7e, 0xb9, 0x1c, 0x61, 0x3c,
	0xc6, 0x81, 0x53, 0x87, 0xff, 0x81, 0xf5, 0xe1, 0xf8, 0x74, 0x72, 0x32, 0x7a, 0x40, 0x17, 0x7b,
	0xf8, 0xcc, 0x3f, 0x3b, 0x0a, 0x9c, 0x39, 0xb8, 0x01, 0xd6, 0x9e, 0x41, 0xeb, 0x6b, 0xc0, 0x4d,
	0x80, 0x9e, 0xa2, 0xf1, 0x79, 0x58, 0xd1, 0xf9, 0xfd, 0x7d, 0xb0, 0xcc, 0xa5, 0x9b, 0x11, 0xa5,
	0x6e, 0xb9, 0x76, 0x27, 0xc7, 0x5c, 0x7e, 0xed, 0x33, 0xae, 0x6f, 0x8a, 0x2b, 0x37, 0x92, 0xa9,
	0x57, 0xfe, 0x45, 0x8f, 0xb9, 0xf6, 0xac, 0x60, 0xc0, 0x64, 0x42, 0x04, 0x1b, 0xa8, 0xf8, 0xd6,
	0xe3, 0xf2, 0x67, 0xbd, 0x31, 0x39, 0xf6, 0xe5, 0x55, 0xd3, 0xac, 0xff, 0xee, 0x57, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x2b, 0xcc, 0xe9, 0xe1, 0xb4, 0x04, 0x00, 0x00,
}
