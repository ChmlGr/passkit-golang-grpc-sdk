// Code generated by protoc-gen-go. DO NOT EDIT.
// source: io/flights/cabin_codes/cabin_codes.proto

package cabincodes

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Compartment Code descriptions represent most frequently used classes. Airlines have discretion on how they use these codes.
type CompartmentCode int32

const (
	// Compartment code not provided
	CompartmentCode_NONE CompartmentCode = 0
	// First class suite (previously supersonic)
	CompartmentCode_R CompartmentCode = 1
	// First class premium
	CompartmentCode_P CompartmentCode = 2
	// First class
	CompartmentCode_F CompartmentCode = 3
	// First class discounted
	CompartmentCode_A CompartmentCode = 4
	// Business class premium
	CompartmentCode_J CompartmentCode = 5
	// Business class
	CompartmentCode_C CompartmentCode = 6
	// Business class discounted
	CompartmentCode_D CompartmentCode = 7
	// Business class discounted
	CompartmentCode_I CompartmentCode = 8
	// Business class discounted
	CompartmentCode_Z CompartmentCode = 9
	// Premium economy
	CompartmentCode_W CompartmentCode = 10
	// Premium economy discounted
	CompartmentCode_E CompartmentCode = 11
	// Economy
	CompartmentCode_S CompartmentCode = 12
	// Economy
	CompartmentCode_Y CompartmentCode = 13
	// Economy discounted
	CompartmentCode_B CompartmentCode = 14
	// Economy discounted
	CompartmentCode_H CompartmentCode = 15
	// Economy discounted
	CompartmentCode_K CompartmentCode = 16
	// Economy discounted
	CompartmentCode_L CompartmentCode = 17
	// Economy discounted
	CompartmentCode_M CompartmentCode = 18
	// Economy discounted
	CompartmentCode_N CompartmentCode = 19
	// Economy discounted
	CompartmentCode_O CompartmentCode = 20
	// Economy discounted
	CompartmentCode_Q CompartmentCode = 21
	// Premium economy discounted / Economy discounted
	CompartmentCode_T CompartmentCode = 22
	// Economy discounted
	CompartmentCode_V CompartmentCode = 23
	// Economy discounted
	CompartmentCode_X CompartmentCode = 24
	// Conditional reservation
	CompartmentCode_G CompartmentCode = 25
	// Shuttle service
	CompartmentCode_U CompartmentCode = 26
)

var CompartmentCode_name = map[int32]string{
	0:  "NONE",
	1:  "R",
	2:  "P",
	3:  "F",
	4:  "A",
	5:  "J",
	6:  "C",
	7:  "D",
	8:  "I",
	9:  "Z",
	10: "W",
	11: "E",
	12: "S",
	13: "Y",
	14: "B",
	15: "H",
	16: "K",
	17: "L",
	18: "M",
	19: "N",
	20: "O",
	21: "Q",
	22: "T",
	23: "V",
	24: "X",
	25: "G",
	26: "U",
}

var CompartmentCode_value = map[string]int32{
	"NONE": 0,
	"R":    1,
	"P":    2,
	"F":    3,
	"A":    4,
	"J":    5,
	"C":    6,
	"D":    7,
	"I":    8,
	"Z":    9,
	"W":    10,
	"E":    11,
	"S":    12,
	"Y":    13,
	"B":    14,
	"H":    15,
	"K":    16,
	"L":    17,
	"M":    18,
	"N":    19,
	"O":    20,
	"Q":    21,
	"T":    22,
	"V":    23,
	"X":    24,
	"G":    25,
	"U":    26,
}

func (x CompartmentCode) String() string {
	return proto.EnumName(CompartmentCode_name, int32(x))
}

func (CompartmentCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_02c5283794c56ea5, []int{0}
}

func init() {
	proto.RegisterEnum("cabin_codes.CompartmentCode", CompartmentCode_name, CompartmentCode_value)
}

func init() {
	proto.RegisterFile("io/flights/cabin_codes/cabin_codes.proto", fileDescriptor_02c5283794c56ea5)
}

var fileDescriptor_02c5283794c56ea5 = []byte{
	// 265 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0xd0, 0xcb, 0x4e, 0xc2, 0x40,
	0x18, 0xc5, 0x71, 0x41, 0x40, 0x1c, 0x54, 0x8e, 0x15, 0xaf, 0x4b, 0x57, 0xc6, 0x45, 0x67, 0xe1,
	0xc2, 0xb5, 0x54, 0xf0, 0x82, 0x42, 0xbd, 0x2b, 0x1b, 0x53, 0xda, 0x0a, 0x13, 0x28, 0x5f, 0xc3,
	0xcc, 0x53, 0xf9, 0x36, 0xbe, 0x91, 0x39, 0x98, 0x18, 0x2f, 0xab, 0xdf, 0x64, 0x32, 0x99, 0xe4,
	0xfc, 0xd5, 0x81, 0x11, 0xfd, 0x36, 0x31, 0xc3, 0x91, 0xb3, 0x3a, 0x8e, 0x06, 0x66, 0xfa, 0x1a,
	0x4b, 0x92, 0xfe, 0x3a, 0xfb, 0xf9, 0x4c, 0x9c, 0x78, 0xb5, 0x1f, 0x57, 0x87, 0x1f, 0x05, 0x55,
	0x0f, 0x24, 0xcb, 0xa3, 0x99, 0xcb, 0xd2, 0xa9, 0x0b, 0x24, 0x49, 0xbd, 0xaa, 0x2a, 0x75, 0x7b,
	0xdd, 0x16, 0x16, 0xbc, 0xb2, 0x2a, 0xdc, 0xa2, 0x40, 0x42, 0x14, 0x49, 0x1b, 0x8b, 0xe4, 0x04,
	0x25, 0x72, 0x89, 0x32, 0x09, 0x50, 0x21, 0xa7, 0x58, 0x22, 0x17, 0xa8, 0x92, 0x3e, 0x96, 0xc9,
	0x13, 0x14, 0x69, 0xa1, 0x46, 0xee, 0xb0, 0x42, 0x5e, 0xb0, 0x4a, 0x9a, 0x58, 0x23, 0xe7, 0xa8,
	0x93, 0x0e, 0x40, 0xae, 0xb0, 0x4e, 0xae, 0xe1, 0x91, 0x2e, 0x36, 0x48, 0x0f, 0x0d, 0x72, 0x83,
	0x4d, 0x72, 0x8f, 0x2d, 0xf2, 0x88, 0x6d, 0xf2, 0x8c, 0x1d, 0x72, 0x86, 0x5d, 0xf2, 0x80, 0xbd,
	0xa6, 0x53, 0xfb, 0x46, 0xfc, 0x3c, 0xb2, 0x76, 0x6c, 0x9c, 0x1f, 0x76, 0x8c, 0xf8, 0xed, 0xaf,
	0x32, 0x7e, 0xc0, 0xe9, 0x1c, 0x69, 0xfb, 0xc7, 0xd6, 0x45, 0x76, 0xf4, 0xfd, 0x2c, 0x96, 0x4c,
	0x1b, 0xd1, 0x99, 0x24, 0xe9, 0x44, 0xdb, 0x64, 0xac, 0x87, 0xa2, 0xff, 0x26, 0x9d, 0x27, 0x7b,
	0x2f, 0x36, 0xc2, 0xce, 0xff, 0xff, 0x06, 0x95, 0x79, 0xdd, 0xa3, 0xcf, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xe6, 0xd4, 0xc1, 0xcd, 0x89, 0x01, 0x00, 0x00,
}
